<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:5Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Creating Batch Artifacts" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:Creating Batch Artifacts | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<ul style="list-style-type:none">
<li><a href="batch-processing001.htm#BCGJDEEH"><span class="secnum">55.1</span> Introduction to Batch Processing</a>
<ul style="list-style-type:none">
<li><a href="batch-processing001.htm#sthref2942"><span class="secnum">55.1.1</span> Steps in Batch Jobs</a></li>
<li><a href="batch-processing001.htm#sthref2945"><span class="secnum">55.1.2</span> Parallel Processing</a></li>
<li><a href="batch-processing001.htm#sthref2946"><span class="secnum">55.1.3</span> Status and Decision Elements</a></li>
<li><a href="batch-processing001.htm#sthref2949"><span class="secnum">55.1.4</span> Batch Framework Functionality</a></li>
</ul>
</li>
<li><a href="batch-processing002.htm#BCGGIBHA"><span class="secnum">55.2</span> Batch Processing in Java EE</a>
<ul style="list-style-type:none">
<li><a href="batch-processing002.htm#sthref2951"><span class="secnum">55.2.1</span> The Batch Processing Framework</a></li>
<li><a href="batch-processing002.htm#sthref2953"><span class="secnum">55.2.2</span> Creating Batch Applications</a></li>
<li><a href="batch-processing002.htm#sthref2955"><span class="secnum">55.2.3</span> Elements of a Batch Job</a></li>
<li><a href="batch-processing002.htm#sthref2957"><span class="secnum">55.2.4</span> Properties and Parameters</a></li>
<li><a href="batch-processing002.htm#sthref2959"><span class="secnum">55.2.5</span> Job Instances and Job Executions</a></li>
<li><a href="batch-processing002.htm#sthref2961"><span class="secnum">55.2.6</span> Batch and Exit Status</a></li>
</ul>
</li>
<li><a href="batch-processing003.htm#BCGHBJIG"><span class="secnum">55.3</span> Simple Use Case</a>
<ul style="list-style-type:none">
<li><a href="batch-processing003.htm#sthref2966"><span class="secnum">55.3.1</span> Chunk Step</a></li>
<li><a href="batch-processing003.htm#sthref2968"><span class="secnum">55.3.2</span> Task Step</a></li>
</ul>
</li>
<li><a href="batch-processing004.htm#BCGDDBBG"><span class="secnum">55.4</span> Using the Job Specification Language</a>
<ul style="list-style-type:none">
<li><a href="batch-processing004.htm#sthref2972"><span class="secnum">55.4.1</span> The job Element</a></li>
<li><a href="batch-processing004.htm#sthref2974"><span class="secnum">55.4.2</span> The step Element</a>
<ul style="list-style-type:none">
<li><a href="batch-processing004.htm#sthref2976"><span class="secnum">55.4.2.1</span> The chunk Element</a></li>
<li><a href="batch-processing004.htm#sthref2979"><span class="secnum">55.4.2.2</span> The batchlet Element</a></li>
<li><a href="batch-processing004.htm#sthref2981"><span class="secnum">55.4.2.3</span> The partition Element</a></li>
</ul>
</li>
<li><a href="batch-processing004.htm#sthref2983"><span class="secnum">55.4.3</span> The flow Element</a></li>
<li><a href="batch-processing004.htm#sthref2985"><span class="secnum">55.4.4</span> The split Element</a></li>
<li><a href="batch-processing004.htm#sthref2987"><span class="secnum">55.4.5</span> The decision Element</a></li>
</ul>
</li>
<li><div id="backgroundColor"><a href="batch-processing005.htm#BCGHDHGH"><span class="secnum">55.5</span> Creating Batch Artifacts</a><ul style="list-style-type:none">
<li><a href="batch-processing005.htm#sthref2990"><span class="secnum">55.5.1</span> Batch Artifact Interfaces</a></li>
<li><a href="batch-processing005.htm#BCGIFJBB"><span class="secnum">55.5.2</span> Dependency Injection in Batch Artifacts</a></li>
<li><a href="batch-processing005.htm#BCGCJEEF"><span class="secnum">55.5.3</span> Using the Context Objects from the Batch Runtime</a></li>
</ul>
</div></li>
<li><a href="batch-processing006.htm#BCGCAHCB"><span class="secnum">55.6</span> Submitting Jobs to the Batch Runtime</a>
<ul style="list-style-type:none">
<li><a href="batch-processing006.htm#sthref2997"><span class="secnum">55.6.1</span> Starting a Job</a></li>
<li><a href="batch-processing006.htm#BCGIBGFC"><span class="secnum">55.6.2</span> Checking the Status of a Job</a></li>
<li><a href="batch-processing006.htm#sthref3000"><span class="secnum">55.6.3</span> Invoking the Batch Runtime in Your Application</a></li>
</ul>
</li>
<li><a href="batch-processing007.htm#BCGBBGJI"><span class="secnum">55.7</span> Packaging Batch Applications</a></li>
<li><a href="batch-processing008.htm#BCGJHEHJ"><span class="secnum">55.8</span> The webserverlog Example Application</a>
<ul style="list-style-type:none">
<li><a href="batch-processing008.htm#sthref3004"><span class="secnum">55.8.1</span> Architecture of the webserverlog Example Application</a>
<ul style="list-style-type:none">
<li><a href="batch-processing008.htm#sthref3005"><span class="secnum">55.8.1.1</span> The Job Definition File</a></li>
<li><a href="batch-processing008.htm#sthref3006"><span class="secnum">55.8.1.2</span> The LogLine and LogFilteredLine Items</a></li>
<li><a href="batch-processing008.htm#sthref3007"><span class="secnum">55.8.1.3</span> The Chunk Step Batch Artifacts</a></li>
<li><a href="batch-processing008.htm#BCGCCFAC"><span class="secnum">55.8.1.4</span> The Listener Batch Artifacts</a></li>
<li><a href="batch-processing008.htm#sthref3008"><span class="secnum">55.8.1.5</span> The Task Step Batch Artifact</a></li>
<li><a href="batch-processing008.htm#sthref3009"><span class="secnum">55.8.1.6</span> The JavaServer Faces Pages</a></li>
<li><a href="batch-processing008.htm#sthref3010"><span class="secnum">55.8.1.7</span> The Managed Bean</a></li>
</ul>
</li>
<li><a href="batch-processing008.htm#sthref3011"><span class="secnum">55.8.2</span> Running the webserverlog Example Application</a>
<ul style="list-style-type:none">
<li><a href="batch-processing008.htm#sthref3012"><span class="secnum">55.8.2.1</span> To Run the webserverlog Example Application Using NetBeans IDE</a></li>
<li><a href="batch-processing008.htm#sthref3013"><span class="secnum">55.8.2.2</span> To Run the webserverlog Example Application Using Maven</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="batch-processing009.htm#BCGFCACD"><span class="secnum">55.9</span> The phonebilling Example Application</a>
<ul style="list-style-type:none">
<li><a href="batch-processing009.htm#sthref3016"><span class="secnum">55.9.1</span> Architecture of the phonebilling Example Application</a>
<ul style="list-style-type:none">
<li><a href="batch-processing009.htm#sthref3017"><span class="secnum">55.9.1.1</span> The Job Definition File</a></li>
<li><a href="batch-processing009.htm#sthref3018"><span class="secnum">55.9.1.2</span> The CallRecord and PhoneBill Entities</a></li>
<li><a href="batch-processing009.htm#sthref3019"><span class="secnum">55.9.1.3</span> The Call Records Chunk Step</a></li>
<li><a href="batch-processing009.htm#BCGGGAHB"><span class="secnum">55.9.1.4</span> The Phone Billing Chunk Step</a></li>
<li><a href="batch-processing009.htm#sthref3020"><span class="secnum">55.9.1.5</span> The JavaServer Faces Pages</a></li>
<li><a href="batch-processing009.htm#sthref3021"><span class="secnum">55.9.1.6</span> The Managed Bean</a></li>
</ul>
</li>
<li><a href="batch-processing009.htm#sthref3022"><span class="secnum">55.9.2</span> Running the phonebilling Example Application</a>
<ul style="list-style-type:none">
<li><a href="batch-processing009.htm#sthref3023"><span class="secnum">55.9.2.1</span> To Run the phonebilling Example Application Using NetBeans IDE</a></li>
<li><a href="batch-processing009.htm#sthref3024"><span class="secnum">55.9.2.2</span> To Run the phonebilling Example Application Using Maven</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="batch-processing010.htm#BCGHCHAJ"><span class="secnum">55.10</span> Further Information about Batch Processing</a></li>
</ul>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="batch-processing004.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="batch-processing006.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="BCGHDHGH" name="BCGHDHGH"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1"><span class="secnum">55.5</span> <a id="sthref2989" name="sthref2989"></a>Creating Batch Artifacts</h1>
<p>After you define a job in terms of its batch artifacts using the Job Specification Language (JSL), you create these artifacts as Java classes that implement the interfaces in the <code>javax.batch.api</code> package and its subpackages.</p>
<p>This section lists the main batch artifact interfaces, demonstrates how to access context objects from the batch runtime, and provides some examples.</p>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref2990" name="sthref2990"></a>
<h2 class="sect2"><span class="secnum">55.5.1</span> Batch Artifact Interfaces</h2>
<p>The following tables list the interfaces that you implement to create batch artifacts. The interface implementations are referenced from the elements described in <a href="batch-processing004.htm#BCGDDBBG">Using the Job Specification Language</a>.</p>
<p><a href="#BCGGCIDC">Table 55-3</a> lists the interfaces to implement batch artifacts for chunk steps, task steps, and decision elements.</p>
<p><a href="#BCGEAAEA">Table 55-4</a> lists the interfaces to implement batch artifacts for partitioned steps.</p>
<p><a href="#BCGCAEDI">Table 55-5</a> lists the interfaces to implement batch artifacts for job and step listeners.</p>
<div class="tblhruleformal"><a id="sthref2991" name="sthref2991"></a><a id="BCGGCIDC" name="BCGGCIDC"></a>
<p class="titleintable">Table 55-3 Main Batch Artifact Interfaces</p>
<table class="HRuleFormal" title="Main Batch Artifact Interfaces" summary="The table lists the batch artifact interfaces and the packages they belong to. The first column contains the package name. The second column contains the interface name. The third column contains a description of each interface." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="29%" />
<col width="27%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t5">Package</th>
<th align="left" valign="bottom" id="r1c2-t5">Interface</th>
<th align="left" valign="bottom" id="r1c3-t5">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t5" headers="r1c1-t5">
<p><code>javax.batch.api</code></p>
</td>
<td align="left" headers="r2c1-t5 r1c2-t5">
<p><code>Batchlet</code></p>
</td>
<td align="left" headers="r2c1-t5 r1c3-t5">
<p>Implements the business logic of a task-oriented step. It is referenced from the <code>batchlet</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t5" headers="r1c1-t5">
<p><code>javax.batch.api</code></p>
</td>
<td align="left" headers="r3c1-t5 r1c2-t5">
<p><code>Decider</code></p>
</td>
<td align="left" headers="r3c1-t5 r1c3-t5">
<p>Decides the next step, flow, or split to execute based on information from the execution of the previous step, flow, or split. It is referenced from the <code>decision</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t5" headers="r1c1-t5">
<p><code>javax.batch.api.chunk</code></p>
</td>
<td align="left" headers="r4c1-t5 r1c2-t5">
<p><code>CheckPointAlgorithm</code></p>
</td>
<td align="left" headers="r4c1-t5 r1c3-t5">
<p>Implements a custom checkpoint policy for chunk steps. It is referenced from the <code>checkpoint-algorithm</code> element inside the <code>chunk</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t5" headers="r1c1-t5">
<p><code>javax.batch.api.chunk</code></p>
</td>
<td align="left" headers="r5c1-t5 r1c2-t5">
<p><code>ItemReader</code></p>
</td>
<td align="left" headers="r5c1-t5 r1c3-t5">
<p>Reads items from an input source in a chunk step. It is referenced from the <code>reader</code> element inside the <code>chunk</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t5" headers="r1c1-t5">
<p><code>javax.batch.api.chunk</code></p>
</td>
<td align="left" headers="r6c1-t5 r1c2-t5">
<p><code>ItemProcessor</code></p>
</td>
<td align="left" headers="r6c1-t5 r1c3-t5">
<p>Processes input items to obtain output items in chunk steps. It is referenced from the <code>processor</code> element inside the <code>chunk</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t5" headers="r1c1-t5">
<p><code>javax.batch.api.chunk</code></p>
</td>
<td align="left" headers="r7c1-t5 r1c2-t5">
<p><code>ItemWriter</code></p>
</td>
<td align="left" headers="r7c1-t5 r1c3-t5">
<p>Writes output items in chunk steps. It is referenced from the <code>writer</code> element inside the <code>chunk</code> element.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<div class="tblhruleformal"><a id="sthref2992" name="sthref2992"></a><a id="BCGEAAEA" name="BCGEAAEA"></a>
<p class="titleintable">Table 55-4 Partition Batch Artifact Interfaces</p>
<table class="HRuleFormal" title="Partition Batch Artifact Interfaces" summary="The table lists the batch artifact interfaces and the packages they belong to. The first column contains the package name. The second column contains the interface name. The third column contains a description of each interface." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="33%" />
<col width="25%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t6">Package</th>
<th align="left" valign="bottom" id="r1c2-t6">Interface</th>
<th align="left" valign="bottom" id="r1c3-t6">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t6" headers="r1c1-t6">
<p><code>javax.batch.api.partition</code></p>
</td>
<td align="left" headers="r2c1-t6 r1c2-t6">
<p><code>PartitionPlan</code></p>
</td>
<td align="left" headers="r2c1-t6 r1c3-t6">
<p>Provides details on how to execute a partitioned step, such as the number of partitions, the number of threads, and the parameters for each partition. This artifact is not referenced directly from the job definition file.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t6" headers="r1c1-t6">
<p><code>javax.batch.api.partition</code></p>
</td>
<td align="left" headers="r3c1-t6 r1c2-t6">
<p><code>PartitionMapper</code></p>
</td>
<td align="left" headers="r3c1-t6 r1c3-t6">
<p>Provides a <code>PartitionPlan</code> object. It is referenced from the <code>mapper</code> element inside the <code>partition</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t6" headers="r1c1-t6">
<p><code>javax.batch.api.partition</code></p>
</td>
<td align="left" headers="r4c1-t6 r1c2-t6">
<p><code>PartitionReducer</code></p>
</td>
<td align="left" headers="r4c1-t6 r1c3-t6">
<p>Receives control when a partitioned step begins, ends, or rolls back. It is referenced from the <code>reducer</code> element inside the <code>partition</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t6" headers="r1c1-t6">
<p><code>javax.batch.api.partition</code></p>
</td>
<td align="left" headers="r5c1-t6 r1c2-t6">
<p><code>PartitionCollector</code></p>
</td>
<td align="left" headers="r5c1-t6 r1c3-t6">
<p>Sends intermediary results from each partition to a partition analyzer. It is referenced from the <code>collector</code> element inside the <code>partition</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t6" headers="r1c1-t6">
<p><code>javax.batch.api.partition</code></p>
</td>
<td align="left" headers="r6c1-t6 r1c2-t6">
<p><code>PartitionAnalyzer</code></p>
</td>
<td align="left" headers="r6c1-t6 r1c3-t6">
<p>Processes data and final results from each partition. It is referenced from the <code>analyzer</code> element inside the <code>partition</code> element.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<div class="tblhruleformal"><a id="sthref2993" name="sthref2993"></a><a id="BCGCAEDI" name="BCGCAEDI"></a>
<p class="titleintable">Table 55-5 Listener Batch Artifact Interfaces</p>
<table class="HRuleFormal" title="Listener Batch Artifact Interfaces" summary="The table lists the batch artifact interfaces and the packages they belong to. The first column contains the package name. The second column contains the interface name. The third column contains a description of each interface." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="*" />
<col width="27%" />
<col width="34%" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t7">Package</th>
<th align="left" valign="bottom" id="r1c2-t7">Interface</th>
<th align="left" valign="bottom" id="r1c3-t7">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t7" headers="r1c1-t7">
<p><code>javax.batch.api.listener</code></p>
</td>
<td align="left" headers="r2c1-t7 r1c2-t7">
<p><code>JobListener</code></p>
</td>
<td align="left" headers="r2c1-t7 r1c3-t7">
<p>Intercepts job execution before and after running a job. It is referenced from the <code>listener</code> element inside the <code>job</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t7" headers="r1c1-t7">
<p><code>javax.batch.api.listener</code></p>
</td>
<td align="left" headers="r3c1-t7 r1c2-t7">
<p><code>StepListener</code></p>
</td>
<td align="left" headers="r3c1-t7 r1c3-t7">
<p>Intercepts step execution before and after running a step. It is referenced from the <code>listener</code> element inside the <code>step</code> element</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t7" headers="r1c1-t7">
<p><code>javax.batch.api.chunk.listener</code></p>
</td>
<td align="left" headers="r4c1-t7 r1c2-t7">
<p><code>ChunkListener</code></p>
</td>
<td align="left" headers="r4c1-t7 r1c3-t7">
<p>Intercepts chunk processing in chunk steps before and after processing each chunk, and on errors. It is referenced from the <code>listener</code> element inside the <code>step</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t7" headers="r1c1-t7">
<p><code>javax.batch.api.chunk.listener</code></p>
</td>
<td align="left" headers="r5c1-t7 r1c2-t7">
<p><code>ItemReadListener</code></p>
</td>
<td align="left" headers="r5c1-t7 r1c3-t7">
<p>Intercepts item reading in chunk steps before and after reading each item, and on errors. It is referenced from the <code>listener</code> element inside the <code>step</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t7" headers="r1c1-t7">
<p><code>javax.batch.api.chunk.listener</code></p>
</td>
<td align="left" headers="r6c1-t7 r1c2-t7">
<p><code>ItemProcessListener</code></p>
</td>
<td align="left" headers="r6c1-t7 r1c3-t7">
<p>Intercepts item processing in chunk steps before and after processing each item, and on errors. It is referenced from the <code>listener</code> element inside the <code>step</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t7" headers="r1c1-t7">
<p><code>javax.batch.api.chunk.listener</code></p>
</td>
<td align="left" headers="r7c1-t7 r1c2-t7">
<p><code>ItemWriteListener</code></p>
</td>
<td align="left" headers="r7c1-t7 r1c3-t7">
<p>Intercepts item writing in chunk steps before and after writing each item, and on errors. It is referenced from the <code>listener</code> element inside the <code>step</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t7" headers="r1c1-t7">
<p><code>javax.batch.api.chunk.listener</code></p>
</td>
<td align="left" headers="r8c1-t7 r1c2-t7">
<p><code>RetryReadListener</code></p>
</td>
<td align="left" headers="r8c1-t7 r1c3-t7">
<p>Intercepts retry item reading in chunk steps when an exception occurs. It is referenced from the <code>listener</code> element inside the <code>step</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r9c1-t7" headers="r1c1-t7">
<p><code>javax.batch.api.chunk.listener</code></p>
</td>
<td align="left" headers="r9c1-t7 r1c2-t7">
<p><code>RetryProcessListener</code></p>
</td>
<td align="left" headers="r9c1-t7 r1c3-t7">
<p>Intercepts retry item processing in chunk steps when an exception occurs. It is referenced from the <code>listener</code> element inside the <code>step</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r10c1-t7" headers="r1c1-t7">
<p><code>javax.batch.api.chunk.listener</code></p>
</td>
<td align="left" headers="r10c1-t7 r1c2-t7">
<p><code>RetryWriteListener</code></p>
</td>
<td align="left" headers="r10c1-t7 r1c3-t7">
<p>Intercepts retry item writing in chunk steps when an exception occurs. It is referenced from the <code>listener</code> element inside the <code>step</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r11c1-t7" headers="r1c1-t7">
<p><code>javax.batch.api.chunk.listener</code></p>
</td>
<td align="left" headers="r11c1-t7 r1c2-t7">
<p><code>SkipReadListener</code></p>
</td>
<td align="left" headers="r11c1-t7 r1c3-t7">
<p>Intercepts skippable exception handling for item readers in chunk steps. It is referenced from the <code>listener</code> element inside the <code>step</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r12c1-t7" headers="r1c1-t7">
<p><code>javax.batch.api.chunk.listener</code></p>
</td>
<td align="left" headers="r12c1-t7 r1c2-t7">
<p><code>SkipProcessListener</code></p>
</td>
<td align="left" headers="r12c1-t7 r1c3-t7">
<p>Intercepts skippable exception handling for item processors in chunk steps. It is referenced from the <code>listener</code> element inside the <code>step</code> element.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r13c1-t7" headers="r1c1-t7">
<p><code>javax.batch.api.chunk.listener</code></p>
</td>
<td align="left" headers="r13c1-t7 r1c2-t7">
<p><code>SkipWriteListener</code></p>
</td>
<td align="left" headers="r13c1-t7 r1c3-t7">
<p>Intercepts skippable exception handling for item writers in chunk steps. It is referenced from the <code>listener</code> element inside the <code>step</code> element.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<a id="BCGIFJBB" name="BCGIFJBB"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2"><span class="secnum">55.5.2</span> <a id="sthref2994" name="sthref2994"></a>Dependency Injection in Batch Artifacts</h2>
<p>To ensure that Contexts and Dependency Injection (CDI) works in your batch artifacts, follow these steps.</p>
<ol>
<li>
<p>Define your batch artifact implementations as CDI named beans using the <code>Named</code> annotation.</p>
<p>For example, define an item reader implementation in a chunk step as follows:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Named("MyItemReaderImpl")
public class MyItemReaderImpl implements ItemReader {
    /* ... Override the ItemReader interface methods ... */
}
</pre></li>
<li>
<p>Provide a public, empty, no-argument constructor for your batch artifacts.</p>
<p>For example, provide the following constructor for the artifact above:</p>
<pre xml:space="preserve" class="oac_no_warn">
public MyItemReaderImpl() {}
</pre></li>
<li>
<p>Specify the CDI name for the batch artifacts in the job definition file, instead of using the fully qualified name of the class.</p>
<p>For example, define the step for the artifact above as follows:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;step id="stepA" next="stepB"&gt;
  &lt;chunk&gt;
    &lt;reader ref="MyItemReaderImpl"&gt;&lt;/reader&gt;
    ...
  &lt;/chunk&gt;
&lt;/step&gt;
</pre>
<p>This example uses the CDI name (<code>MyItemReaderImpl</code>) instead of the fully qualified name of the class (<code>com.example.pkg.MyItemReaderImpl</code>) to specify a batch artifact.</p>
</li>
<li>
<p>Ensure that your module is a CDI bean archive by annotating your batch artifacts with the <code>javax.enterprise.context.Dependent</code> annotation or by including an empty <code>beans.xml</code> deployment description with your application. For example, the following batch artifact is annotated with <code>@Dependent</code>:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Dependent
@Named("MyItemReaderImpl")
public class MyItemReaderImpl implements ItemReader { ... }
</pre>
<p>For more information on bean archives, see <a href="cdi-adv001.htm#CACDCFDE">Packaging CDI Applications</a> in <a href="cdi-adv.htm#GJEHI">Chapter 25, "Contexts and Dependency Injection for Java EE: Advanced Topics"</a>.</p>
</li>
</ol>
<div align="center">
<div class="inftblnote"><br />
<table class="Note oac_no_warn" summary="" border="1" width="80%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<tbody>
<tr>
<td align="left">
<p class="notep1">Note:</p>
<p>Contexts and Dependency Injection (CDI) is required in order to access context objects from the batch runtime in batch artifacts.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblnote" --></div>
<p>You may encounter the following errors if you do not follow this procedure.</p>
<ul>
<li>
<p>The batch runtime cannot locate some batch artifacts.</p>
</li>
<li>
<p>The batch artifacts throw null pointer exceptions when accessing injected objects.</p>
</li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BCGCJEEF" name="BCGCJEEF"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2"><span class="secnum">55.5.3</span> <a id="sthref2995" name="sthref2995"></a>Using the Context Objects from the Batch Runtime</h2>
<p>The batch runtime provides context objects that implement the <code>JobContext</code> and <code>StepContext</code> interfaces in the <code>javax.batch.runtime.context</code> package. These objects are associated with the current job and step, respectively, and enable you to do the following:</p>
<ul>
<li>
<p>Get information from the current job or step, such as its name, instance ID, execution ID, batch status, and exit status</p>
</li>
<li>
<p>Set the user-defined exit status</p>
</li>
<li>
<p>Store user data</p>
</li>
<li>
<p>Get property values from the job or step definition</p>
</li>
</ul>
<p>You can inject context objects from the batch runtime inside batch artifact implementations like item readers, item processors, item writers, batchlets, listeners, and so on. The following example demonstrates how to access property values from the job definition file in an item reader implementation:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Dependent
@Named("MyItemReaderImpl")
public class MyItemReaderImpl implements ItemReader {
    @Inject
    JobContext jobCtx;

    public MyItemReaderImpl() {}

    @Override
    public void open(Serializable checkpoint) throws Exception {
        String fileName = jobCtx.getProperties()
                                .getProperty("log_file_name");
        ...
    }
    ...
}
</pre>
<p>See <a href="#BCGIFJBB">Dependency Injection in Batch Artifacts</a> for instructions on how to define your batch artifacts to use dependency injection.</p>
<div align="center">
<div class="inftblnote"><br />
<table class="Note oac_no_warn" summary="" border="1" width="80%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<tbody>
<tr>
<td align="left">
<p class="notep1">Note:</p>
<p>Do <span class="italic">not</span> access batch context objects inside artifact constructors.</p>
<p>Because the job does not run until you submit it to the batch runtime, the batch context objects are not available when CDI instantiates your artifacts upon loading your application. The instantiation of these beans fails and the batch runtime cannot find your batch artifacts when your application submits the job.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblnote" --></div>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="batch-processing004.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="batch-processing006.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

