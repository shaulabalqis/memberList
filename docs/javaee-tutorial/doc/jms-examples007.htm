<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:3Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Sending Messages from a Session Bean to an MDB" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:Sending Messages from a Session Bean to an MDB | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<ul style="list-style-type:none">
<li><a href="jms-examples001.htm#BABEFBHJ"><span class="secnum">46.1</span> Overview of the JMS Examples</a></li>
<li><a href="jms-examples002.htm#BNCFA"><span class="secnum">46.2</span> Writing Simple JMS Applications</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#BNCFD"><span class="secnum">46.2.1</span> Starting the JMS Provider</a></li>
<li><a href="jms-examples002.htm#GKTJS"><span class="secnum">46.2.2</span> Creating JMS Administered Objects</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#BABHEFCB"><span class="secnum">46.2.2.1</span> To Create Resources for the Simple Examples</a></li>
</ul>
</li>
<li><a href="jms-examples002.htm#BABEEABE"><span class="secnum">46.2.3</span> Building All the Simple Examples</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#sthref2385"><span class="secnum">46.2.3.1</span> To Build All the Simple Examples Using NetBeans IDE</a></li>
<li><a href="jms-examples002.htm#sthref2386"><span class="secnum">46.2.3.2</span> To Build All the Simple Examples Using Maven</a></li>
</ul>
</li>
<li><a href="jms-examples002.htm#BABIHCAE"><span class="secnum">46.2.4</span> Sending Messages</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#sthref2389"><span class="secnum">46.2.4.1</span> The Producer.java Client</a></li>
<li><a href="jms-examples002.htm#sthref2390"><span class="secnum">46.2.4.2</span> To Run the Producer Client</a></li>
</ul>
</li>
<li><a href="jms-examples002.htm#BNCFB"><span class="secnum">46.2.5</span> Receiving Messages Synchronously</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#BNCFC"><span class="secnum">46.2.5.1</span> The SynchConsumer.java Client</a></li>
<li><a href="jms-examples002.htm#BNCFG"><span class="secnum">46.2.5.2</span> To Run the SynchConsumer and Producer Clients</a></li>
</ul>
</li>
<li><a href="jms-examples002.htm#BNCFH"><span class="secnum">46.2.6</span> Using a Message Listener for Asynchronous Message Delivery</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#BNCFI"><span class="secnum">46.2.6.1</span> Writing the AsynchConsumer.java and TextListener.java Clients</a></li>
<li><a href="jms-examples002.htm#BNCFK"><span class="secnum">46.2.6.2</span> To Run the AsynchConsumer and Producer Clients</a></li>
</ul>
</li>
<li><a href="jms-examples002.htm#BNCFL"><span class="secnum">46.2.7</span> Browsing Messages on a Queue</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#BNCFM"><span class="secnum">46.2.7.1</span> The MessageBrowser.java Client</a></li>
<li><a href="jms-examples002.htm#BNCFN"><span class="secnum">46.2.7.2</span> To Run the QueueBrowser Client</a></li>
</ul>
</li>
<li><a href="jms-examples002.htm#BABDDHHC"><span class="secnum">46.2.8</span> Running Multiple Consumers on the Same Destination</a></li>
<li><a href="jms-examples002.htm#BNCFX"><span class="secnum">46.2.9</span> Acknowledging Messages</a>
<ul style="list-style-type:none">
<li><a href="jms-examples002.htm#GJSCG"><span class="secnum">46.2.9.1</span> To Run the ClientAckConsumer Client</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="jms-examples003.htm#GIWFH"><span class="secnum">46.3</span> Writing More Advanced JMS Applications</a>
<ul style="list-style-type:none">
<li><a href="jms-examples003.htm#BNCGG"><span class="secnum">46.3.1</span> Using Durable Subscriptions</a>
<ul style="list-style-type:none">
<li><a href="jms-examples003.htm#sthref2409"><span class="secnum">46.3.1.1</span> To Create Resources for the Durable Subscription Example</a></li>
<li><a href="jms-examples003.htm#GJSCI"><span class="secnum">46.3.1.2</span> To Run the Durable Subscription Example</a></li>
<li><a href="jms-examples003.htm#sthref2410"><span class="secnum">46.3.1.3</span> To Run the unsubscriber Example</a></li>
</ul>
</li>
<li><a href="jms-examples003.htm#BNCGJ"><span class="secnum">46.3.2</span> Using Local Transactions</a>
<ul style="list-style-type:none">
<li><a href="jms-examples003.htm#sthref2414"><span class="secnum">46.3.2.1</span> To Create Resources for the transactedexample Example</a></li>
<li><a href="jms-examples003.htm#GJSHA"><span class="secnum">46.3.2.2</span> To Run the transactedexample Clients</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="jms-examples004.htm#BABGEFHC"><span class="secnum">46.4</span> Writing High Performance and Scalable JMS Applications</a>
<ul style="list-style-type:none">
<li><a href="jms-examples004.htm#BABIBEAC"><span class="secnum">46.4.1</span> Using Shared Nondurable Subscriptions</a>
<ul style="list-style-type:none">
<li><a href="jms-examples004.htm#sthref2415"><span class="secnum">46.4.1.1</span> Writing the Clients for the Shared Consumer Example</a></li>
<li><a href="jms-examples004.htm#sthref2416"><span class="secnum">46.4.1.2</span> To Run the SharedConsumer and Producer Clients</a></li>
</ul>
</li>
<li><a href="jms-examples004.htm#BABEJBHA"><span class="secnum">46.4.2</span> Using Shared Durable Subscriptions</a>
<ul style="list-style-type:none">
<li><a href="jms-examples004.htm#sthref2419"><span class="secnum">46.4.2.1</span> To Run the SharedDurableConsumer and Producer Clients</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="jms-examples005.htm#BABBABFC"><span class="secnum">46.5</span> Sending and Receiving Messages Using a Simple Web Application</a>
<ul style="list-style-type:none">
<li><a href="jms-examples005.htm#sthref2425"><span class="secnum">46.5.1</span> The websimplemessage Facelets Pages</a></li>
<li><a href="jms-examples005.htm#sthref2426"><span class="secnum">46.5.2</span> The websimplemessage Managed Beans</a></li>
<li><a href="jms-examples005.htm#sthref2427"><span class="secnum">46.5.3</span> Running the websimplemessage Example</a>
<ul style="list-style-type:none">
<li><a href="jms-examples005.htm#sthref2428"><span class="secnum">46.5.3.1</span> Creating Resources for the websimplemessage Example</a></li>
<li><a href="jms-examples005.htm#sthref2429"><span class="secnum">46.5.3.2</span> To Package and Deploy websimplemessage Using NetBeans IDE</a></li>
<li><a href="jms-examples005.htm#sthref2430"><span class="secnum">46.5.3.3</span> To Package and Deploy websimplemessage Using Maven</a></li>
<li><a href="jms-examples005.htm#sthref2431"><span class="secnum">46.5.3.4</span> To Run the websimplemessage Example</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="jms-examples006.htm#BNBPK"><span class="secnum">46.6</span> Receiving Messages Asynchronously Using a Message-Driven Bean</a>
<ul style="list-style-type:none">
<li><a href="jms-examples006.htm#BNBPL"><span class="secnum">46.6.1</span> Overview of the simplemessage Example</a></li>
<li><a href="jms-examples006.htm#BNBPN"><span class="secnum">46.6.2</span> The simplemessage Application Client</a></li>
<li><a href="jms-examples006.htm#BNBPO"><span class="secnum">46.6.3</span> The simplemessage Message-Driven Bean Class</a>
<ul style="list-style-type:none">
<li><a href="jms-examples006.htm#BNBPP"><span class="secnum">46.6.3.1</span> The onMessage Method</a></li>
</ul>
</li>
<li><a href="jms-examples006.htm#BNBPQ"><span class="secnum">46.6.4</span> Running the simplemessage Example</a>
<ul style="list-style-type:none">
<li><a href="jms-examples006.htm#BNBPR"><span class="secnum">46.6.4.1</span> Creating Resources for the simplemessage Example</a></li>
<li><a href="jms-examples006.htm#sthref2448"><span class="secnum">46.6.4.2</span> To Run the simplemessage Example Using NetBeans IDE</a></li>
<li><a href="jms-examples006.htm#BNBPT"><span class="secnum">46.6.4.3</span> To Run the simplemessage Example Using Maven</a></li>
</ul>
</li>
</ul>
</li>
<li><div id="backgroundColor"><a href="jms-examples007.htm#BNCGW"><span class="secnum">46.7</span> Sending Messages from a Session Bean to an MDB</a><ul style="list-style-type:none">
<li><a href="jms-examples007.htm#BNCGX"><span class="secnum">46.7.1</span> Writing the Application Components for the clientsessionmdb Example</a>
<ul style="list-style-type:none">
<li><a href="jms-examples007.htm#BNCGZ"><span class="secnum">46.7.1.1</span> Coding the Application Client: MyAppClient.java</a></li>
<li><a href="jms-examples007.htm#BNCHA"><span class="secnum">46.7.1.2</span> Coding the Publisher Session Bean</a></li>
<li><a href="jms-examples007.htm#BNCHB"><span class="secnum">46.7.1.3</span> Coding the Message-Driven Bean: MessageBean.java</a></li>
</ul>
</li>
<li><a href="jms-examples007.htm#sthref2457"><span class="secnum">46.7.2</span> Running the clientsessionmdb Example</a>
<ul style="list-style-type:none">
<li><a href="jms-examples007.htm#sthref2458"><span class="secnum">46.7.2.1</span> To Run clientsessionmdb Using NetBeans IDE</a></li>
<li><a href="jms-examples007.htm#sthref2459"><span class="secnum">46.7.2.2</span> To Run clientsessionmdb Using Maven</a></li>
</ul>
</li>
</ul>
</div></li>
<li><a href="jms-examples008.htm#BNCHF"><span class="secnum">46.8</span> Using an Entity to Join Messages from Two MDBs</a>
<ul style="list-style-type:none">
<li><a href="jms-examples008.htm#BNCHG"><span class="secnum">46.8.1</span> Overview of the clientmdbentity Example Application</a></li>
<li><a href="jms-examples008.htm#BNCHI"><span class="secnum">46.8.2</span> Writing the Application Components for the clientmdbentity Example</a>
<ul style="list-style-type:none">
<li><a href="jms-examples008.htm#BNCHJ"><span class="secnum">46.8.2.1</span> Coding the Application Client: HumanResourceClient.java</a></li>
<li><a href="jms-examples008.htm#BNCHK"><span class="secnum">46.8.2.2</span> Coding the Message-Driven Beans for the clientmdbentity Example</a></li>
<li><a href="jms-examples008.htm#BNCHL"><span class="secnum">46.8.2.3</span> Coding the Entity Class for the clientmdbentity Example</a></li>
</ul>
</li>
<li><a href="jms-examples008.htm#sthref2470"><span class="secnum">46.8.3</span> Running the clientmdbentity Example</a>
<ul style="list-style-type:none">
<li><a href="jms-examples008.htm#sthref2471"><span class="secnum">46.8.3.1</span> To Run clientmdbentity Using NetBeans IDE</a></li>
<li><a href="jms-examples008.htm#sthref2472"><span class="secnum">46.8.3.2</span> To Run clientmdbentity Using Maven</a></li>
<li><a href="jms-examples008.htm#sthref2473"><span class="secnum">46.8.3.3</span> Viewing the Application Output</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="jms-examples009.htm#BABDFDJC"><span class="secnum">46.9</span> Using NetBeans IDE to Create JMS Resources</a>
<ul style="list-style-type:none">
<li><a href="jms-examples009.htm#sthref2474"><span class="secnum">46.9.1</span> To Create JMS Resources Using NetBeans IDE</a></li>
<li><a href="jms-examples009.htm#sthref2479"><span class="secnum">46.9.2</span> To Delete JMS Resources Using NetBeans IDE</a></li>
</ul>
</li>
</ul>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jms-examples006.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jms-examples008.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="BNCGW" name="BNCGW"></a><a id="JEETT00556" name="JEETT00556"></a>
<div class="sect1">
<h1 class="sect1"><span class="secnum">46.7</span> <a id="sthref2449" name="sthref2449"></a><a id="sthref2450" name="sthref2450"></a><a id="sthref2451" name="sthref2451"></a><a id="sthref2452" name="sthref2452"></a><a id="sthref2453" name="sthref2453"></a>Sending Messages from a Session Bean to an MDB</h1>
<p>This section explains how to write, compile, package, deploy, and run an application that uses the JMS API in conjunction with a session bean. The application contains the following components:</p>
<ul>
<li>
<p>An application client that invokes a session bean</p>
</li>
<li>
<p>A session bean that publishes several messages to a topic</p>
</li>
<li>
<p>A message-driven bean that receives and processes the messages using a durable topic subscription and a message selector</p>
</li>
</ul>
<p>You will find the source files for this section in the <span class="variable">tut-install</span><code>/examples/jms/clientsessionmdb/</code> directory. Path names in this section are relative to this directory.</p>
<a id="BNCGX" name="BNCGX"></a><a id="JEETT01299" name="JEETT01299"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">46.7.1</span> Writing the Application Components for the clientsessionmdb Example</h2>
<p>This application demonstrates how to send messages from an enterprise bean (in this case, a session bean) rather than from an application client, as in the example in <a href="jms-examples006.htm#BNBPK">Receiving Messages Asynchronously Using a Message-Driven Bean</a>. <a href="#BNCGY">Figure 46-4</a> illustrates the structure of this application. Sending messages from an enterprise bean is very similar to sending messages from a managed bean, which was shown in <a href="jms-examples005.htm#BABBABFC">Sending and Receiving Messages Using a Simple Web Application</a>.</p>
<div class="figure"><a id="BNCGY" name="BNCGY"></a><a id="JEETT00057" name="JEETT00057"></a>
<p class="titleinfigure">Figure 46-4 An Enterprise Bean Application: Client to Session Bean to Message-Driven Bean</p>
<img src="img/jeett_dt_037.png" alt="Description of Figure 46-4 follows" title="Description of Figure 46-4 follows" longdesc="img_text/jeett_dt_037.htm" /><br />
<a id="sthref2454" name="sthref2454" href="img_text/jeett_dt_037.htm">Description of "Figure 46-4 An Enterprise Bean Application: Client to Session Bean to Message-Driven Bean"</a><br />
<br /></div>
<!-- class="figure" -->
<p>The Publisher enterprise bean in this example is the enterprise-application equivalent of a wire-service news feed that categorizes news events into six news categories. The message-driven bean could represent a newsroom, where the sports desk, for example, would set up a subscription for all news events pertaining to sports.</p>
<p>The application client in the example injects the Publisher enterprise bean's remote home interface and then calls the bean's business method. The enterprise bean creates 18 text messages. For each message, it sets a <code>String</code> property randomly to one of six values representing the news categories and then publishes the message to a topic. The message-driven bean uses a message selector for the property to limit which of the published messages will be delivered to it.</p>
<a id="BNCGZ" name="BNCGZ"></a><a id="JEETT00829" name="JEETT00829"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">46.7.1.1</span> Coding the Application Client: MyAppClient.java</h3>
<p>The application client, <code>MyAppClient.java</code>, found under <code>clientsessionmdb-app-client</code>, performs no JMS API operations and so is simpler than the client in <a href="jms-examples006.htm#BNBPK">Receiving Messages Asynchronously Using a Message-Driven Bean</a>. The client uses dependency injection to obtain the Publisher enterprise bean's business interface:</p>
<pre xml:space="preserve" class="oac_no_warn">
@EJB(name="PublisherRemote")
private static PublisherRemote publisher;
</pre>
<p>The client then calls the bean's business method twice.</p>
</div>
<!-- class="sect3" -->
<a id="BNCHA" name="BNCHA"></a><a id="JEETT00830" name="JEETT00830"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">46.7.1.2</span> Coding the Publisher Session Bean</h3>
<p>The Publisher bean is a stateless session bean that has one business method. The Publisher bean uses a remote interface rather than a local interface because it is accessed from the application client.</p>
<p>The remote interface, <code>PublisherRemote.java</code>, found under <code>clientsessionmdb-ejb</code>, declares a single business method, <code>publishNews</code>.</p>
<p>The bean class, <code>PublisherBean.java</code>, also found under <code>clientsessionmdb-ejb</code>, implements the <code>publishNews</code> method and its helper method <code>chooseType</code>. The bean class injects <code>SessionContext</code> and <code>Topic</code> resources (the topic is defined in the message-driven bean). It then injects a <code>JMSContext</code>, which uses the preconfigured default connection factory unless you specify otherwise. The bean class begins as follows:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Stateless
@Remote({
    PublisherRemote.class
})
public class PublisherBean implements PublisherRemote {

    @Resource
    private SessionContext sc;
    @Resource(lookup = "java:module/jms/newsTopic")
    private Topic topic;
    @Inject
    private JMSContext context;
    ...
</pre>
<p>The business method <code>publishNews</code> creates a <code>JMSProducer</code> and publishes the messages.</p>
</div>
<!-- class="sect3" -->
<a id="BNCHB" name="BNCHB"></a><a id="JEETT00831" name="JEETT00831"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">46.7.1.3</span> <a id="sthref2455" name="sthref2455"></a><a id="sthref2456" name="sthref2456"></a>Coding the Message-Driven Bean: MessageBean.java</h3>
<p>The message-driven bean class, <code>MessageBean.java</code>, found under <code>clientsessionmdb-ejb</code>, is almost identical to the one in <a href="jms-examples006.htm#BNBPK">Receiving Messages Asynchronously Using a Message-Driven Bean</a>. However, the <code>@MessageDriven</code> annotation is different, because instead of a queue, the bean is using a topic, a durable subscription, and a message selector. The bean defines a topic for the use of the application; the definition uses the <code>java:module</code> scope because both the session bean and the message-driven bean are in the same module. Because the destination is defined in the message-driven bean, the <code>@MessageDriven</code> annotation uses the <code>destinationLookup</code> activation config property. (See <a href="jms-concepts005.htm#BABHFBDH">Creating Resources for Java EE Applications</a> for more information.) The annotation also sets the activation config properties <code>messageSelector</code>, <code>subscriptionDurability</code>, <code>clientId</code>, and <code>subscriptionName</code>, as follows:</p>
<pre xml:space="preserve" class="oac_no_warn">
@JMSDestinationDefinition(
        name = "java:module/jms/newsTopic",
        interfaceName = "javax.jms.Topic",
        destinationName = "PhysicalNewsTopic")
@MessageDriven(activationConfig = {
    @ActivationConfigProperty(propertyName = "destinationLookup",
            propertyValue = "java:module/jms/newsTopic"),
    @ActivationConfigProperty(propertyName = "destinationType",
            propertyValue = "javax.jms.Topic"),
    @ActivationConfigProperty(propertyName = "messageSelector",
            propertyValue = "NewsType = 'Sports' OR NewsType = 'Opinion'"),
    @ActivationConfigProperty(propertyName = "subscriptionDurability",
            propertyValue = "Durable"),
    @ActivationConfigProperty(propertyName = "clientId",
            propertyValue = "MyID"),
    @ActivationConfigProperty(propertyName = "subscriptionName",
            propertyValue = "MySub")
})
</pre>
<p>The topic is the one defined in the <code>PublisherBean</code>. The message selector in this case represents both the sports and opinion desks, just to demonstrate the syntax of message selectors.</p>
<p>The JMS resource adapter uses these properties to create a connection factory for the message-driven bean that allows the bean to use a durable subscription.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref2457" name="sthref2457"></a>
<h2 class="sect2"><span class="secnum">46.7.2</span> Running the clientsessionmdb Example</h2>
<p>You can use either NetBeans IDE or Maven to build, deploy, and run the <code>simplemessage</code> example.</p>
<p>This example uses an annotation-defined topic and the preconfigured default connection factory <code>java:comp/DefaultJMSConnectionFactory</code>, so you do not have to create resources for it.</p>
<div class="sect3"><a id="sthref2458" name="sthref2458"></a>
<h3 class="sect3"><span class="secnum">46.7.2.1</span> To Run clientsessionmdb Using NetBeans IDE</h3>
<ol>
<li>
<p>Make sure that GlassFish Server has been started (see <a href="usingexamples002.htm#BNADI">Starting and Stopping GlassFish Server</a>).</p>
</li>
<li>
<p>From the <span class="gui-object-action">File</span> menu, choose <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-title">Open Project</span> dialog box, navigate to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/jms/clientsessionmdb
</pre></li>
<li>
<p>Select the <code>clientsessionmdb</code> folder.</p>
</li>
<li>
<p>Make sure that the <span class="gui-object-action">Open Required Projects</span> check box is selected, then click <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-action">Projects</span> tab, right-click the <code>clientsessionmdb</code> project and select <span class="gui-object-action">Build</span>. (If NetBeans IDE suggests that you run a priming build, click the box to do so.)</p>
<p>This command creates the following:</p>
<ul>
<li>
<p>An application client JAR file that contains the client class file and the session bean's remote interface, along with a manifest file that specifies the main class and places the EJB JAR file in its classpath</p>
</li>
<li>
<p>An EJB JAR file that contains both the session bean and the message-driven bean</p>
</li>
<li>
<p>An application EAR file that contains the two JAR files</p>
</li>
</ul>
<p>The <code>clientsessionmdb.ear</code> file is created in the <code>clientsessionmdb-ear/target/</code> directory.</p>
<p>The command then deploys the EAR file, retrieves the client stubs, and runs the client.</p>
<p>The client displays these lines:</p>
<pre xml:space="preserve" class="oac_no_warn">
To view the bean output,
 check &lt;install_dir&gt;/domains/domain1/logs/server.log.
</pre>
<p>The output from the enterprise beans appears in the server log file. The Publisher session bean sends two sets of 18 messages numbered 0 through 17. Because of the message selector, the message-driven bean receives only the messages whose <code>NewsType</code> property is <code>Sports</code> or <code>Opinion</code>.</p>
</li>
<li>
<p>Use the <span class="gui-object-action">Services</span> tab to undeploy the application after you have finished running it.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<div class="sect3"><a id="sthref2459" name="sthref2459"></a>
<h3 class="sect3"><span class="secnum">46.7.2.2</span> To Run clientsessionmdb Using Maven</h3>
<ol>
<li>
<p>Make sure that GlassFish Server has been started (see <a href="usingexamples002.htm#BNADI">Starting and Stopping GlassFish Server</a>).</p>
</li>
<li>
<p>Go to the following directory:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/jms/clientsessionmdb/
</pre></li>
<li>
<p>To compile the source files and package, deploy, and run the application, enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn install
</pre>
<p>This command creates the following:</p>
<ul>
<li>
<p>An application client JAR file that contains the client class file and the session bean's remote interface, along with a manifest file that specifies the main class and places the EJB JAR file in its classpath</p>
</li>
<li>
<p>An EJB JAR file that contains both the session bean and the message-driven bean</p>
</li>
<li>
<p>An application EAR file that contains the two JAR files</p>
</li>
</ul>
<p>The <code>clientsessionmdb.ear</code> file is created in the <code>clientsessionmdb-ear/target/</code> directory.</p>
<p>The command then deploys the EAR file, retrieves the client stubs, and runs the client.</p>
<p>The client displays these lines:</p>
<pre xml:space="preserve" class="oac_no_warn">
To view the bean output,
 check &lt;install_dir&gt;/domains/domain1/logs/server.log.
</pre>
<p>The output from the enterprise beans appears in the server log file. The Publisher session bean sends two sets of 18 messages numbered 0 through 17. Because of the message selector, the message-driven bean receives only the messages whose <code>NewsType</code> property is <code>Sports</code> or <code>Opinion</code>.</p>
</li>
<li>
<p>Undeploy the application after you have finished running it:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn cargo:undeploy
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jms-examples006.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jms-examples008.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

