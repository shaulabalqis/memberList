<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:4Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Authentication Mechanisms" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:Authentication Mechanisms | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<ul style="list-style-type:none">
<li><a href="security-advanced001.htm#BNBYB"><span class="secnum">50.1</span> Working with Digital Certificates</a>
<ul style="list-style-type:none">
<li><a href="security-advanced001.htm#BNBYC"><span class="secnum">50.1.1</span> Creating a Server Certificate</a>
<ul style="list-style-type:none">
<li><a href="security-advanced001.htm#GJRGY"><span class="secnum">50.1.1.1</span> To Use keytool to Create a Server Certificate</a></li>
</ul>
</li>
<li><a href="security-advanced001.htm#GLIFW"><span class="secnum">50.1.2</span> Adding Users to the Certificate Realm</a></li>
<li><a href="security-advanced001.htm#BNBYF"><span class="secnum">50.1.3</span> Using a Different Server Certificate with GlassFish Server</a>
<ul style="list-style-type:none">
<li><a href="security-advanced001.htm#sthref2751"><span class="secnum">50.1.3.1</span> To Specify a Different Server Certificate</a></li>
</ul>
</li>
</ul>
</li>
<li><div id="backgroundColor"><a href="security-advanced002.htm#GLIEN"><span class="secnum">50.2</span> Authentication Mechanisms</a><ul style="list-style-type:none">
<li><a href="security-advanced002.htm#GLIEQ"><span class="secnum">50.2.1</span> Client Authentication</a></li>
<li><a href="security-advanced002.htm#GLIEL"><span class="secnum">50.2.2</span> Mutual Authentication</a>
<ul style="list-style-type:none">
<li><a href="security-advanced002.htm#BNBYH"><span class="secnum">50.2.2.1</span> Enabling Mutual Authentication over SSL</a></li>
<li><a href="security-advanced002.htm#BNBYI"><span class="secnum">50.2.2.2</span> Creating a Client Certificate for Mutual Authentication</a></li>
</ul>
</li>
</ul>
</div></li>
<li><a href="security-advanced003.htm#BABEJJDE"><span class="secnum">50.3</span> Using the JDBC Realm for User Authentication</a>
<ul style="list-style-type:none">
<li><a href="security-advanced003.htm#sthref2773"><span class="secnum">50.3.1</span> To Configure a JDBC Authentication Realm</a></li>
</ul>
</li>
<li><a href="security-advanced004.htm#BABGEJJJ"><span class="secnum">50.4</span> Securing HTTP Resources</a></li>
<li><a href="security-advanced005.htm#GLIGC"><span class="secnum">50.5</span> Securing Application Clients</a>
<ul style="list-style-type:none">
<li><a href="security-advanced005.htm#GLIDW"><span class="secnum">50.5.1</span> Using Login Modules</a></li>
<li><a href="security-advanced005.htm#GLIHQ"><span class="secnum">50.5.2</span> Using Programmatic Login</a></li>
</ul>
</li>
<li><a href="security-advanced006.htm#GLIFD"><span class="secnum">50.6</span> Securing Enterprise Information Systems Applications</a>
<ul style="list-style-type:none">
<li><a href="security-advanced006.htm#GLIHL"><span class="secnum">50.6.1</span> Container-Managed Sign-On</a></li>
<li><a href="security-advanced006.htm#GLIDP"><span class="secnum">50.6.2</span> Component-Managed Sign-On</a></li>
<li><a href="security-advanced006.htm#GLIGS"><span class="secnum">50.6.3</span> Configuring Resource Adapter Security</a></li>
<li><a href="security-advanced006.htm#GLIGW"><span class="secnum">50.6.4</span> Mapping an Application Principal to EIS Principals</a></li>
</ul>
</li>
<li><a href="security-advanced007.htm#GKHRL"><span class="secnum">50.7</span> Configuring Security Using Deployment Descriptors</a>
<ul style="list-style-type:none">
<li><a href="security-advanced007.htm#BNCCM"><span class="secnum">50.7.1</span> Specifying Security for Basic Authentication in the Deployment Descriptor</a></li>
<li><a href="security-advanced007.htm#GKAFQ"><span class="secnum">50.7.2</span> Specifying Non-Default Principal-to-Role Mapping in the Deployment Descriptor</a></li>
</ul>
</li>
<li><a href="security-advanced008.htm#BABBGBBF"><span class="secnum">50.8</span> Further Information about Advanced Security Topics</a></li>
</ul>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="security-advanced001.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="security-advanced003.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="GLIEN" name="GLIEN"></a><a id="JEETT00523" name="JEETT00523"></a>
<div class="sect1">
<h1 class="sect1"><span class="secnum">50.2</span> Authentication Mechanisms</h1>
<p>This section discusses the client authentication and mutual authentication mechanisms.</p>
<a id="GLIEQ" name="GLIEQ"></a><a id="JEETT01244" name="JEETT01244"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">50.2.1</span> <a id="sthref2752" name="sthref2752"></a><a id="sthref2753" name="sthref2753"></a><a id="sthref2754" name="sthref2754"></a><a id="sthref2755" name="sthref2755"></a><a id="sthref2756" name="sthref2756"></a><a id="sthref2757" name="sthref2757"></a><a id="sthref2758" name="sthref2758"></a><a id="sthref2759" name="sthref2759"></a><a id="sthref2760" name="sthref2760"></a>Client Authentication</h2>
<p>With <span class="glossaryterm">client authentication</span>, the web server authenticates the client by using the client's public key certificate. Client authentication is a more secure method of authentication than either basic or form-based authentication. It uses HTTP over SSL (HTTPS), in which the server authenticates the client using the client's public key certificate. SSL technology provides data encryption, server authentication, message integrity, and optional client authentication for a TCP/IP connection. You can think of a public key certificate as the digital equivalent of a passport. The certificate is issued by a trusted organization, a certificate authority (CA), and provides identification for the bearer.</p>
<p>Before using client authentication, make sure that the client has a valid public key certificate. For more information on creating and using public key certificates, read <a href="security-advanced001.htm#BNBYB">Working with Digital Certificates</a>.</p>
<p>The following example shows how to declare client authentication in your deployment descriptor:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;login-config&gt;
    &lt;auth-method&gt;CLIENT-CERT&lt;/auth-method&gt;
&lt;/login-config&gt;
</pre></div>
<!-- class="sect2" -->
<a id="GLIEL" name="GLIEL"></a><a id="JEETT01245" name="JEETT01245"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">50.2.2</span> <a id="sthref2761" name="sthref2761"></a><a id="sthref2762" name="sthref2762"></a>Mutual Authentication</h2>
<p>With <span class="glossaryterm">mutual authentication</span>, the server and the client authenticate each other. Mutual authentication is of two types:</p>
<ul>
<li>
<p>Certificate-based (see <a href="#GLIFJ">Figure 50-1</a>)</p>
</li>
<li>
<p>User name/password-based (see <a href="#GLIGQ">Figure 50-2</a>)</p>
</li>
</ul>
<p><a id="sthref2763" name="sthref2763"></a>When using certificate-based mutual authentication, the following actions occur.</p>
<ol>
<li>
<p>A client requests access to a protected resource.</p>
</li>
<li>
<p>The web server presents its certificate to the client.</p>
</li>
<li>
<p>The client verifies the server's certificate.</p>
</li>
<li>
<p>If successful, the client sends its certificate to the server.</p>
</li>
<li>
<p>The server verifies the client's credentials.</p>
</li>
<li>
<p>If successful, the server grants access to the protected resource requested by the client.</p>
</li>
</ol>
<p><a href="#GLIFJ">Figure 50-1</a> shows what occurs during certificate-based mutual authentication.</p>
<div class="figure"><a id="GLIFJ" name="GLIFJ"></a><a id="JEETT00040" name="JEETT00040"></a>
<p class="titleinfigure">Figure 50-1 Certificate-Based Mutual Authentication</p>
<img src="img/jeett_dt_048.png" alt="Description of Figure 50-1 follows" title="Description of Figure 50-1 follows" longdesc="img_text/jeett_dt_048.htm" /><br />
<a id="sthref2764" name="sthref2764" href="img_text/jeett_dt_048.htm">Description of "Figure 50-1 Certificate-Based Mutual Authentication"</a><br />
<br /></div>
<!-- class="figure" -->
<p><a id="sthref2765" name="sthref2765"></a>In user name/password-based mutual authentication, the following actions occur.</p>
<ol>
<li>
<p>A client requests access to a protected resource.</p>
</li>
<li>
<p>The web server presents its certificate to the client.</p>
</li>
<li>
<p>The client verifies the server's certificate.</p>
</li>
<li>
<p>If successful, the client sends its user name and password to the server.</p>
</li>
<li>
<p>The server verifies the client's credentials</p>
</li>
<li>
<p>If the verification is successful, the server grants access to the protected resource requested by the client.</p>
</li>
</ol>
<p><a href="#GLIGQ">Figure 50-2</a> shows what occurs during user name/password-based mutual authentication.</p>
<div class="figure"><a id="GLIGQ" name="GLIGQ"></a><a id="JEETT00041" name="JEETT00041"></a>
<p class="titleinfigure">Figure 50-2 User Name/Password-Based Mutual Authentication</p>
<img src="img/jeett_dt_049.png" alt="Description of Figure 50-2 follows" title="Description of Figure 50-2 follows" longdesc="img_text/jeett_dt_049.htm" /><br />
<a id="sthref2766" name="sthref2766" href="img_text/jeett_dt_049.htm">Description of "Figure 50-2 User Name/Password-Based Mutual Authentication"</a><br />
<br /></div>
<!-- class="figure" -->
<a id="BNBYH" name="BNBYH"></a><a id="JEETT00791" name="JEETT00791"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">50.2.2.1</span> <a id="sthref2767" name="sthref2767"></a><a id="sthref2768" name="sthref2768"></a><a id="sthref2769" name="sthref2769"></a><a id="sthref2770" name="sthref2770"></a>Enabling Mutual Authentication over SSL</h3>
<p>This section discusses setting up client-side authentication. Enabling both server-side and client-side authentication is called mutual, or two-way, authentication. In client authentication, clients are required to submit certificates issued by a certificate authority that you choose to accept.</p>
<p>There are at least two ways to enable mutual authentication over SSL.</p>
<ul>
<li>
<p>The preferred method is to set the method of authentication in the <code>web.xml</code> application deployment descriptor to <code>CLIENT-CERT</code>. This enforces mutual authentication by modifying the deployment descriptor of the given application. In this way, client authentication is enabled only for a specific resource controlled by the security constraint, and the check is performed only when the application requires client authentication.</p>
</li>
<li>
<p>A less commonly used method is to set the <code>clientAuth</code> property in the <code>certificate</code> realm to <code>true</code> if you want the SSL stack to require a valid certificate chain from the client before accepting a connection. A <code>false</code> value (which is the default) will not require a certificate chain unless the client requests a resource protected by a security constraint that uses <code>CLIENT-CERT</code> authentication. When you enable client authentication by setting the <code>clientAuth</code> property to <code>true</code>, client authentication will be required for all the requests going through the specified SSL port. If you turn <code>clientAuth</code> on, it is on all of the time, which can severely degrade performance.</p>
</li>
</ul>
<p>When client authentication is enabled in both of these ways, client authentication will be performed twice.</p>
</div>
<!-- class="sect3" -->
<a id="BNBYI" name="BNBYI"></a><a id="JEETT00792" name="JEETT00792"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">50.2.2.2</span> <a id="sthref2771" name="sthref2771"></a><a id="sthref2772" name="sthref2772"></a>Creating a Client Certificate for Mutual Authentication</h3>
<p>If you have a certificate signed by a trusted Certificate Authority (CA) such as Verisign, and the GlassFish Server <code>cacerts.jks</code> file already contains a certificate verified by that CA, you do not need to complete this step. You need to install your certificate in the GlassFish Server certificate file only when your certificate is self-signed.</p>
<p>From the directory where you want to create the client certificate, run <code>keytool</code> as outlined here. When you press Enter, <code>keytool</code> prompts you to enter the server name, organizational unit, organization, locality, state, and country code.</p>
<p>You must enter the server name in response to <code>keytool</code>'s first prompt, in which it asks for first and last names. For testing purposes, this can be <code>localhost</code>. If this example is to verify mutual authentication and you receive a runtime error stating that the HTTPS host name is wrong, re-create the client certificate, being sure to use the same host name you will use when running the example. For example, if your machine name is <code>duke</code>, then enter <code>duke</code> as the certificate CN or when prompted for first and last names. When accessing the application, enter a URL that points to the same location (for example, <code>https://duke:8181/mutualauth/hello</code>). This is necessary because during SSL handshake, the server verifies the client certificate by comparing the certificate name to the host name from which it originates.</p>
<p>To create a keystore named <code>client_keystore.jks</code> that contains a client certificate named <code>client.cer</code>, follow these steps.</p>
<ol>
<li>
<p>Create a backup copy of the server truststore file. To do this,</p>
<ol>
<li>
<p>Change to the directory containing the server's keystore and truststore files, <span class="variable">domain-dir</span><code>\config</code>.</p>
</li>
<li>
<p>Copy <code>cacerts.jks</code> to <code>cacerts.backup.jks</code>.</p>
</li>
<li>
<p>Copy <code>keystore.jks</code> to <code>keystore.backup.jks</code>.</p>
<p>Do not put client certificates in the <code>cacerts.jks</code> file. Any certificate you add to the <code>cacerts</code> file effectively can be a trusted root for any and all certificate chains. After you have completed development, delete the development version of the <code>cacerts</code> file and replace it with the original copy.</p>
</li>
</ol>
</li>
<li>
<p>Generate the client certificate. Enter the following command from the directory where you want to generate the client certificate:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">java-home</span>\bin\keytool -genkey -alias client-alias -keyalg RSA 
-keypass changeit -storepass changeit -keystore client_keystore.jks
</pre></li>
<li>
<p>Export the generated client certificate into the file <code>client.cer</code>:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">java-home</span>\bin\keytool -export -alias client-alias -storepass changeit 
-file client.cer -keystore client_keystore.jks
</pre></li>
<li>
<p>Add the certificate to the truststore file <span class="variable">domain-dir</span><code>/config/cacerts.jks</code>. Run <code>keytool</code> from the directory where you created the keystore and client certificate. Use the following parameters:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">java-home</span>\bin\keytool -import -v -trustcacerts -alias client-alias 
-file client.cer -keystore <span class="variable">domain-dir</span>/config/cacerts.jks 
-keypass changeit -storepass changeit
</pre>
<p>The <code>keytool</code> utility returns a message like this one:</p>
<pre xml:space="preserve" class="oac_no_warn">
Owner: CN=localhost, OU=My Company, O=Software, L=Santa Clara, ST=CA, C=US
Issuer: CN=localhost, OU=My Company, O=Software, L=Santa Clara, ST=CA, C=US
Serial number: 3e39e66a
Valid from: Tue Nov 27 12:22:47 EST 2012 until: Mon Feb 25 12:22:47 EST 2013
Certificate fingerprints:
    MD5: 5A:B0:4C:88:4E:F8:EF:E9:E5:8B:53:BD:D0:AA:8E:5A
    SHA1:90:00:36:5B:E0:A7:A2:BD:67:DB:EA:37:B9:61:3E:26:B3:89:46:32
    Signature algorithm name: SHA1withRSA
    Version: 3
Trust this certificate? [no]: yes
Certificate was added to keystore
[Storing cacerts.jks]
</pre></li>
<li>
<p>Restart GlassFish Server.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="security-advanced001.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="security-advanced003.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

