<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:2Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="The address-book Application" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:The address-book Application | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<ul style="list-style-type:none">
<li><a href="persistence-basicexamples001.htm#GIQST"><span class="secnum">38.1</span> The order Application</a>
<ul style="list-style-type:none">
<li><a href="persistence-basicexamples001.htm#GIQRH"><span class="secnum">38.1.1</span> Entity Relationships in the order Application</a>
<ul style="list-style-type:none">
<li><a href="persistence-basicexamples001.htm#GIQQR"><span class="secnum">38.1.1.1</span> Self-Referential Relationships</a></li>
<li><a href="persistence-basicexamples001.htm#GIQSR"><span class="secnum">38.1.1.2</span> One-to-One Relationships</a></li>
<li><a href="persistence-basicexamples001.htm#GIQTJ"><span class="secnum">38.1.1.3</span> One-to-Many Relationship Mapped to Overlapping Primary and Foreign Keys</a></li>
<li><a href="persistence-basicexamples001.htm#GIQUD"><span class="secnum">38.1.1.4</span> Unidirectional Relationships</a></li>
</ul>
</li>
<li><a href="persistence-basicexamples001.htm#GIQQY"><span class="secnum">38.1.2</span> Primary Keys in the order Application</a>
<ul style="list-style-type:none">
<li><a href="persistence-basicexamples001.htm#GIQUV"><span class="secnum">38.1.2.1</span> Generated Primary Keys</a></li>
<li><a href="persistence-basicexamples001.htm#GIQUF"><span class="secnum">38.1.2.2</span> Compound Primary Keys</a></li>
</ul>
</li>
<li><a href="persistence-basicexamples001.htm#GIQTL"><span class="secnum">38.1.3</span> Entity Mapped to More Than One Database Table</a></li>
<li><a href="persistence-basicexamples001.htm#GIQUE"><span class="secnum">38.1.4</span> Cascade Operations in the order Application</a></li>
<li><a href="persistence-basicexamples001.htm#GIQSC"><span class="secnum">38.1.5</span> BLOB and CLOB Database Types in the order Application</a></li>
<li><a href="persistence-basicexamples001.htm#GIQUM"><span class="secnum">38.1.6</span> Temporal Types in the order Application</a></li>
<li><a href="persistence-basicexamples001.htm#GIQQV"><span class="secnum">38.1.7</span> Managing the order Application's Entities</a>
<ul style="list-style-type:none">
<li><a href="persistence-basicexamples001.htm#GIQRR"><span class="secnum">38.1.7.1</span> Creating Entities</a></li>
<li><a href="persistence-basicexamples001.htm#GIQQC"><span class="secnum">38.1.7.2</span> Finding Entities</a></li>
<li><a href="persistence-basicexamples001.htm#GIQUK"><span class="secnum">38.1.7.3</span> Setting Entity Relationships</a></li>
<li><a href="persistence-basicexamples001.htm#GIQSV"><span class="secnum">38.1.7.4</span> Using Queries</a></li>
<li><a href="persistence-basicexamples001.htm#GIQTW"><span class="secnum">38.1.7.5</span> Removing Entities</a></li>
</ul>
</li>
<li><a href="persistence-basicexamples001.htm#GIQUP"><span class="secnum">38.1.8</span> Running the order Example</a>
<ul style="list-style-type:none">
<li><a href="persistence-basicexamples001.htm#GIQSG"><span class="secnum">38.1.8.1</span> To Run the order Example Using NetBeans IDE</a></li>
<li><a href="persistence-basicexamples001.htm#GIQTY"><span class="secnum">38.1.8.2</span> To Run the order Example Using Maven</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="persistence-basicexamples002.htm#GIQSQ"><span class="secnum">38.2</span> The roster Application</a>
<ul style="list-style-type:none">
<li><a href="persistence-basicexamples002.htm#GIQSO"><span class="secnum">38.2.1</span> Relationships in the roster Application</a>
<ul style="list-style-type:none">
<li><a href="persistence-basicexamples002.htm#GIQQK"><span class="secnum">38.2.1.1</span> The Many-To-Many Relationship in roster</a></li>
</ul>
</li>
<li><a href="persistence-basicexamples002.htm#GIQRF"><span class="secnum">38.2.2</span> Entity Inheritance in the roster Application</a></li>
<li><a href="persistence-basicexamples002.htm#GJJFL"><span class="secnum">38.2.3</span> Criteria Queries in the roster Application</a>
<ul style="list-style-type:none">
<li><a href="persistence-basicexamples002.htm#GJJEX"><span class="secnum">38.2.3.1</span> Metamodel Classes in the roster Application</a></li>
<li><a href="persistence-basicexamples002.htm#GJJFN"><span class="secnum">38.2.3.2</span> Obtaining a CriteriaBuilder Instance in RequestBean</a></li>
<li><a href="persistence-basicexamples002.htm#GJJFF"><span class="secnum">38.2.3.3</span> Creating Criteria Queries in RequestBean's Business Methods</a></li>
</ul>
</li>
<li><a href="persistence-basicexamples002.htm#GIQRX"><span class="secnum">38.2.4</span> Automatic Table Generation in the roster Application</a></li>
<li><a href="persistence-basicexamples002.htm#GIQUZ"><span class="secnum">38.2.5</span> Running the roster Example</a>
<ul style="list-style-type:none">
<li><a href="persistence-basicexamples002.htm#GIQUG"><span class="secnum">38.2.5.1</span> To Run the roster Example Using NetBeans IDE</a></li>
<li><a href="persistence-basicexamples002.htm#GIQSJ"><span class="secnum">38.2.5.2</span> To Run the roster Example Using Maven</a></li>
</ul>
</li>
</ul>
</li>
<li><div id="backgroundColor"><a href="persistence-basicexamples003.htm#GKANQ"><span class="secnum">38.3</span> The address-book Application</a><ul style="list-style-type:none">
<li><a href="persistence-basicexamples003.htm#GKAOJ"><span class="secnum">38.3.1</span> Bean Validation Constraints in address-book</a></li>
<li><a href="persistence-basicexamples003.htm#GKANL"><span class="secnum">38.3.2</span> Specifying Error Messages for Constraints in address-book</a></li>
<li><a href="persistence-basicexamples003.htm#GKAON"><span class="secnum">38.3.3</span> Validating Contact Input from a JavaServer Faces Application</a></li>
<li><a href="persistence-basicexamples003.htm#GKAOP"><span class="secnum">38.3.4</span> Running the address-book Example</a>
<ul style="list-style-type:none">
<li><a href="persistence-basicexamples003.htm#GKAOD"><span class="secnum">38.3.4.1</span> To Run the address-book Example Using NetBeans IDE</a></li>
<li><a href="persistence-basicexamples003.htm#GKANZ"><span class="secnum">38.3.4.2</span> To Run the address-book Example Using Maven</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="persistence-basicexamples002.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="persistence-querylanguage.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="GKANQ" name="GKANQ"></a><a id="JEETT00495" name="JEETT00495"></a>
<div class="sect1">
<h1 class="sect1"><span class="secnum">38.3</span> <a id="sthref1957" name="sthref1957"></a><a id="sthref1958" name="sthref1958"></a>The address-book Application</h1>
<p>The <code>address-book</code> example application is a simple web application that stores contact data. It uses a single entity class, <code>Contact</code>, that uses the Java API for JavaBeans Validation (Bean Validation) to validate the data stored in the persistent attributes of the entity, as described in <a href="persistence-intro001.htm#GKAHQ">Validating Persistent Fields and Properties</a>.</p>
<a id="GKAOJ" name="GKAOJ"></a><a id="JEETT01176" name="JEETT01176"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">38.3.1</span> <a id="sthref1959" name="sthref1959"></a>Bean Validation Constraints in address-book</h2>
<p>The <code>Contact</code> entity uses the <code>@NotNull</code>, <code>@Pattern</code>, and <code>@Past</code> constraints on the persistent attributes.</p>
<p>The <code>@NotNull</code> constraint marks the attribute as a required field. The attribute must be set to a non-null value before the entity can be persisted or modified. Bean Validation will throw a validation error if the attribute is null when the entity is persisted or modified.</p>
<p>The <code>@Pattern</code> constraint defines a regular expression that the value of the attribute must match before the entity can be persisted or modified. This constraint has two different uses in <code>address-book</code>.</p>
<ul>
<li>
<p>The regular expression declared in the <code>@Pattern</code> annotation on the <code>email</code> field matches email addresses of the form <span class="variable">name</span><code>@</code><span class="variable">domain name</span><code>.</code><span class="variable">top level domain</span>, allowing only valid characters for email addresses. For example, <code>username@example.com</code> will pass validation, as will <code>firstname.lastname@mail.example.com</code>. However, <code>firstname,lastname@example.com</code>, which contains an illegal comma character in the local name, will fail validation.</p>
</li>
<li>
<p>The <code>mobilePhone</code> and <code>homePhone</code> fields are annotated with a <code>@Pattern</code> constraint that defines a regular expression to match phone numbers of the form <code>(</code><span class="variable">xxx</span><code>)</code> <span class="variable">xxx</span><code>-</code><span class="variable">xxxx</span>.</p>
</li>
</ul>
<p>The <code>@Past</code> constraint is applied to the birthday field, which must be a <code>java.util.Date</code> in the past.</p>
<p>Here are the relevant parts of the <code>Contact</code> entity class:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Entity
public class Contact implements Serializable {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;
    @NotNull
    protected String firstName;
    @NotNull
    protected String lastName;
    @Pattern(regexp = "[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\\."
            + "[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*@"
            + "(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9]"
            + "(?:[a-z0-9-]*[a-z0-9])?",
            message = "{invalid.email}")
    protected String email;
    @Pattern(regexp = "^\\(?(\\d{3})\\)?[- ]?(\\d{3})[- ]?(\\d{4})$",
            message = "{invalid.phonenumber}")
    protected String mobilePhone;
    @Pattern(regexp = "^\\(?(\\d{3})\\)?[- ]?(\\d{3})[- ]?(\\d{4})$",
            message = "{invalid.phonenumber}")
    protected String homePhone;
    @Temporal(javax.persistence.TemporalType.DATE)
    @Past
    protected Date birthday;
    ...
}
</pre></div>
<!-- class="sect2" -->
<a id="GKANL" name="GKANL"></a><a id="JEETT01177" name="JEETT01177"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">38.3.2</span> Specifying Error Messages for Constraints in address-book</h2>
<p>Some of the constraints in the <code>Contact</code> entity specify an optional message:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Pattern(regexp = "^\\(?(\\d{3})\\)?[- ]?(\\d{3})[- ]?(\\d{4})$",
        message = "{invalid.phonenumber}")
protected String homePhone;
</pre>
<p>The optional message element in the <code>@Pattern</code> constraint overrides the default validation message. The message can be specified directly:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Pattern(regexp = "^\\(?(\\d{3})\\)?[- ]?(\\d{3})[- ]?(\\d{4})$",
        message = "Invalid phone number!")
protected String homePhone;
</pre>
<p>The constraints in <code>Contact</code>, however, are strings in the resource bundle <code>ValidationMessages.properties</code>, under <span class="variable">tut-install</span><code>/examples/persistence/address-book/src/java/</code>. This allows the validation messages to be located in one single properties file and the messages to be easily localized. Overridden Bean Validation messages must be placed in a resource bundle properties file named <code>ValidationMessages.properties</code> in the default package, with localized resource bundles taking the form <code>ValidationMessages_</code><span class="variable">locale-prefix</span><code>.properties</code>. For example, <code>ValidationMessages_es.properties</code> is the resource bundle used in Spanish-speaking locales.</p>
</div>
<!-- class="sect2" -->
<a id="GKAON" name="GKAON"></a><a id="JEETT01178" name="JEETT01178"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">38.3.3</span> <a id="sthref1960" name="sthref1960"></a>Validating Contact Input from a JavaServer Faces Application</h2>
<p>The <code>address-book</code> application uses a JavaServer Faces web front end to allow users to enter contacts. While JavaServer Faces has a form input validation mechanism using tags in Facelets XHTML files, <code>address-book</code> doesn't use these validation tags. Bean Validation constraints in JavaServer Faces managed beans, in this case in the <code>Contact</code> entity, automatically trigger validation when the forms are submitted.</p>
<p>The following code snippet from the <code>Create.xhtml</code> Facelets file shows some of the input form for creating new <code>Contact</code> instances:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;h:form&gt;
    &lt;table columns="3" role="presentation"&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;h:outputLabel value="#{bundle.CreateContactLabel_firstName}" 
                               for="firstName" /&gt;&lt;/td&gt;
            &lt;td&gt;&lt;h:inputText id="firstName" 
                             value="#{contactController.selected.firstName}" 
                             title="#{bundle.CreateContactTitle_firstName}"/&gt;
            &lt;/td&gt;
            &lt;td&gt;&lt;h:message for="firstName" /&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;&lt;h:outputLabel value="#{bundle.CreateContactLabel_lastName}" 
                               for="lastName" /&gt;&lt;/td&gt;
            &lt;td&gt;&lt;h:inputText id="lastName" 
                             value="#{contactController.selected.lastName}" 
                             title="#{bundle.CreateContactTitle_lastName}" /&gt;
            &lt;/td&gt;
            &lt;td&gt;&lt;h:message for="lastName" /&gt;&lt;/td&gt;
        &lt;/tr&gt;
        ...
    &lt;/table&gt;
&lt;/h:form&gt;
</pre>
<p>The <code>&lt;h:inputText&gt;</code> tags <code>firstName</code> and <code>lastName</code> are bound to the attributes in the <code>Contact</code> entity instance <code>selected</code> in the <code>ContactController</code> stateless session bean. Each <code>&lt;h:inputText&gt;</code> tag has an associated <code>&lt;h:message&gt;</code> tag that will display validation error messages. The form doesn't require any JavaServer Faces validation tags, however.</p>
</div>
<!-- class="sect2" -->
<a id="GKAOP" name="GKAOP"></a><a id="JEETT01179" name="JEETT01179"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">38.3.4</span> Running the address-book Example</h2>
<p>You can use either NetBeans IDE or Maven to build, package, deploy, and run the <code>address-book</code> application.</p>
<a id="GKAOD" name="GKAOD"></a><a id="JEETT00239" name="JEETT00239"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">38.3.4.1</span> To Run the address-book Example Using NetBeans IDE</h3>
<ol>
<li>
<p>Make sure that GlassFish Server has been started (see <a href="usingexamples002.htm#BNADI">Starting and Stopping GlassFish Server</a>).</p>
</li>
<li>
<p>If the database server is not already running, start it by following the instructions in <a href="usingexamples004.htm#BNADK">Starting and Stopping the Java DB Server</a>.</p>
</li>
<li>
<p>From the <span class="gui-object-action">File</span> menu, choose <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-title">Open Project</span> dialog box, navigate to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/persistence
</pre></li>
<li>
<p>Select the <code>address-book</code> folder.</p>
</li>
<li>
<p>Click <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-action">Projects</span> tab, right-click the <code>address-book</code> project and select <span class="gui-object-action">Run</span>.</p>
<p>After the application has been deployed, a web browser window appears at the following URL:</p>
<pre xml:space="preserve" class="oac_no_warn">
http://localhost:8080/address-book/
</pre></li>
<li>
<p>Click <span class="gui-object-action">Show All Contact Items</span>, then <span class="gui-object-action">Create New Contact</span>. Enter values in the fields; then click <span class="gui-object-action">Save</span>.</p>
<p>If any of the values entered violate the constraints in <code>Contact</code>, an error message will appear in red beside the field with the incorrect values.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="GKANZ" name="GKANZ"></a><a id="JEETT00240" name="JEETT00240"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">38.3.4.2</span> To Run the address-book Example Using Maven</h3>
<ol>
<li>
<p>Make sure that GlassFish Server has been started (see <a href="usingexamples002.htm#BNADI">Starting and Stopping GlassFish Server</a>).</p>
</li>
<li>
<p>If the database server is not already running, start it by following the instructions in <a href="usingexamples004.htm#BNADK">Starting and Stopping the Java DB Server</a>.</p>
</li>
<li>
<p>In a terminal window, go to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/persistence/address-book/
</pre></li>
<li>
<p>Enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn install
</pre>
<p>This will compile and assemble the <code>address-book</code> application into a WAR. The WAR file is then deployed to GlassFish Server.</p>
</li>
<li>
<p>Open a web browser window and enter the following URL:</p>
<pre xml:space="preserve" class="oac_no_warn">
http://localhost:8080/address-book/
</pre></li>
<li>
<p>Click <span class="gui-object-action">Show All Contact Items</span>, then <span class="gui-object-action">Create New Contact</span>. Enter values in the fields; then click <span class="gui-object-action">Save</span>.</p>
<p>If any of the values entered violate the constraints in <code>Contact</code>, an error message will appear in red beside the field with the incorrect values.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="persistence-basicexamples002.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="persistence-querylanguage.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

