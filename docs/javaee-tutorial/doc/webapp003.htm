<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:0Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="A Web Module That Uses JavaServer Faces Technology: The hello1 Example" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:A Web Module That Uses JavaServer Faces Technology: The hello1 Example | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<ul style="list-style-type:none">
<li><a href="webapp001.htm#GEYSJ"><span class="secnum">6.1</span> Web Applications</a></li>
<li><a href="webapp002.htm#BNADU"><span class="secnum">6.2</span> Web Application Lifecycle</a></li>
<li><div id="backgroundColor"><a href="webapp003.htm#BNADX"><span class="secnum">6.3</span> A Web Module That Uses JavaServer Faces Technology: The hello1 Example</a><ul style="list-style-type:none">
<li><a href="webapp003.htm#GJWTV"><span class="secnum">6.3.1</span> To View the hello1 Web Module Using NetBeans IDE</a>
<ul style="list-style-type:none">
<li><a href="webapp003.htm#GLQLK"><span class="secnum">6.3.1.1</span> Introduction to Scopes</a></li>
</ul>
</li>
<li><a href="webapp003.htm#BNADZ"><span class="secnum">6.3.2</span> Packaging and Deploying the hello1 Web Module</a>
<ul style="list-style-type:none">
<li><a href="webapp003.htm#GJRGN"><span class="secnum">6.3.2.1</span> To Build and Package the hello1 Web Module Using NetBeans IDE</a></li>
<li><a href="webapp003.htm#GJRKN"><span class="secnum">6.3.2.2</span> To Build and Package the hello1 Web Module Using Maven</a></li>
</ul>
</li>
<li><a href="webapp003.htm#BNAEI"><span class="secnum">6.3.3</span> Viewing Deployed Web Modules</a>
<ul style="list-style-type:none">
<li><a href="webapp003.htm#GJSGR"><span class="secnum">6.3.3.1</span> To View Deployed Web Modules Using the Administration Console</a></li>
<li><a href="webapp003.htm#GJSEW"><span class="secnum">6.3.3.2</span> To View Deployed Web Modules Using the asadmin Command</a></li>
<li><a href="webapp003.htm#sthref205"><span class="secnum">6.3.3.3</span> To View Deployed Web Modules Using NetBeans IDE</a></li>
</ul>
</li>
<li><a href="webapp003.htm#sthref206"><span class="secnum">6.3.4</span> Running the Deployed hello1 Web Module</a>
<ul style="list-style-type:none">
<li><a href="webapp003.htm#BNAEM"><span class="secnum">6.3.4.1</span> Dynamic Reloading of Deployed Modules</a></li>
</ul>
</li>
<li><a href="webapp003.htm#BNAEN"><span class="secnum">6.3.5</span> Undeploying the hello1 Web Module</a>
<ul style="list-style-type:none">
<li><a href="webapp003.htm#GJSEJ"><span class="secnum">6.3.5.1</span> To Undeploy the hello1 Web Module Using NetBeans IDE</a></li>
<li><a href="webapp003.htm#GJSHH"><span class="secnum">6.3.5.2</span> To Undeploy the hello1 Web Module Using Maven</a></li>
</ul>
</li>
</ul>
</div></li>
<li><a href="webapp004.htm#BNAEO"><span class="secnum">6.4</span> A Web Module That Uses Java Servlet Technology: The hello2 Example</a>
<ul style="list-style-type:none">
<li><a href="webapp004.htm#BNAEP"><span class="secnum">6.4.1</span> Mapping URLs to Web Components</a></li>
<li><a href="webapp004.htm#GJWWG"><span class="secnum">6.4.2</span> Examining the hello2 Web Module</a>
<ul style="list-style-type:none">
<li><a href="webapp004.htm#GJWWA"><span class="secnum">6.4.2.1</span> To View the hello2 Web Module Using NetBeans IDE</a></li>
</ul>
</li>
<li><a href="webapp004.htm#GKBLH"><span class="secnum">6.4.3</span> Running the hello2 Example</a>
<ul style="list-style-type:none">
<li><a href="webapp004.htm#GJSED"><span class="secnum">6.4.3.1</span> To Run the hello2 Example Using NetBeans IDE</a></li>
<li><a href="webapp004.htm#GJSHX"><span class="secnum">6.4.3.2</span> To Run the hello2 Example Using Maven</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="webapp005.htm#CHDHGJIA"><span class="secnum">6.5</span> Configuring Web Applications</a>
<ul style="list-style-type:none">
<li><a href="webapp005.htm#BNAES"><span class="secnum">6.5.1</span> Setting Context Parameters</a>
<ul style="list-style-type:none">
<li><a href="webapp005.htm#GJSFJ"><span class="secnum">6.5.1.1</span> To Add a Context Parameter Using NetBeans IDE</a></li>
<li><a href="webapp005.htm#GKIHH"><span class="secnum">6.5.1.2</span> To Create a web.xml File Using NetBeans IDE</a></li>
</ul>
</li>
<li><a href="webapp005.htm#BNAER"><span class="secnum">6.5.2</span> Declaring Welcome Files</a></li>
<li><a href="webapp005.htm#GKBKW"><span class="secnum">6.5.3</span> Mapping Errors to Error Screens</a>
<ul style="list-style-type:none">
<li><a href="webapp005.htm#BNAET"><span class="secnum">6.5.3.1</span> To Set Up Error Mapping Using NetBeans IDE</a></li>
</ul>
</li>
<li><a href="webapp005.htm#BNAEU"><span class="secnum">6.5.4</span> Declaring Resource References</a>
<ul style="list-style-type:none">
<li><a href="webapp005.htm#BNAEW"><span class="secnum">6.5.4.1</span> Declaring a Reference to a Resource</a></li>
<li><a href="webapp005.htm#BNAEX"><span class="secnum">6.5.4.2</span> Declaring a Reference to a Web Service</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="webapp006.htm#BNAFC"><span class="secnum">6.6</span> Further Information about Web Applications</a></li>
</ul>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="webapp002.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="webapp004.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="BNADX" name="BNADX"></a><a id="JEETT00327" name="JEETT00327"></a>
<div class="sect1">
<h1 class="sect1"><span class="secnum">6.3</span> A Web Module That Uses JavaServer Faces Technology: The hello1 Example</h1>
<p>The <code>hello1</code> application is a web module that uses JavaServer Faces technology to display a greeting and response. You can use a text editor to view the application files, or you can use NetBeans IDE.</p>
<p>The source code for this application is in the <span class="variable">tut-install</span><code>/examples/web/jsf/hello1/</code> directory.</p>
<a id="GJWTV" name="GJWTV"></a><a id="JEETT00145" name="JEETT00145"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">6.3.1</span> To View the hello1 Web Module Using NetBeans IDE</h2>
<ol>
<li>
<p>From the <span class="gui-object-action">File</span> menu, choose <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-title">Open Project</span> dialog box, navigate to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/web/jsf
</pre></li>
<li>
<p>Select the <code>hello1</code> folder and click <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>Expand the <span class="gui-object-action">Web Pages</span> node and double-click the <code>index.xhtml</code> file to view it in the editor.</p>
<p>The <code>index.xhtml</code> file is the default landing page for a Facelets application. In a typical Facelets application, web pages are created in XHTML. For this application, the page uses simple tag markup to display a form with a graphic image, a header, a field, and two command buttons:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html lang="en"
      xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"&gt;
    &lt;h:head&gt;
        &lt;title&gt;Facelets Hello Greeting&lt;/title&gt;
    &lt;/h:head&gt;
    &lt;h:body&gt;
        &lt;h:form&gt;
            &lt;h:graphicImage url="#{resource['images:duke.waving.gif']}"
                            alt="Duke waving his hand"/&gt;
            &lt;h2&gt;Hello, my name is Duke. What's yours?&lt;/h2&gt;
            &lt;h:inputText id="username"
                         title="My name is: "
                         value="#{hello.name}"
                         required="true"
                         requiredMessage="Error: A name is required."
                         maxlength="25" /&gt;
            &lt;p&gt;&lt;/p&gt;
            &lt;h:commandButton id="submit" value="Submit" action="response"&gt;
            &lt;/h:commandButton&gt;
            &lt;h:commandButton id="reset" value="Reset" type="reset"&gt;
            &lt;/h:commandButton&gt;
        &lt;/h:form&gt;
        ...
    &lt;/h:body&gt;
&lt;/html&gt;
</pre>
<p>The most complex element on the page is the <code>inputText</code> field. The <code>maxlength</code> attribute specifies the maximum length of the field. The <code>required</code> attribute specifies that the field must be filled out; the <code>requiredMessage</code> attribute provides the error message to be displayed if the field is left empty. The <code>title</code> attribute provides the text to be used by screen readers for the visually disabled. Finally, the <code>value</code> attribute contains an expression that will be provided by the <code>Hello</code> managed bean.</p>
<p><a id="sthref197" name="sthref197"></a>The web page connects to the <code>Hello</code> managed bean through the Expression Language (EL) value expression <code>#{hello.name}</code>, which retrieves the value of the <code>name</code> property from the managed bean. Note the use of <code>hello</code> to reference the managed bean <code>Hello</code>. If no name is specified in the <code>@Named</code> annotation of the managed bean, the managed bean is always accessed with the first letter of the class name in lowercase.</p>
<p>The Submit <code>commandButton</code> element specifies the action as <code>response</code>, meaning that when the button is clicked, the <code>response.xhtml</code> page is displayed.</p>
</li>
<li>
<p>Double-click the <code>response.xhtml</code> file to view it.</p>
<p>The response page appears. Even simpler than the greeting page, the response page contains a graphic image, a header that displays the expression provided by the managed bean, and a single button whose <code>action</code> element transfers you back to the <code>index.xhtml</code> page:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html lang="en"
      xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"&gt;
    &lt;h:head&gt;
        &lt;title&gt;Facelets Hello Response&lt;/title&gt;
    &lt;/h:head&gt;
    &lt;h:body&gt;
        &lt;h:form&gt;
            &lt;h:graphicImage url="#{resource['images:duke.waving.gif']}"
                            alt="Duke waving his hand"/&gt;
            &lt;h2&gt;Hello, #{hello.name}!&lt;/h2&gt;
            &lt;p&gt;&lt;/p&gt;
            &lt;h:commandButton id="back" value="Back" action="index" /&gt;
        &lt;/h:form&gt;
    &lt;/h:body&gt;
&lt;/html&gt;
</pre></li>
<li>
<p>Expand the <span class="gui-object-action">Source Packages</span> node, then the <code>javaeetutorial.hello1</code> node.</p>
</li>
<li><a id="CHDCABHC" name="CHDCABHC"></a>
<p>Double-click the <code>Hello.java</code> file to view it.</p>
<p>The <code>Hello</code> class, called a managed bean class, provides getter and setter methods for the <code>name</code> property used in the Facelets page expressions. By default, the expression language refers to the class name, with the first letter in lowercase (<code>hello.name</code>).</p>
<pre xml:space="preserve" class="oac_no_warn">
package javaeetutorial.hello1;

import javax.enterprise.context.RequestScoped;
import javax.inject.Named;

@Named
@RequestScoped
public class Hello {

    private String name;

    public Hello() {
    }

    public String getName() {
        return name;
    }

    public void setName(String user_name) {
        this.name = user_name;
    }
}
</pre>
<p>If you use the default name for the bean class, you can specify <code>@Model</code> as the annotation instead of having to specify both <code>@Named</code> and <code>@RequestScoped</code>. The <code>@Model</code> annotation is called a <span class="glossaryterm">stereotype</span>, a term for an annotation that encapsulates other annotations. It is described later in <a href="cdi-adv008.htm#GKHQC">Using Stereotypes in CDI Applications</a>. Some examples will use <code>@Model</code> where it is appropriate.</p>
</li>
<li>
<p>Under the <span class="gui-object-action">Web Pages</span> node, expand the <span class="gui-object-action">WEB-INF</span> node and double-click the <code>web.xml</code> file to view it.</p>
<p>The <code>web.xml</code> file contains several elements that are required for a Facelets application. All of the following are created automatically when you use NetBeans IDE to create an application.</p>
<ul>
<li>
<p>A context parameter specifying the project stage:</p>
<pre xml:space="preserve" class="oac_no_warn">
    &lt;context-param&gt;
        &lt;param-name&gt;javax.faces.PROJECT_STAGE&lt;/param-name&gt;
        &lt;param-value&gt;Development&lt;/param-value&gt;
    &lt;/context-param&gt;
</pre>
<p><a id="sthref198" name="sthref198"></a>A context parameter provides configuration information needed by a web application. An application can define its own context parameters. In addition, JavaServer Faces technology and Java Servlet technology define context parameters that an application can use.</p>
</li>
<li>
<p>A <code>servlet</code> element and its <code>servlet-mapping</code> element specifying the <code>FacesServlet</code>. All files with the <code>.xhtml</code> suffix will be matched:</p>
<pre xml:space="preserve" class="oac_no_warn">
    &lt;servlet&gt;
        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
        &lt;servlet-class&gt;javax.faces.webapp.FacesServlet&lt;/servlet-class&gt;
        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;
    &lt;/servlet&gt;
    &lt;servlet-mapping&gt;
        &lt;servlet-name&gt;Faces Servlet&lt;/servlet-name&gt;
        &lt;url-pattern&gt;*.xhtml&lt;/url-pattern&gt;
    &lt;/servlet-mapping&gt;
</pre></li>
<li>
<p>A <code>welcome-file-list</code> element specifying the location of the landing page:</p>
<pre xml:space="preserve" class="oac_no_warn">
    &lt;welcome-file-list&gt;
        &lt;welcome-file&gt;index.xhtml&lt;/welcome-file&gt;
    &lt;/welcome-file-list&gt;
</pre></li>
</ul>
</li>
</ol>
<a id="GLQLK" name="GLQLK"></a><a id="JEETT00585" name="JEETT00585"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">6.3.1.1</span> <a id="sthref199" name="sthref199"></a>Introduction to Scopes</h3>
<p>In the <code>Hello.java</code> class, the annotations <code>javax.inject.Named</code> and <code>javax.enterprise.context.RequestScoped</code> identify the class as a managed bean using request scope. Scope defines how application data persists and is shared.</p>
<p>The most commonly used scopes in JavaServer Faces applications are the following:</p>
<ul>
<li>
<p><a id="sthref200" name="sthref200"></a><span class="bold">Request (</span><code>@RequestScoped</code><span class="bold">)</span>: Request scope persists during a single HTTP request in a web application. In an application like <code>hello1</code>, in which the application consists of a single request and response, the bean uses request scope.</p>
</li>
<li>
<p><a id="sthref201" name="sthref201"></a><span class="bold">Session (</span><code>@SessionScoped</code><span class="bold">)</span>: Session scope persists across multiple HTTP requests in a web application. When an application consists of multiple requests and responses where data needs to be maintained, beans use session scope.</p>
</li>
<li>
<p><a id="sthref202" name="sthref202"></a><span class="bold">Application (</span><code>@ApplicationScoped</code><span class="bold">)</span>: Application scope persists across all users' interactions with a web application.</p>
</li>
</ul>
<p>For more information on scopes in JavaServer Faces technology, see <a href="jsf-configure001.htm#GIRCR">Using Managed Bean Scopes</a>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BNADZ" name="BNADZ"></a><a id="JEETT00892" name="JEETT00892"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">6.3.2</span> <a id="sthref203" name="sthref203"></a>Packaging and Deploying the hello1 Web Module</h2>
<p>A web module must be packaged into a WAR in certain deployment scenarios and whenever you want to distribute the web module. You can package a web module into a WAR file by using Maven or by using the IDE tool of your choice. This tutorial shows you how to use NetBeans IDE or Maven to build, package, and deploy the <code>hello1</code> sample application.</p>
<p>You can deploy a WAR file to GlassFish Server by:</p>
<ul>
<li>
<p>Using NetBeans IDE</p>
</li>
<li>
<p>Using the <code>asadmin</code> command</p>
</li>
<li>
<p>Using the Administration Console</p>
</li>
<li>
<p>Copying the WAR file into the <span class="variable">domain-dir</span><code>/autodeploy/</code> directory</p>
</li>
</ul>
<p>Throughout the tutorial, you will use NetBeans IDE or Maven for packaging and deploying.</p>
<a id="GJRGN" name="GJRGN"></a><a id="JEETT00147" name="JEETT00147"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">6.3.2.1</span> To Build and Package the hello1 Web Module Using NetBeans IDE</h3>
<ol>
<li>
<p>Start GlassFish Server as described in <a href="usingexamples002.htm#CHDCACDI">To Start GlassFish Server Using NetBeans IDE</a>, if you have not already done so.</p>
</li>
<li>
<p>From the <span class="gui-object-action">File</span> menu, choose <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-title">Open Project</span> dialog box, navigate to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/web/jsf
</pre></li>
<li>
<p>Select the <code>hello1</code> folder.</p>
</li>
<li>
<p>Click <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-action">Projects</span> tab, right-click the <code>hello1</code> project and select <span class="gui-object-action">Build</span>. This command deploys the project to the server.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="GJRKN" name="GJRKN"></a><a id="JEETT00148" name="JEETT00148"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">6.3.2.2</span> To Build and Package the hello1 Web Module Using Maven</h3>
<ol>
<li>
<p>Start GlassFish Server as described in <a href="usingexamples002.htm#CHDBDDAF">To Start GlassFish Server Using the Command Line</a>, if you have not already done so.</p>
</li>
<li>
<p>In a terminal window, go to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/web/jsf/hello1/
</pre></li>
<li>
<p>Enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn install
</pre>
<p>This command spawns any necessary compilations and creates the WAR file in <span class="variable">tut-install</span><code>/examples/web/jsf/hello1/target/</code>. It then deploys the project to the server.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BNAEI" name="BNAEI"></a><a id="JEETT00894" name="JEETT00894"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">6.3.3</span> <a id="sthref204" name="sthref204"></a>Viewing Deployed Web Modules</h2>
<p>GlassFish Server provides two ways to view the deployed web modules: the Administration Console and the <code>asadmin</code> command. You can also use NetBeans IDE to view deployed modules.</p>
<a id="GJSGR" name="GJSGR"></a><a id="JEETT00152" name="JEETT00152"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">6.3.3.1</span> To View Deployed Web Modules Using the Administration Console</h3>
<ol>
<li>
<p>Open the URL <code>http://localhost:4848/</code> in a browser.</p>
</li>
<li>
<p>Select the <span class="gui-object-action">Applications</span> node.</p>
<p>The deployed web modules appear in the <span class="gui-object-action">Deployed Applications</span> table.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="GJSEW" name="GJSEW"></a><a id="JEETT00153" name="JEETT00153"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">6.3.3.2</span> To View Deployed Web Modules Using the asadmin Command</h3>
<p>Enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
asadmin list-applications
</pre></div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref205" name="sthref205"></a>
<h3 class="sect3"><span class="secnum">6.3.3.3</span> To View Deployed Web Modules Using NetBeans IDE</h3>
<ol>
<li>
<p>In the <span class="gui-object-action">Services</span> tab, expand the <span class="gui-object-action">Servers</span> node, then expand the <span class="gui-object-action">GlassFish Server</span> node.</p>
</li>
<li>
<p>Expand the <span class="gui-object-action">Applications</span> node to view the deployed modules.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><a id="sthref206" name="sthref206"></a>
<h2 class="sect2"><span class="secnum">6.3.4</span> Running the Deployed hello1 Web Module</h2>
<p>Now that the web module is deployed, you can view it by opening the application in a web browser. By default, the application is deployed to host <code>localhost</code> on port 8080. The context root of the web application is <code>hello1</code>.</p>
<ol>
<li>
<p>Open a web browser.</p>
</li>
<li>
<p>Enter the following URL:</p>
<pre xml:space="preserve" class="oac_no_warn">
http://localhost:8080/hello1/
</pre></li>
<li>
<p>In the field, enter your name and click <span class="gui-object-action">Submit</span>.</p>
<p>The response page displays the name you submitted. Click <span class="gui-object-action">Back</span> to try again.</p>
</li>
</ol>
<a id="BNAEM" name="BNAEM"></a><a id="JEETT00896" name="JEETT00896"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">6.3.4.1</span> Dynamic Reloading of Deployed Modules</h3>
<p><a id="sthref207" name="sthref207"></a>If dynamic reloading is enabled, you do not have to redeploy an application or module when you change its code or deployment descriptors. All you have to do is copy the changed pages or class files into the deployment directory for the application or module. The deployment directory for a web module named <span class="variable">context-root</span> is <span class="variable">domain-dir</span><code>/applications/</code><span class="variable">context-root</span>. The server checks for changes periodically and redeploys the application, automatically and dynamically, with the changes.</p>
<p>This capability is useful in a development environment because it allows code changes to be tested quickly. Dynamic reloading is not recommended for a production environment, however, because it may degrade performance. In addition, whenever a reload takes place, the sessions at that time become invalid, and the client must restart the session.</p>
<p>In GlassFish Server, dynamic reloading is enabled by default.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BNAEN" name="BNAEN"></a><a id="JEETT00897" name="JEETT00897"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">6.3.5</span> <a id="sthref208" name="sthref208"></a><a id="sthref209" name="sthref209"></a><a id="sthref210" name="sthref210"></a>Undeploying the hello1 Web Module</h2>
<p>You can undeploy web modules and other types of enterprise applications by using either NetBeans IDE or Maven.</p>
<a id="GJSEJ" name="GJSEJ"></a><a id="JEETT00156" name="JEETT00156"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">6.3.5.1</span> To Undeploy the hello1 Web Module Using NetBeans IDE</h3>
<ol>
<li>
<p>In the <span class="gui-object-action">Services</span> tab, expand the <span class="gui-object-action">Servers</span> node, then expand the <span class="gui-object-action">GlassFish Server</span> node.</p>
</li>
<li>
<p>Expand the <span class="gui-object-action">Applications</span> node.</p>
</li>
<li>
<p>Right-click the <code>hello1</code> module and select <span class="gui-object-action">Undeploy</span>.</p>
</li>
<li>
<p>To delete the class files and other build artifacts, go back to the <span class="gui-object-action">Projects</span> tab, right-click the project, and select <span class="gui-object-action">Clean</span>.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="GJSHH" name="GJSHH"></a><a id="JEETT00157" name="JEETT00157"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">6.3.5.2</span> To Undeploy the hello1 Web Module Using Maven</h3>
<ol>
<li>
<p>In a terminal window, go to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/web/jsf/hello1/
</pre></li>
<li>
<p>Enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn cargo:undeploy
</pre></li>
<li>
<p>To delete the class files and other build artifacts, enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn clean
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="webapp002.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="webapp004.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

