<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:4Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Working with Digital Certificates" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:Working with Digital Certificates | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<ul style="list-style-type:none">
<li><div id="backgroundColor"><a href="security-advanced001.htm#BNBYB"><span class="secnum">50.1</span> Working with Digital Certificates</a><ul style="list-style-type:none">
<li><a href="security-advanced001.htm#BNBYC"><span class="secnum">50.1.1</span> Creating a Server Certificate</a>
<ul style="list-style-type:none">
<li><a href="security-advanced001.htm#GJRGY"><span class="secnum">50.1.1.1</span> To Use keytool to Create a Server Certificate</a></li>
</ul>
</li>
<li><a href="security-advanced001.htm#GLIFW"><span class="secnum">50.1.2</span> Adding Users to the Certificate Realm</a></li>
<li><a href="security-advanced001.htm#BNBYF"><span class="secnum">50.1.3</span> Using a Different Server Certificate with GlassFish Server</a>
<ul style="list-style-type:none">
<li><a href="security-advanced001.htm#sthref2751"><span class="secnum">50.1.3.1</span> To Specify a Different Server Certificate</a></li>
</ul>
</li>
</ul>
</div></li>
<li><a href="security-advanced002.htm#GLIEN"><span class="secnum">50.2</span> Authentication Mechanisms</a>
<ul style="list-style-type:none">
<li><a href="security-advanced002.htm#GLIEQ"><span class="secnum">50.2.1</span> Client Authentication</a></li>
<li><a href="security-advanced002.htm#GLIEL"><span class="secnum">50.2.2</span> Mutual Authentication</a>
<ul style="list-style-type:none">
<li><a href="security-advanced002.htm#BNBYH"><span class="secnum">50.2.2.1</span> Enabling Mutual Authentication over SSL</a></li>
<li><a href="security-advanced002.htm#BNBYI"><span class="secnum">50.2.2.2</span> Creating a Client Certificate for Mutual Authentication</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="security-advanced003.htm#BABEJJDE"><span class="secnum">50.3</span> Using the JDBC Realm for User Authentication</a>
<ul style="list-style-type:none">
<li><a href="security-advanced003.htm#sthref2773"><span class="secnum">50.3.1</span> To Configure a JDBC Authentication Realm</a></li>
</ul>
</li>
<li><a href="security-advanced004.htm#BABGEJJJ"><span class="secnum">50.4</span> Securing HTTP Resources</a></li>
<li><a href="security-advanced005.htm#GLIGC"><span class="secnum">50.5</span> Securing Application Clients</a>
<ul style="list-style-type:none">
<li><a href="security-advanced005.htm#GLIDW"><span class="secnum">50.5.1</span> Using Login Modules</a></li>
<li><a href="security-advanced005.htm#GLIHQ"><span class="secnum">50.5.2</span> Using Programmatic Login</a></li>
</ul>
</li>
<li><a href="security-advanced006.htm#GLIFD"><span class="secnum">50.6</span> Securing Enterprise Information Systems Applications</a>
<ul style="list-style-type:none">
<li><a href="security-advanced006.htm#GLIHL"><span class="secnum">50.6.1</span> Container-Managed Sign-On</a></li>
<li><a href="security-advanced006.htm#GLIDP"><span class="secnum">50.6.2</span> Component-Managed Sign-On</a></li>
<li><a href="security-advanced006.htm#GLIGS"><span class="secnum">50.6.3</span> Configuring Resource Adapter Security</a></li>
<li><a href="security-advanced006.htm#GLIGW"><span class="secnum">50.6.4</span> Mapping an Application Principal to EIS Principals</a></li>
</ul>
</li>
<li><a href="security-advanced007.htm#GKHRL"><span class="secnum">50.7</span> Configuring Security Using Deployment Descriptors</a>
<ul style="list-style-type:none">
<li><a href="security-advanced007.htm#BNCCM"><span class="secnum">50.7.1</span> Specifying Security for Basic Authentication in the Deployment Descriptor</a></li>
<li><a href="security-advanced007.htm#GKAFQ"><span class="secnum">50.7.2</span> Specifying Non-Default Principal-to-Role Mapping in the Deployment Descriptor</a></li>
</ul>
</li>
<li><a href="security-advanced008.htm#BABBGBBF"><span class="secnum">50.8</span> Further Information about Advanced Security Topics</a></li>
</ul>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="security-advanced.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="security-advanced002.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="BNBYB" name="BNBYB"></a><a id="JEETT00522" name="JEETT00522"></a>
<div class="sect1">
<h1 class="sect1"><span class="secnum">50.1</span> <a id="sthref2731" name="sthref2731"></a><a id="sthref2732" name="sthref2732"></a><a id="sthref2733" name="sthref2733"></a><a id="sthref2734" name="sthref2734"></a>Working with Digital Certificates</h1>
<p>Digital certificates for GlassFish Server have already been generated and can be found in the directory <span class="variable">domain-dir</span><code>/config/</code>. These digital certificates are self-signed and are intended for use in a development environment; they are not intended for production purposes. For production purposes, generate your own certificates and have them signed by a Certificate Authority (CA).</p>
<p>To use the Secure Sockets Layer (SSL), an application or web server must have an associated certificate for each external interface, or IP address, that accepts secure connections. The theory behind this design is that a server should provide some kind of reasonable assurance that its owner is who you think it is, particularly before receiving any sensitive information. It may be useful to think of a certificate as a "digital driver's license" for an Internet address. The certificate states with which company the site is associated, along with some basic contact information about the site owner or administrator.</p>
<p><a id="sthref2735" name="sthref2735"></a>The digital certificate is cryptographically signed by its owner and is difficult for anyone else to forge. For sites involved in e-commerce or in any other business transaction in which authentication of identity is important, a certificate can be purchased from a well-known CA such as VeriSign or Thawte. If your server certificate is self-signed, you must install it in the GlassFish Server keystore file (<code>keystore.jks</code>). If your client certificate is self-signed, you should install it in the GlassFish Server truststore file (<code>cacerts.jks</code>).</p>
<p>Sometimes, authentication is not really a concern. For example, an administrator might simply want to ensure that data being transmitted and received by the server is private and cannot be snooped by anyone eavesdropping on the connection. In such cases, you can save the time and expense involved in obtaining a CA certificate and simply use a self-signed certificate.</p>
<p><a id="sthref2736" name="sthref2736"></a><a id="sthref2737" name="sthref2737"></a><a id="sthref2738" name="sthref2738"></a><a id="sthref2739" name="sthref2739"></a>SSL uses <span class="glossaryterm">public-key cryptography</span>, which is based on key pairs. <span class="glossaryterm">Key pairs</span> contain one public key and one private key. Data encrypted with one key can be decrypted only with the other key of the pair. This property is fundamental to establishing trust and privacy in transactions. For example, using SSL, the server computes a value and encrypts it by using its private key. The encrypted value is called a <span class="glossaryterm">digital signature</span>. The client decrypts the encrypted value by using the server's public key and compares the value to its own computed value. If the two values match, the client can trust that the signature is authentic, because only the private key could have been used to produce such a signature.</p>
<p><a id="sthref2740" name="sthref2740"></a>Digital certificates are used with HTTPS to authenticate web clients. The HTTPS service of most web servers will not run unless a digital certificate has been installed. Use the procedure outlined in the next section, <a href="#BNBYC">Creating a Server Certificate</a>, to set up a digital certificate that can be used by your application or web server to enable SSL.</p>
<p><a id="sthref2741" name="sthref2741"></a><a id="sthref2742" name="sthref2742"></a><a id="sthref2743" name="sthref2743"></a><a id="sthref2744" name="sthref2744"></a>One tool that can be used to set up a digital certificate is <code>keytool</code>, a key and certificate management utility that ships with the JDK. This tool enables users to administer their own public/private key pairs and associated certificates for use in self-authentication, whereby the user authenticates himself or herself to other users or services, or data integrity and authentication services, using digital signatures. The tool also allows users to cache the public keys, in the form of certificates, of their communicating peers.</p>
<p>For a better understanding of <code>keytool</code> and public-key cryptography, see <a href="security-advanced008.htm#BABBGBBF">Further Information about Advanced Security Topics</a> for a link to the <code>keytool</code> documentation.</p>
<a id="BNBYC" name="BNBYC"></a><a id="JEETT01241" name="JEETT01241"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">50.1.1</span> <a id="sthref2745" name="sthref2745"></a>Creating a Server Certificate</h2>
<p>A server certificate has already been created for GlassFish Server and can be found in the <span class="variable">domain-dir</span><code>/config/</code> directory. The server certificate is in <code>keystore.jks</code>. The <code>cacerts.jks</code> file contains all the trusted certificates, including client certificates.</p>
<p><a id="sthref2746" name="sthref2746"></a>If necessary, you can use <code>keytool</code> to generate certificates. The <code>keytool</code> utility stores the keys and certificates in a file termed a <span class="glossaryterm">keystore</span>, a repository of certificates used for identifying a client or a server. Typically, a keystore is a file that contains one client's or one server's identity. The keystore protects private keys by using a password.</p>
<p>If you don't specify a directory when specifying the keystore file name, the keystores are created in the directory from which the <code>keytool</code> command is run. This can be the directory where the application resides, or it can be a directory common to many applications.</p>
<p>The general steps for creating a server certificate are as follows.</p>
<ol>
<li>
<p>Create the keystore.</p>
</li>
<li>
<p>Export the certificate from the keystore.</p>
</li>
<li>
<p>Sign the certificate.</p>
</li>
<li>
<p><a id="sthref2747" name="sthref2747"></a>Import the certificate into a <span class="glossaryterm">truststore</span>: a repository of certificates used for verifying the certificates. A truststore typically contains more than one certificate.</p>
</li>
</ol>
<p>The next section provides specific information on using the <code>keytool</code> utility to perform these steps.</p>
<a id="GJRGY" name="GJRGY"></a><a id="JEETT00254" name="JEETT00254"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">50.1.1.1</span> To Use keytool to Create a Server Certificate</h3>
<p>Run <code>keytool</code> to generate a new key pair in the default development keystore file, <code>keystore.jks</code>. This example uses the alias <code>server-alias</code> to generate a new public/private key pair and wrap the public key into a self-signed certificate inside <code>keystore.jks</code>. The key pair is generated by using an algorithm of type RSA, with a default password of <code>changeit</code>. For more information and other examples of creating and managing keystore files, read the <code>keytool</code> documentation.</p>
<div align="center">
<div class="inftblnote"><br />
<table class="Note oac_no_warn" summary="" border="1" width="80%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<tbody>
<tr>
<td align="left">
<p class="notep1">Note:</p>
<p>RSA is public-key encryption technology developed by RSA Data Security, Inc.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblnote" --></div>
<p>From the directory in which you want to create the key pair, run <code>keytool</code> as shown in the following steps.</p>
<ol>
<li>
<p>Generate the server certificate.</p>
<p>Enter the <code>keytool</code> command all on one line:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">java-home</span>/bin/keytool -genkey -alias server-alias -keyalg RSA 
-keypass changeit -storepass changeit -keystore keystore.jks
</pre>
<p>When you press <span class="gui-object-action">Enter</span>, <code>keytool</code> prompts you to enter the server name, organizational unit, organization, locality, state, and country code.</p>
<p>You must enter the server name in response to <code>keytool</code>'s first prompt, in which it asks for first and last names. For testing purposes, this can be <code>localhost</code>.</p>
</li>
<li>
<p>Export the generated server certificate in <code>keystore.jks</code> into the file <code>server.cer</code>.</p>
<p>Enter the <code>keytool</code> command all on one line:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">java-home</span>/bin/keytool -export -alias server-alias -storepass changeit 
-file server.cer -keystore keystore.jks
</pre></li>
<li>
<p>If you want to have the certificate signed by a CA, read the example in the <code>keytool</code> documentation.</p>
</li>
<li>
<p>To add the server certificate to the truststore file, <code>cacerts.jks</code>, run <code>keytool</code> from the directory where you created the keystore and server certificate.</p>
<p>Use the following parameters:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">java-home</span>/bin/keytool -import -v -trustcacerts -alias server-alias 
-file server.cer -keystore cacerts.jks -keypass changeit 
-storepass changeit 
</pre>
<p>Information on the certificate, such as that shown next, will appear:</p>
<pre xml:space="preserve" class="oac_no_warn">
Owner: CN=localhost, OU=My Company, O=Software, L=Santa Clara, ST=CA, C=US
Issuer: CN=localhost, OU=My Company, O=Software, L=Santa Clara, ST=CA, C=US
Serial number: 3e932169 
Valid from: Mon Nov 26 18:15:47 EST 2012 until: Sun Feb 24 18:15:47 EST 2013
Certificate fingerprints:
         MD5: 52:9F:49:68:ED:78:6F:39:87:F3:98:B3:6A:6B:0F:90
         SHA1: EE:2E:2A:A6:9E:03:9A:3A:1C:17:4A:28:5E:97:20:78:3F:
         SHA256: 80:05:EC:7E:50:50:5D:AA:A3:53:F1:11:9B:19:EB:0D:20:67:C1:12:
AF:42:EC:CD:66:8C:BD:99:AD:D9:76:95
         Signature algorithm name: SHA256withRSA         Version: 3
         ...
Trust this certificate? [no]:
</pre></li>
<li>
<p>Enter <code>yes</code>, then press the <span class="gui-object-action">Enter</span> or <span class="gui-object-action">Return</span> key.</p>
<p>The following information appears:</p>
<pre xml:space="preserve" class="oac_no_warn">
Certificate was added to keystore
[Storing cacerts.jks]
</pre></li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="GLIFW" name="GLIFW"></a><a id="JEETT01242" name="JEETT01242"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">50.1.2</span> Adding Users to the Certificate Realm</h2>
<p><a id="sthref2748" name="sthref2748"></a><a id="sthref2749" name="sthref2749"></a>In the <code>certificate</code> realm, user identity is set up in the GlassFish Server security context and populated with user data obtained from cryptographically verified client certificates. For step-by-step instructions for creating this type of certificate, see <a href="#BNBYB">Working with Digital Certificates</a>.</p>
</div>
<!-- class="sect2" -->
<a id="BNBYF" name="BNBYF"></a><a id="JEETT01243" name="JEETT01243"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">50.1.3</span> <a id="sthref2750" name="sthref2750"></a>Using a Different Server Certificate with GlassFish Server</h2>
<p>Follow the steps in <a href="#BNBYC">Creating a Server Certificate</a> to create your own server certificate, have it signed by a CA, and import the certificate into <code>keystore.jks</code>.</p>
<p>Make sure that when you create the certificate, you follow these rules.</p>
<ul>
<li>
<p>When you create the server certificate, <code>keytool</code> prompts you to enter your first and last name. In response to this prompt, you must enter the name of your server. For testing purposes, this can be <code>localhost</code>.</p>
</li>
<li>
<p>If you want to replace the existing <code>keystore.jks</code>, you must either change your keystore's password to the default password (<code>changeit</code>) or change the default password to your keystore's password.</p>
</li>
</ul>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref2751" name="sthref2751"></a>
<h3 class="sect3"><span class="secnum">50.1.3.1</span> To Specify a Different Server Certificate</h3>
<p>To specify that GlassFish Server should use the new keystore for authentication and authorization decisions, you must set the JVM options for GlassFish Server so that they recognize the new keystore. To use a different keystore from the one provided for development purposes, follow these steps.</p>
<ol>
<li>
<p>Start GlassFish Server if you haven't already done so. Information on starting the GlassFish Server can be found in <a href="usingexamples002.htm#BNADI">Starting and Stopping GlassFish Server</a>.</p>
</li>
<li>
<p>Open the GlassFish Server Administration Console in a web browser at <code>http://localhost:4848</code>.</p>
</li>
<li>
<p>Expand <span class="gui-object-action">Configurations</span>, then expand <span class="gui-object-action">server-config</span>, then click <span class="gui-object-action">JVM Settings</span>.</p>
</li>
<li>
<p>Click the <span class="gui-object-action">JVM Options</span> tab.</p>
</li>
<li>
<p>Change the following JVM options so that they point to the location and name of the new keystore. The current settings are shown below:</p>
<pre xml:space="preserve" class="oac_no_warn">
-Djavax.net.ssl.keyStore=${com.sun.aas.instanceRoot}/config/keystore.jks
-Djavax.net.ssl.trustStore=${com.sun.aas.instanceRoot}/config/cacerts.jks
</pre></li>
<li>
<p>If you've changed the keystore password from its default value, you need to add the password option as well:</p>
<pre xml:space="preserve" class="oac_no_warn">
-Djavax.net.ssl.keyStorePassword=<span class="variable">your-new-password </span>
</pre></li>
<li>
<p>Click <span class="gui-object-action">Save</span>, then restart GlassFish Server.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="security-advanced.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="security-advanced002.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

