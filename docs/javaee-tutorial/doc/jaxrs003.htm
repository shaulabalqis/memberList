<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:2Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Example Applications for JAX-RS" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:Example Applications for JAX-RS | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<ul style="list-style-type:none">
<li><a href="jaxrs001.htm#GIJQY"><span class="secnum">29.1</span> What Are RESTful Web Services?</a></li>
<li><a href="jaxrs002.htm#GILIK"><span class="secnum">29.2</span> Creating a RESTful Root Resource Class</a>
<ul style="list-style-type:none">
<li><a href="jaxrs002.htm#GILRU"><span class="secnum">29.2.1</span> Developing RESTful Web Services with JAX-RS</a></li>
<li><a href="jaxrs002.htm#GILQB"><span class="secnum">29.2.2</span> Overview of a JAX-RS Application</a></li>
<li><a href="jaxrs002.htm#GINPW"><span class="secnum">29.2.3</span> The @Path Annotation and URI Path Templates</a></li>
<li><a href="jaxrs002.htm#GIPYS"><span class="secnum">29.2.4</span> Responding to HTTP Methods and Requests</a>
<ul style="list-style-type:none">
<li><a href="jaxrs002.htm#GIPXS"><span class="secnum">29.2.4.1</span> The Request Method Designator Annotations</a></li>
<li><a href="jaxrs002.htm#GIPZE"><span class="secnum">29.2.4.2</span> Using Entity Providers to Map HTTP Response and Request Entity Bodies</a></li>
</ul>
</li>
<li><a href="jaxrs002.htm#GIPZH"><span class="secnum">29.2.5</span> Using @Consumes and @Produces to Customize Requests and Responses</a>
<ul style="list-style-type:none">
<li><a href="jaxrs002.htm#GIPXF"><span class="secnum">29.2.5.1</span> The @Produces Annotation</a></li>
<li><a href="jaxrs002.htm#GIPYT"><span class="secnum">29.2.5.2</span> The @Consumes Annotation</a></li>
</ul>
</li>
<li><a href="jaxrs002.htm#GIPYW"><span class="secnum">29.2.6</span> Extracting Request Parameters</a></li>
<li><a href="jaxrs002.htm#sthref1546"><span class="secnum">29.2.7</span> Configuring JAX-RS Applications</a>
<ul style="list-style-type:none">
<li><a href="jaxrs002.htm#sthref1550"><span class="secnum">29.2.7.1</span> Configuring a JAX-RS Application Using a Subclass of Application</a></li>
<li><a href="jaxrs002.htm#sthref1551"><span class="secnum">29.2.7.2</span> Configuring the Base URI in web.xml</a></li>
</ul>
</li>
</ul>
</li>
<li><div id="backgroundColor"><a href="jaxrs003.htm#GIPZZ"><span class="secnum">29.3</span> Example Applications for JAX-RS</a><ul style="list-style-type:none">
<li><a href="jaxrs003.htm#GIPYZ"><span class="secnum">29.3.1</span> Creating a Simple RESTful Web Service</a>
<ul style="list-style-type:none">
<li><a href="jaxrs003.htm#GIQAA"><span class="secnum">29.3.1.1</span> To Create a RESTful Web Service Using NetBeans IDE</a></li>
</ul>
</li>
<li><a href="jaxrs003.htm#GJVBC"><span class="secnum">29.3.2</span> The rsvp Example Application</a>
<ul style="list-style-type:none">
<li><a href="jaxrs003.htm#GJVAW"><span class="secnum">29.3.2.1</span> Components of the rsvp Example Application</a></li>
<li><a href="jaxrs003.htm#GKCCA"><span class="secnum">29.3.2.2</span> Running the rsvp Example Application</a></li>
</ul>
</li>
<li><a href="jaxrs003.htm#GIRCI"><span class="secnum">29.3.3</span> Real-World Examples</a></li>
</ul>
</div></li>
<li><a href="jaxrs004.htm#GILIZ"><span class="secnum">29.4</span> Further Information about JAX-RS</a></li>
</ul>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jaxrs002.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jaxrs004.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="GIPZZ" name="GIPZZ"></a><a id="JEETT00429" name="JEETT00429"></a>
<div class="sect1">
<h1 class="sect1"><span class="secnum">29.3</span> <a id="sthref1552" name="sthref1552"></a><a id="sthref1553" name="sthref1553"></a>Example Applications for JAX-RS</h1>
<p>This section provides an introduction to creating, deploying, and running your own JAX-RS applications. This section demonstrates the steps that are needed to create, build, deploy, and test a very simple web application that uses JAX-RS annotations.</p>
<a id="GIPYZ" name="GIPYZ"></a><a id="JEETT01058" name="JEETT01058"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">29.3.1</span> Creating a Simple RESTful Web Service</h2>
<p>This section explains how to use NetBeans IDE to create a RESTful web service using a Maven archetype. The archetype generates a skeleton for the application, and you simply need to implement the appropriate method.</p>
<p>You can find a version of this application at <span class="variable">tut-install</span><code>/examples/jaxrs/hello/</code>.</p>
<a id="GIQAA" name="GIQAA"></a><a id="JEETT00186" name="JEETT00186"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">29.3.1.1</span> To Create a RESTful Web Service Using NetBeans IDE</h3>
<ol>
<li>
<p>Ensure you have installed the tutorial archetypes as described in <a href="usingexamples007.htm#CHDJGCCA">Installing the Tutorial Archetypes</a>.</p>
</li>
<li>
<p>In NetBeans IDE, create a simple web application using the <code>jaxrs-service-archetype</code> Maven archetype. This archetype creates a very simple "Hello, World" web application.</p>
<ol>
<li>
<p>From the <span class="gui-object-action">File</span> menu, choose <span class="gui-object-action">New Project</span>.</p>
</li>
<li>
<p>From <span class="gui-object-action">Categories</span>, select <span class="gui-object-action">Maven</span>. From <span class="gui-object-action">Projects</span>, select <span class="gui-object-action">Project From Archetype</span>. Click <span class="gui-object-action">Next</span>.</p>
</li>
<li>
<p>Under <span class="bold">Search</span> enter <code>jaxrs-service</code>, select the <code>jaxrs-service-archetype</code>, and click <span class="bold">Next</span>.</p>
</li>
<li>
<p>Under <span class="bold">Project Name</span> enter <code>HelloWorldApplication</code>, set the <span class="bold">Project Location</span>, and set the <span class="bold">Package</span> name to <code>javaeetutorial.hello</code>, and click <span class="gui-object-action">Finish</span>.</p>
</li>
</ol>
<p>The project is created.</p>
</li>
<li>
<p>In <code>HelloWorld.java</code>, find the <code>getHtml()</code> method. Replace the <code>//TODO</code> comment with the following text, so that the finished product resembles the following method:</p>
<pre xml:space="preserve" class="oac_no_warn">
@GET
@Produces("text/html")
public String getHtml() {
    return "&lt;html lang=\"en\"&gt;&lt;body&gt;&lt;h1&gt;Hello, World!!&lt;/body&gt;&lt;/h1&gt;&lt;/html&gt;";
}
</pre>
<div align="center">
<div class="inftblnote"><br />
<table class="Note oac_no_warn" summary="" border="1" width="80%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<tbody>
<tr>
<td align="left">
<p class="notep1">Note:</p>
<p>Because the MIME type produced is HTML, you can use HTML tags in your return statement.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblnote" --></div>
</li>
<li>
<p>Right-click the <code>HelloWorldApplication</code> project in the <span class="bold">Projects</span> pane and select <span class="gui-object-action">Run</span>.</p>
<p>This will build and deploy the application to GlassFish Server.</p>
</li>
<li>
<p>In a browser, open the following URL:</p>
<pre xml:space="preserve" class="oac_no_warn">
http://localhost:8080/HelloWorldApplication/HelloWorldApplication
</pre>
<p>A browser window opens and displays the return value of <code>Hello, World!!</code></p>
</li>
</ol>
<p>For other sample applications that demonstrate deploying and running JAX-RS applications using NetBeans IDE, see <a href="#GJVBC">The rsvp Example Application</a> and <span class="italic">Your First Cup: An Introduction to the Java EE Platform</span> at <code><a href="http://docs.oracle.com/javaee/7/firstcup/doc/">http://docs.oracle.com/javaee/7/firstcup/doc/</a></code>. You may also look at the tutorials on the NetBeans IDE tutorial site, such as the one titled "Getting Started with RESTful Web Services" at <code><a href="https://netbeans.org/kb/docs/websvc/rest.html">https://netbeans.org/kb/docs/websvc/rest.html</a></code>. This tutorial includes a section on creating a CRUD application from a database. Create, read, update, and delete (CRUD) are the four basic functions of persistent storage and relational databases.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="GJVBC" name="GJVBC"></a><a id="JEETT01059" name="JEETT01059"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">29.3.2</span> <a id="sthref1554" name="sthref1554"></a>The rsvp Example Application</h2>
<p>The <code>rsvp</code> example application, located in the <span class="variable">tut-install</span><code>/examples/jaxrs/rsvp/</code> directory, allows invitees to an event to indicate whether they will attend. The events, people invited to the event, and the responses to the invite are stored in a Java DB database using the Java Persistence API. The JAX-RS resources in <code>rsvp</code> are exposed in a stateless session enterprise bean.</p>
<a id="GJVAW" name="GJVAW"></a><a id="JEETT00642" name="JEETT00642"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">29.3.2.1</span> <a id="sthref1555" name="sthref1555"></a>Components of the rsvp Example Application</h3>
<p>The three enterprise beans in the <code>rsvp</code> example application are <code>rsvp.ejb.ConfigBean</code>, <code>rsvp.ejb.StatusBean</code>, and <code>rsvp.ejb.ResponseBean</code>.</p>
<p><code>ConfigBean</code> is a singleton session bean that initializes the data in the database.</p>
<p><code>StatusBean</code> exposes a JAX-RS resource for displaying the current status of all invitees to an event. The URI path template is declared first on the class and then on the <code>getEvent</code> method:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Stateless
@Named
@Path("/status")
public class StatusBean {
    ...
    @GET
    @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})
    @Path("{eventId}/")
    public Event getEvent(@PathParam("eventId") Long eventId) {
         ...
</pre>
<p>The combination of the two <code>@Path</code> annotations results in the following URI path template:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Path("/status/{eventId}/")
</pre>
<p>The URI path variable <code>eventId</code> is a <code>@PathParam</code> variable in the <code>getEvent</code> method, which responds to HTTP GET requests and has been annotated with <code>@GET</code>. The <code>eventId</code> variable is used to look up all the current responses in the database for that particular event.</p>
<p><code>ResponseBean</code> exposes a JAX-RS resource for setting an invitee's response to a particular event. The URI path template for <code>ResponseBean</code> is declared as follows:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Path("/{eventId}/{inviteId}")
</pre>
<p>Two URI path variables are declared in the path template: <code>eventId</code> and <code>inviteId</code>. As in <code>StatusBean</code>, <code>eventId</code> is the unique ID for a particular event. Each invitee to that event has a unique ID for the invitation, and that is the <code>inviteId</code>. Both of these path variables are used in two JAX-RS methods in <code>ResponseBean</code>: <code>getResponse</code> and <code>putResponse</code>. The <code>getResponse</code> method responds to HTTP GET requests and displays the invitee's current response and a form to change the response.</p>
<p>The <code>javaeetutorial.rsvp.rest.RsvpApplication</code> class defines the root application path for the resources by applying the <code>javax.ws.rs.ApplicationPath</code> annotation at the class level.</p>
<pre xml:space="preserve" class="oac_no_warn">
@ApplicationPath("/webapi")
public class RsvpApplication extends Application {
}
</pre>
<p>An invitee who wants to change his or her response selects the new response and submits the form data, which is processed as an HTTP POST request by the <code>putResponse</code> method. The new response is extracted from the HTTP POST request and stored as the <code>userResponse</code> string. The <code>putResponse</code> method uses <code>userResponse</code>, <code>eventId</code>, and <code>inviteId</code> to update the invitee's response in the database.</p>
<p>The events, people, and responses in <code>rsvp</code> are encapsulated in Java Persistence API entities. The <code>rsvp.entity.Event</code>, <code>rsvp.entity.Person</code>, and <code>rsvp.entity.Response</code> entities respectively represent events, invitees, and responses to an event.</p>
<p>The <code>rsvp.util.ResponseEnum</code> class declares an enumerated type that represents all the possible response statuses an invitee may have.</p>
<p>The web application also includes two CDI managed beans, <code>StatusManager</code> and <code>EventManager</code>, which use the <a id="sthref1556" name="sthref1556"></a><a id="sthref1557" name="sthref1557"></a>JAX-RS Client API to call the resources exposed in <code>StatusBean</code> and <code>ResponseBean</code>. For information on how the Client API is used in <code>rsvp</code>, see <a href="jaxrs-client002.htm#BABEDFIG">"The Client API in the rsvp Example Application"</a>.</p>
</div>
<!-- class="sect3" -->
<a id="GKCCA" name="GKCCA"></a><a id="JEETT00643" name="JEETT00643"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">29.3.2.2</span> Running the rsvp Example Application</h3>
<p>Both NetBeans IDE and Maven can be used to deploy and run the <code>rsvp</code> example application.</p>
<p class="orderedlisttitle">To Run the rsvp Example Application Using NetBeans IDE&nbsp;</p>
<ol>
<li>
<p>If the database server is not already running, start it by following the instructions in <a href="usingexamples004.htm#BNADK">Starting and Stopping the Java DB Server</a>.</p>
</li>
<li>
<p>Make sure that GlassFish Server has been started (see <a href="usingexamples002.htm#BNADI">Starting and Stopping GlassFish Server</a>).</p>
</li>
<li>
<p>From the <span class="gui-object-action">File</span> menu, choose <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-title">Open Project</span> dialog box, navigate to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/jaxrs
</pre></li>
<li>
<p>Select the <code>rsvp</code> folder.</p>
</li>
<li>
<p>Click <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-action">Projects</span> tab, right-click the <code>rsvp</code> project and select <span class="gui-object-action">Run</span>.</p>
<p>The project will be compiled, assembled, and deployed to GlassFish Server. A web browser window will open to the following URL:</p>
<pre xml:space="preserve" class="oac_no_warn">
http://localhost:8080/rsvp/index.xhtml
</pre></li>
<li>
<p>In the web browser window, click the <span class="gui-object-action">Event status</span> link for the Duke's Birthday event.</p>
<p>You'll see the current invitees and their responses.</p>
</li>
<li>
<p>Click the current response of one of the invitees in the Status column of the table, select a new response, and click <span class="gui-object-action">Update your status</span>.</p>
<p>The invitee's new status should now be displayed in the table of invitees and their response statuses.</p>
</li>
</ol>
<p class="orderedlisttitle">To Run the rsvp Example Application Using Maven&nbsp;</p>
<ol>
<li>
<p>If the database server is not already running, start it by following the instructions in <a href="usingexamples004.htm#BNADK">Starting and Stopping the Java DB Server</a>.</p>
</li>
<li>
<p>Make sure that GlassFish Server has been started (see <a href="usingexamples002.htm#BNADI">Starting and Stopping GlassFish Server</a>).</p>
</li>
<li>
<p>In a terminal window, go to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/jaxrs/rsvp/
</pre></li>
<li>
<p>Enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn install
</pre>
<p>This command builds, assembles, and deploys <code>rsvp</code> to GlassFish Server.</p>
</li>
<li>
<p>Open a web browser window to the following URL:</p>
<pre xml:space="preserve" class="oac_no_warn">
http://localhost:8080/rsvp/
</pre></li>
<li>
<p>In the web browser window, click the <span class="gui-object-action">Event status</span> link for the Duke's Birthday event.</p>
<p>You'll see the current invitees and their responses.</p>
</li>
<li>
<p>Click the current response of one of the invitees in the Status column of the table, select a new response, and click <span class="gui-object-action">Update your status</span>.</p>
<p>The invitee's new status should now be displayed in the table of invitees and their response statuses.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="GIRCI" name="GIRCI"></a><a id="JEETT01060" name="JEETT01060"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">29.3.3</span> Real-World Examples</h2>
<p>Most blog sites use RESTful web services. These sites involve downloading XML files, in RSS or Atom format, that contain lists of links to other resources. Other websites and web applications that use REST-like developer interfaces to data include Twitter and Amazon S3 (Simple Storage Service). With Amazon S3, buckets and objects can be created, listed, and retrieved using either a REST-style HTTP interface or a SOAP interface. The examples that ship with Jersey include a storage service example with a RESTful interface.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jaxrs002.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jaxrs004.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

