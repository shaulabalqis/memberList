<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:4Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="The traffic Example" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:The traffic Example | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<ul style="list-style-type:none">
<li><a href="connectorexample001.htm#CHDFHAID"><span class="secnum">53.1</span> The trading Example</a>
<ul style="list-style-type:none">
<li><a href="connectorexample001.htm#CHDFADJD"><span class="secnum">53.1.1</span> Using the Outbound Resource Adapter</a></li>
<li><a href="connectorexample001.htm#sthref2898"><span class="secnum">53.1.2</span> Implementing the Outbound Resource Adapter</a></li>
<li><a href="connectorexample001.htm#sthref2901"><span class="secnum">53.1.3</span> Running the trading Example</a>
<ul style="list-style-type:none">
<li><a href="connectorexample001.htm#sthref2902"><span class="secnum">53.1.3.1</span> To Run the trading Example Using NetBeans IDE</a></li>
<li><a href="connectorexample001.htm#sthref2903"><span class="secnum">53.1.3.2</span> To Run the trading Example Using Maven</a></li>
</ul>
</li>
</ul>
</li>
<li><div id="backgroundColor"><a href="connectorexample002.htm#CHDJEADB"><span class="secnum">53.2</span> The traffic Example</a><ul style="list-style-type:none">
<li><a href="connectorexample002.htm#sthref2905"><span class="secnum">53.2.1</span> Using the Inbound Resource Adapter</a></li>
<li><a href="connectorexample002.htm#sthref2906"><span class="secnum">53.2.2</span> Implementing the Inbound Resource Adapter</a></li>
<li><a href="connectorexample002.htm#sthref2909"><span class="secnum">53.2.3</span> Running the traffic Example</a>
<ul style="list-style-type:none">
<li><a href="connectorexample002.htm#sthref2910"><span class="secnum">53.2.3.1</span> To Run the traffic Example Using NetBeans IDE</a></li>
<li><a href="connectorexample002.htm#sthref2911"><span class="secnum">53.2.3.2</span> To Run the traffic Example Using Maven</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="connectorexample001.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="interceptors.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="CHDJEADB" name="CHDJEADB"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1"><span class="secnum">53.2</span> The traffic Example</h1>
<p>The <code>traffic</code> example demonstrates how to implement and use a simple inbound resource adapter that receives data from a legacy EIS using a TCP socket.</p>
<p>The example is in the <span class="italic">tut-install</span><code>/examples/connectors/traffic</code> directory. See <a href="usingexamples.htm#GFIUD">Chapter 2, "Using the Tutorial Examples,"</a> for basic information on building and running sample applications.</p>
<p>The example demonstrates the scenario in <a href="#CHDGFGHB">Figure 53-3</a> and consists of the following modules:</p>
<ul>
<li>
<p><code>traffic-eis</code>: A Java SE program that simulates an EIS</p>
</li>
<li>
<p><code>traffic-rar</code>: The inbound resource adapter implementation</p>
</li>
<li>
<p><code>traffic-ejb</code>: A message-driven bean that is the endpoint for incoming messages</p>
</li>
<li>
<p><code>traffic-war</code>: A web application that displays information from the message-driven bean</p>
</li>
<li>
<p><code>traffic-ear</code>: An enterprise archive that contains the resource adapter, the message-driven bean, and the web application</p>
</li>
</ul>
<div class="figure"><a id="CHDGFGHB" name="CHDGFGHB"></a>
<p class="titleinfigure">Figure 53-3 The traffic Example</p>
<img src="img/jeett_dt_056.png" alt="Description of Figure 53-3 follows" title="Description of Figure 53-3 follows" longdesc="img_text/jeett_dt_056.htm" /><br />
<a id="sthref2904" name="sthref2904" href="img_text/jeett_dt_056.htm">Description of "Figure 53-3 The traffic Example"</a><br />
<br /></div>
<!-- class="figure" -->
<p>The <code>traffic-eis</code> module is an auxiliary project that resembles a legacy traffic information system. It contains a Java SE program that sends traffic status updates for several cities to any subscribed client. The program sends the updates in JSON format over a TCP socket. For example, a traffic update looks like this:</p>
<pre xml:space="preserve" class="oac_no_warn">
{"report":[
    {"city":"City1", "access":"AccessA", "status":"GOOD"},
    {"city":"City1", "access":"AccessB", "status":"CONGESTED"},
    ...
    {"city":"City5", "access":"AccessE", "status":"SLOW"}
 ]}
</pre>
<p>The <code>traffic-rar</code> module implements the inbound contract of the Java EE Connector Architecture. This module subscribes to the traffic information system using the TCP port indicated by the configuration provided by the MDB and invokes the methods of the MDB to process traffic information updates.</p>
<p>The <code>traffic-ejb</code> module contains a message-driven bean that activates the resource adapter with a configuration parameter (the TCP port to subscribe to the traffic information system). The MDB contains a method to process the traffic information updates. This method filters the updates for a particular city and publishes the results to a Java Message Service (JMS) topic.</p>
<p>The <code>traffic-war</code> module contains a message-driven bean that receives filtered traffic information updates from the JMS topic asynchronously and sends them to the clients using a WebSocket endpoint.</p>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref2905" name="sthref2905"></a>
<h2 class="sect2"><span class="secnum">53.2.1</span> Using the Inbound Resource Adapter</h2>
<p>In most cases, Java EE application developers use inbound resource adapters developed by a third party. To use an inbound resource adapter, a Java EE application includes a message-driven bean with the following characteristics.</p>
<ul>
<li>
<p>The MDB implements the business interface defined by the resource adapter.</p>
</li>
<li>
<p>The MDB specifies configuration parameters to activate the resource adapter.</p>
</li>
</ul>
<p>The business interface defined by the resource adapter is not specified in the Java EE Connector Architecture; it is specific to the EIS.</p>
<p>The MDB in this example is defined as follows:</p>
<pre xml:space="preserve" class="oac_no_warn">
@MessageDriven(
    activationConfig = {
      @ActivationConfigProperty(propertyName = "port", 
                                propertyValue = "4008")
    }
)
public class TrafficMdb implements TrafficListener { ... }
</pre>
<p>The <code>TrafficListener</code> interface is defined in the API package of the resource adapter. The resource adapter requires the MDB to provide the <code>port</code> property.</p>
<p>When the MDB is deployed, it activates the <code>traffic-rar</code> resource adapter, which invokes the methods of the MDB to process traffic information updates. Then the MDB filters the updates for a particular city and publishes the results to a JMS topic.</p>
<p>In this particular example, the <code>TrafficListener</code> interface is empty. In addition to this interface, the resource adapter provides the <code>TrafficCommand</code> annotation and uses reflection to discover which methods in the MDB are decorated with this annotation:</p>
<pre xml:space="preserve" class="oac_no_warn">
@MessageDriven(...)
public class TrafficMdb implements TrafficListener {

    @TrafficCommand(name="report", info="Process report")
    public void processReport(String jsonReport) { ... }
    ...
}
</pre>
<p>This approach enables you to adapt the MDB to support new features in the EIS without having to modify the <code>TrafficListener</code> interface or the resource adapter module.</p>
</div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref2906" name="sthref2906"></a>
<h2 class="sect2"><span class="secnum">53.2.2</span> Implementing the Inbound Resource Adapter</h2>
<p>The <code>traffic-rar</code> module implements the inbound resource adapter contract from the Java EE Connector Architecture for the simple traffic information system (EIS) used in this example. The architecture of the inbound resource adapter is shown in <a href="#CHDHADDC">Figure 53-4</a>.</p>
<div class="figure"><a id="CHDHADDC" name="CHDHADDC"></a>
<p class="titleinfigure">Figure 53-4 Architecture of the traffic Example</p>
<img src="img/jeett_dt_057.png" alt="Description of Figure 53-4 follows" title="Description of Figure 53-4 follows" longdesc="img_text/jeett_dt_057.htm" /><br />
<a id="sthref2907" name="sthref2907" href="img_text/jeett_dt_057.htm">Description of "Figure 53-4 Architecture of the traffic Example"</a><br />
<br /></div>
<!-- class="figure" -->
<p>The <code>traffic-rar</code> module implements the interfaces listed in <a href="#CHDEDEAF">Table 53-3</a>.</p>
<div class="tblhruleformal"><a id="sthref2908" name="sthref2908"></a><a id="CHDEDEAF" name="CHDEDEAF"></a>
<p class="titleintable">Table 53-3 Interfaces Implemented in the traffic-rar Module</p>
<table class="HRuleFormal" title="Interfaces Implemented in the traffic-rar Module" summary="Lists the interfaces implemented in the tradeconnector module." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="26%" />
<col width="23%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t5">Package</th>
<th align="left" valign="bottom" id="r1c2-t5">Interface</th>
<th align="left" valign="bottom" id="r1c3-t5">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t5" headers="r1c1-t5">
<p><code>javax.resource.spi</code></p>
</td>
<td align="left" headers="r2c1-t5 r1c2-t5">
<p><code>ResourceAdapter</code></p>
</td>
<td align="left" headers="r2c1-t5 r1c3-t5">
<p>Defines the lifecycle methods of the resource adapter.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t5" headers="r1c1-t5">
<p><code>javax.resource.spi</code></p>
</td>
<td align="left" headers="r3c1-t5 r1c2-t5">
<p><code>ActivationSpec</code></p>
</td>
<td align="left" headers="r3c1-t5 r1c3-t5">
<p>Defines the configuration parameters that the MDB provides to activate the inbound resource adapter.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t5" headers="r1c1-t5">
<p><code>javax.resource.spi</code></p>
</td>
<td align="left" headers="r4c1-t5 r1c2-t5">
<p><code>Work</code></p>
</td>
<td align="left" headers="r4c1-t5 r1c3-t5">
<p>The traffic service subscriber implements this interface from the work management contract to wait for traffic updates on a separate thread.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p>When an MDB activates the inbound resource adapter, the container invokes the <code>endpointActivation</code> method in the <code>TrafficResourceAdapter</code> class:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Connector(...)
public class TrafficResourceAdapter implements ResourceAdapter, Serializable {
    ...
    @Override
    public void endpointActivation(MessageEndpointFactory endpointFactory, 
                                   ActivationSpec spec) 
                                   throws ResourceException {
        Class endpointClass = endpointFactory.getEndpointClass();
        /* this method is called from a new thread in the example: 
        MessageEndpoint endpoint = endpointFactory.createEndpoint(null); */
    }
}
</pre>
<p>The <code>getEndpointClass</code> method returns the <code>Class</code> type of the MDB performing the activation, which enables the resource adapter to use reflection to find methods annotated with <code>@TrafficCommand</code> in the MDB.</p>
<p>The <code>createEndpoint</code> method returns an instance of the MDB. The resource adapter uses this instance to invoke the methods of the MDB when it receives requests from the EIS.</p>
<p>After obtaining the message endpoint instance (MDB), the resource adapter uses the work management contract to create the traffic service subscriber thread that receives traffic updates from the EIS. The resource adapter obtains the <code>WorkManager</code> instance from the bootstrap context as follows:</p>
<pre xml:space="preserve" class="oac_no_warn">
WorkManager workManager;
...
@Override
public void start(BootstrapContext ctx) ... {
    workManager = ctx.getWorkManager();
}
</pre>
<p>The resource adapter schedules the traffic service subscriber thread using the work manager:</p>
<pre xml:space="preserve" class="oac_no_warn">
tSubscriber = new TrafficServiceSubscriber(tSpec, endpoint);
workManager.scheduleWork(tSubscriber);
</pre>
<p>The <code>TrafficServiceSubscriber</code> class implements the <code>javax.resource.spi.Work</code> interface from the work management contract.</p>
<p>The traffic service subscriber thread uses reflection to invoke the methods in the MDB:</p>
<pre xml:space="preserve" class="oac_no_warn">
private String callMdb(MessageEndpoint mdb, Method command, 
                       String... params) ... {
    String resp;
    /* this code contains proper exception handling in the sources */
    mdb.beforeDelivery(command);
    Object ret = command.invoke(mdb, (Object[]) params);
    resp = (String) ret;
    mdb.afterDelivery();
    return resp;
}

For more details, see the code and the comments in the <code>traffic-rar</code> module.
</pre></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref2909" name="sthref2909"></a>
<h2 class="sect2"><span class="secnum">53.2.3</span> Running the traffic Example</h2>
<p>You can use either NetBeans IDE or Maven to build, package, deploy, and run the <code>traffic</code> example.</p>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref2910" name="sthref2910"></a>
<h3 class="sect3"><span class="secnum">53.2.3.1</span> To Run the traffic Example Using NetBeans IDE</h3>
<ol>
<li>
<p>Make sure that GlassFish Server has been started (see <a href="usingexamples002.htm#BNADI">Starting and Stopping GlassFish Server</a>).</p>
</li>
<li>
<p>From the <span class="bold">File</span> menu, choose <span class="bold">Open Project</span>.</p>
</li>
<li>
<p>In the Open Project dialog box, navigate to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="italic">tut-install</span>/examples/connectors
</pre></li>
<li>
<p>Select the <code>traffic</code> folder.</p>
</li>
<li>
<p>Click <span class="bold">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="bold">Projects</span> tab, expand the <code>traffic</code> node.</p>
</li>
<li>
<p>Right-click the <code>traffic-eis</code> module and select <span class="bold">Open Project</span>.</p>
</li>
<li>
<p>Right-click the <code>traffic-eis</code> project and select <span class="bold">Run</span>.</p>
<p>The messages from the EIS appear on the Output tab:</p>
<pre xml:space="preserve" class="oac_no_warn">
Traffic EIS accepting connections on port 4008
</pre></li>
<li>
<p>In the <span class="bold">Projects</span> tab, right-click the <code>traffic</code> project and select <span class="bold">Clean and Build</span>.</p>
<p>This command builds and packages the resource adapter, the MDB, and the web application into an EAR archive and deploys it. The server log shows the call sequence that activates the resource adapter and the filtered traffic updates for City1.</p>
</li>
<li>
<p>Open the following URL in a web browser:</p>
<pre xml:space="preserve" class="oac_no_warn">
http://localhost:8080/traffic/
</pre>
<p>The web interface shows filtered traffic updates for City1 every few seconds.</p>
</li>
<li>
<p>After undeploying the <code>traffic-ear</code> application, close the <code>traffic-eis</code> application from the status bar.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref2911" name="sthref2911"></a>
<h3 class="sect3"><span class="secnum">53.2.3.2</span> To Run the traffic Example Using Maven</h3>
<ol>
<li>
<p>Make sure that GlassFish Server has been started (see <a href="usingexamples002.htm#BNADI">Starting and Stopping GlassFish Server</a>).</p>
</li>
<li>
<p>In a terminal window, go to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="italic">tut-install</span>/examples/connectors/traffic/traffic-eis/
</pre></li>
<li>
<p>Enter the following command in the terminal window:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn install
</pre>
<p>This command builds and packages the traffic EIS.</p>
</li>
<li>
<p>Enter the following command in the terminal window:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn exec:java
</pre>
<p>The messages from the EIS appear in the terminal window:</p>
<pre xml:space="preserve" class="oac_no_warn">
Traffic EIS accepting connections on port 4008
</pre>
<p>Leave this terminal window open.</p>
</li>
<li>
<p>Open a new terminal window and go to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="italic">tut-install</span>/examples/connectors/traffic/
</pre></li>
<li>
<p>Enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn install
</pre>
<p>This command builds and packages the resource adapter, the MDB, and the web application into an EAR archive and deploys it. The server log shows the call sequence that activates the resource adapter and the filtered traffic updates for City1.</p>
</li>
<li>
<p>Open the following URL in a web browser:</p>
<pre xml:space="preserve" class="oac_no_warn">
http://localhost:8080/traffic/
</pre>
<p>The web interface shows the filtered traffic updates for City1 every few seconds.</p>
</li>
<li>
<p>After undeploying the <code>traffic-ear</code> application, press <span class="bold">Ctrl+C</span> in the first terminal window to close the <code>traffic-eis</code> application.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="connectorexample001.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="interceptors.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

