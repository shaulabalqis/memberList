<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:4Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Security Mechanisms" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:Security Mechanisms | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<ul style="list-style-type:none">
<li><a href="security-intro001.htm#BNBWK"><span class="secnum">47.1</span> Overview of Java EE Security</a>
<ul style="list-style-type:none">
<li><a href="security-intro001.htm#BNBWL"><span class="secnum">47.1.1</span> A Simple Application Security Walkthrough</a>
<ul style="list-style-type:none">
<li><a href="security-intro001.htm#BNBWM"><span class="secnum">47.1.1.1</span> Step 1: Initial Request</a></li>
<li><a href="security-intro001.htm#BNBWO"><span class="secnum">47.1.1.2</span> Step 2: Initial Authentication</a></li>
<li><a href="security-intro001.htm#BNBWQ"><span class="secnum">47.1.1.3</span> Step 3: URL Authorization</a></li>
<li><a href="security-intro001.htm#BNBWS"><span class="secnum">47.1.1.4</span> Step 4: Fulfilling the Original Request</a></li>
<li><a href="security-intro001.htm#BNBWU"><span class="secnum">47.1.1.5</span> Step 5: Invoking Enterprise Bean Business Methods</a></li>
</ul>
</li>
<li><a href="security-intro001.htm#BNBWW"><span class="secnum">47.1.2</span> Features of a Security Mechanism</a></li>
<li><a href="security-intro001.htm#BNBWX"><span class="secnum">47.1.3</span> Characteristics of Application Security</a></li>
</ul>
</li>
<li><div id="backgroundColor"><a href="security-intro002.htm#BNBWY"><span class="secnum">47.2</span> Security Mechanisms</a><ul style="list-style-type:none">
<li><a href="security-intro002.htm#BNBWZ"><span class="secnum">47.2.1</span> Java SE Security Mechanisms</a></li>
<li><a href="security-intro002.htm#BNBXA"><span class="secnum">47.2.2</span> Java EE Security Mechanisms</a>
<ul style="list-style-type:none">
<li><a href="security-intro002.htm#BNBXB"><span class="secnum">47.2.2.1</span> Application-Layer Security</a></li>
<li><a href="security-intro002.htm#BNBXC"><span class="secnum">47.2.2.2</span> Transport-Layer Security</a></li>
<li><a href="security-intro002.htm#BNBXD"><span class="secnum">47.2.2.3</span> Message-Layer Security</a></li>
</ul>
</li>
</ul>
</div></li>
<li><a href="security-intro003.htm#BNBXE"><span class="secnum">47.3</span> Securing Containers</a>
<ul style="list-style-type:none">
<li><a href="security-intro003.htm#BNBXG"><span class="secnum">47.3.1</span> Using Annotations to Specify Security Information</a></li>
<li><a href="security-intro003.htm#BNBXF"><span class="secnum">47.3.2</span> Using Deployment Descriptors for Declarative Security</a></li>
<li><a href="security-intro003.htm#BNBXH"><span class="secnum">47.3.3</span> Using Programmatic Security</a></li>
</ul>
</li>
<li><a href="security-intro004.htm#BNBXI"><span class="secnum">47.4</span> Securing GlassFish Server</a></li>
<li><a href="security-intro005.htm#BNBXJ"><span class="secnum">47.5</span> Working with Realms, Users, Groups, and Roles</a>
<ul style="list-style-type:none">
<li><a href="security-intro005.htm#BNBXK"><span class="secnum">47.5.1</span> What Are Realms, Users, Groups, and Roles?</a>
<ul style="list-style-type:none">
<li><a href="security-intro005.htm#BNBXM"><span class="secnum">47.5.1.1</span> What Is a Realm?</a></li>
<li><a href="security-intro005.htm#BNBXN"><span class="secnum">47.5.1.2</span> What Is a User?</a></li>
<li><a href="security-intro005.htm#BNBXO"><span class="secnum">47.5.1.3</span> What Is a Group?</a></li>
<li><a href="security-intro005.htm#BNBXP"><span class="secnum">47.5.1.4</span> What Is a Role?</a></li>
<li><a href="security-intro005.htm#BNBXQ"><span class="secnum">47.5.1.5</span> Some Other Terminology</a></li>
</ul>
</li>
<li><a href="security-intro005.htm#BNBXR"><span class="secnum">47.5.2</span> Managing Users and Groups in GlassFish Server</a>
<ul style="list-style-type:none">
<li><a href="security-intro005.htm#BNBXS"><span class="secnum">47.5.2.1</span> To Add Users to GlassFish Server</a></li>
</ul>
</li>
<li><a href="security-intro005.htm#BNBXU"><span class="secnum">47.5.3</span> Setting Up Security Roles</a></li>
<li><a href="security-intro005.htm#BNBXV"><span class="secnum">47.5.4</span> Mapping Roles to Users and Groups</a></li>
</ul>
</li>
<li><a href="security-intro006.htm#BNBXW"><span class="secnum">47.6</span> Establishing a Secure Connection Using SSL</a>
<ul style="list-style-type:none">
<li><a href="security-intro006.htm#BNBXX"><span class="secnum">47.6.1</span> Verifying and Configuring SSL Support</a></li>
</ul>
</li>
<li><a href="security-intro007.htm#BNBYJ"><span class="secnum">47.7</span> Further Information about Security</a></li>
</ul>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="security-intro001.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="security-intro003.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="BNBWY" name="BNBWY"></a><a id="JEETT00510" name="JEETT00510"></a>
<div class="sect1">
<h1 class="sect1"><span class="secnum">47.2</span> <a id="sthref2506" name="sthref2506"></a>Security Mechanisms</h1>
<p>The characteristics of an application should be considered when deciding the layer and type of security to be provided for applications. The following sections discuss the characteristics of the common mechanisms that can be used to secure Java EE applications. Each of these mechanisms can be used individually or with others to provide protection layers based on the specific needs of your implementation.</p>
<a id="BNBWZ" name="BNBWZ"></a><a id="JEETT01215" name="JEETT01215"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">47.2.1</span> <a id="sthref2507" name="sthref2507"></a>Java SE Security Mechanisms</h2>
<p>Java SE provides support for a variety of security features and mechanisms.</p>
<ul>
<li>
<p><a id="sthref2508" name="sthref2508"></a><span class="bold">Java Authentication and Authorization Service (JAAS)</span> is a set of APIs that enable services to authenticate and enforce access controls upon users. JAAS provides a pluggable and extensible framework for programmatic user authentication and authorization. JAAS is a core Java SE API and is an underlying technology for Java EE security mechanisms.</p>
</li>
<li>
<p><a id="sthref2509" name="sthref2509"></a><a id="sthref2510" name="sthref2510"></a><a id="sthref2511" name="sthref2511"></a><span class="bold">Java Generic Security Services (Java GSS-API)</span> is a token-based API used to securely exchange messages between communicating applications. The GSS-API offers application programmers uniform access to security services atop a variety of underlying security mechanisms, including Kerberos.</p>
</li>
<li>
<p><a id="sthref2512" name="sthref2512"></a><a id="sthref2513" name="sthref2513"></a><span class="bold">Java Cryptography Extension (JCE)</span> provides a framework and implementations for encryption, key generation and key agreement, and Message Authentication Code (MAC) algorithms. Support for encryption includes symmetric, asymmetric, block, and stream ciphers. Block ciphers operate on groups of bytes; stream ciphers operate on one byte at a time. The software also supports secure streams and sealed objects.</p>
</li>
<li>
<p><a id="sthref2514" name="sthref2514"></a><a id="sthref2515" name="sthref2515"></a><span class="bold">Java Secure Sockets Extension (JSSE)</span> provides a framework and an implementation for a Java version of the Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols and includes functionality for data encryption, server authentication, message integrity, and optional client authentication to enable secure Internet communications.</p>
</li>
<li>
<p><a id="sthref2516" name="sthref2516"></a><a id="sthref2517" name="sthref2517"></a><span class="bold">Simple Authentication and Security Layer (SASL)</span> is an Internet standard (RFC 2222) that specifies a protocol for authentication and optional establishment of a security layer between client and server applications. SASL defines how authentication data is to be exchanged but does not itself specify the contents of that data. SASL is a framework into which specific authentication mechanisms that specify the contents and semantics of the authentication data can fit.</p>
</li>
</ul>
<p><a id="sthref2518" name="sthref2518"></a><a id="sthref2519" name="sthref2519"></a><a id="sthref2520" name="sthref2520"></a><a id="sthref2521" name="sthref2521"></a><a id="sthref2522" name="sthref2522"></a>Java SE also provides a set of tools for managing keystores, certificates, and policy files; generating and verifying JAR signatures; and obtaining, listing, and managing Kerberos tickets.</p>
<p>For more information on Java SE security, visit <code><a href="http://docs.oracle.com/javase/7/docs/technotes/guides/security/">http://docs.oracle.com/javase/7/docs/technotes/guides/security/</a></code>.</p>
</div>
<!-- class="sect2" -->
<a id="BNBXA" name="BNBXA"></a><a id="JEETT01216" name="JEETT01216"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">47.2.2</span> <a id="sthref2523" name="sthref2523"></a>Java EE Security Mechanisms</h2>
<p>Java EE security services are provided by the component container and can be implemented by using declarative or programmatic techniques (see <a href="security-intro003.htm#BNBXE">Securing Containers</a>). Java EE security services provide a robust and easily configured security mechanism for authenticating users and authorizing access to application functions and associated data at many different layers. Java EE security services are separate from the security mechanisms of the operating system.</p>
<a id="BNBXB" name="BNBXB"></a><a id="JEETT00765" name="JEETT00765"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">47.2.2.1</span> <a id="sthref2524" name="sthref2524"></a><a id="sthref2525" name="sthref2525"></a>Application-Layer Security</h3>
<p>In Java EE, component containers are responsible for providing application-layer security, security services for a specific application type tailored to the needs of the application. At the application layer, application firewalls can be used to enhance application protection by protecting the communication stream and all associated application resources from attacks.</p>
<p>Java EE security is easy to implement and configure and can offer fine-grained access control to application functions and data. However, as is inherent to security applied at the application layer, security properties are not transferable to applications running in other environments and protect data only while it is residing in the application environment. In the context of a traditional enterprise application, this is not necessarily a problem, but when applied to a web services application, in which data often travels across several intermediaries, you would need to use the Java EE security mechanisms along with transport-layer security and message-layer security for a complete security solution.</p>
<p>The advantages of using application-layer security include the following.</p>
<ul>
<li>
<p>Security is uniquely suited to the needs of the application.</p>
</li>
<li>
<p>Security is fine grained, with application-specific settings.</p>
</li>
</ul>
<p>The disadvantages of using application-layer security include the following.</p>
<ul>
<li>
<p>The application is dependent on security attributes that are not transferable between application types.</p>
</li>
<li>
<p>Support for multiple protocols makes this type of security vulnerable.</p>
</li>
<li>
<p>Data is close to or contained within the point of vulnerability.</p>
</li>
</ul>
<p>For more information on providing security at the application layer, see <a href="security-intro003.htm#BNBXE">Securing Containers</a>.</p>
</div>
<!-- class="sect3" -->
<a id="BNBXC" name="BNBXC"></a><a id="JEETT00766" name="JEETT00766"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">47.2.2.2</span> <a id="sthref2526" name="sthref2526"></a><a id="sthref2527" name="sthref2527"></a>Transport-Layer Security</h3>
<p><a id="sthref2528" name="sthref2528"></a><a id="sthref2529" name="sthref2529"></a>Transport-layer security is provided by the transport mechanisms used to transmit information over the wire between clients and providers; thus, transport-layer security relies on secure HTTP transport (HTTPS) using Secure Sockets Layer (SSL). Transport security is a point-to-point security mechanism that can be used for authentication, message integrity, and confidentiality. When running over an SSL-protected session, the server and client can authenticate each other and negotiate an encryption algorithm and cryptographic keys before the application protocol transmits or receives its first byte of data. Security is active from the time the data leaves the client until it arrives at its destination, or vice versa, even across intermediaries. The problem is that the data is not protected once it gets to the destination. One solution is to encrypt the message before sending.</p>
<p>Transport-layer security is performed in a series of phases, as follows.</p>
<ul>
<li>
<p>The client and server agree on an appropriate algorithm.</p>
</li>
<li>
<p>A key is exchanged using public-key encryption and certificate-based authentication.</p>
</li>
<li>
<p>A symmetric cipher is used during the information exchange.</p>
</li>
</ul>
<p><a id="sthref2530" name="sthref2530"></a>Digital certificates are necessary when running HTTPS using SSL. The HTTPS service of most web servers will not run unless a digital certificate has been installed. Digital certificates have already been created for GlassFish Server.</p>
<p>The advantages of using transport-layer security include the following.</p>
<ul>
<li>
<p>It is relatively simple, well-understood, standard technology.</p>
</li>
<li>
<p>It applies to both a message body and its attachments.</p>
</li>
</ul>
<p>The disadvantages of using transport-layer security include the following.</p>
<ul>
<li>
<p>It is tightly coupled with the transport-layer protocol.</p>
</li>
<li>
<p>It represents an all-or-nothing approach to security. This implies that the security mechanism is unaware of message contents, so that you cannot selectively apply security to portions of the message as you can with message-layer security.</p>
</li>
<li>
<p>Protection is transient. The message is protected only while in transit. Protection is removed automatically by the endpoint when it receives the message.</p>
</li>
<li>
<p>It is not an end-to-end solution, simply point-to-point.</p>
</li>
</ul>
<p>For more information on transport-layer security, see <a href="security-intro006.htm#BNBXW">Establishing a Secure Connection Using SSL</a>.</p>
</div>
<!-- class="sect3" -->
<a id="BNBXD" name="BNBXD"></a><a id="JEETT00767" name="JEETT00767"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">47.2.2.3</span> <a id="sthref2531" name="sthref2531"></a><a id="sthref2532" name="sthref2532"></a><a id="sthref2533" name="sthref2533"></a><a id="sthref2534" name="sthref2534"></a><a id="sthref2535" name="sthref2535"></a>Message-Layer Security</h3>
<p>In message-layer security, security information is contained within the SOAP message and/or SOAP message attachment, which allows security information to travel along with the message or attachment. For example, a portion of the message may be signed by a sender and encrypted for a particular receiver. When sent from the initial sender, the message may pass through intermediate nodes before reaching its intended receiver. In this scenario, the encrypted portions continue to be opaque to any intermediate nodes and can be decrypted only by the intended receiver. For this reason, message-layer security is also sometimes referred to as end-to-end security.</p>
<p>The advantages of message-layer security include the following.</p>
<ul>
<li>
<p>Security stays with the message over all hops and after the message arrives at its destination.</p>
</li>
<li>
<p>Security can be selectively applied to different portions of a message and, if using XML Web Services Security, to attachments.</p>
</li>
<li>
<p>Message security can be used with intermediaries over multiple hops.</p>
</li>
<li>
<p>Message security is independent of the application environment or transport protocol.</p>
</li>
</ul>
<p>The disadvantage of using message-layer security is that it is relatively complex and adds some overhead to processing.</p>
<p>GlassFish Server supports message security using Metro, a web services stack that uses Web Services Security (WSS) to secure messages. Because this message security is specific to Metro and is not a part of the Java EE platform, this tutorial does not discuss using WSS to secure messages. See the <span class="italic">Metro User's Guide</span> at <code><a href="https://metro.java.net/guide/">https://metro.java.net/guide/</a></code>.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="security-intro001.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="security-intro003.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

