<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:2Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Asynchronous Method Invocation" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:Asynchronous Method Invocation | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<ul style="list-style-type:none">
<li><div id="backgroundColor"><a href="ejb-async001.htm#GKKQG"><span class="secnum">36.1</span> Asynchronous Method Invocation</a><ul style="list-style-type:none">
<li><a href="ejb-async001.htm#GKIFJ"><span class="secnum">36.1.1</span> Creating an Asynchronous Business Method</a></li>
<li><a href="ejb-async001.htm#GKIEM"><span class="secnum">36.1.2</span> Calling Asynchronous Methods from Enterprise Bean Clients</a>
<ul style="list-style-type:none">
<li><a href="ejb-async001.htm#GKICM"><span class="secnum">36.1.2.1</span> Retrieving the Final Result from an Asynchronous Method Invocation</a></li>
<li><a href="ejb-async001.htm#GKIDB"><span class="secnum">36.1.2.2</span> Cancelling an Asynchronous Method Invocation</a></li>
<li><a href="ejb-async001.htm#GKIEV"><span class="secnum">36.1.2.3</span> Checking the Status of an Asynchronous Method Invocation</a></li>
</ul>
</li>
</ul>
</div></li>
<li><a href="ejb-async002.htm#GKIEZ"><span class="secnum">36.2</span> The async Example Application</a>
<ul style="list-style-type:none">
<li><a href="ejb-async002.htm#GKIQJ"><span class="secnum">36.2.1</span> Architecture of the async-war Module</a></li>
<li><a href="ejb-async002.htm#sthref1822"><span class="secnum">36.2.2</span> Running the async Example</a>
<ul style="list-style-type:none">
<li><a href="ejb-async002.htm#GKINW"><span class="secnum">36.2.2.1</span> To Run the async Example Application Using NetBeans IDE</a></li>
<li><a href="ejb-async002.htm#GKRFB"><span class="secnum">36.2.2.2</span> To Run the async Example Application Using Maven</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="ejb-async.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="ejb-async002.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="GKKQG" name="GKKQG"></a><a id="JEETT00460" name="JEETT00460"></a>
<div class="sect1">
<h1 class="sect1"><span class="secnum">36.1</span> Asynchronous Method Invocation</h1>
<p>Session beans can implement <span class="glossaryterm">asynchronous methods</span>, business methods where control is returned to the client by the enterprise bean container before the method is invoked on the session bean instance. Clients may then use the Java SE concurrency API to retrieve the result, cancel the invocation, and check for exceptions. Asynchronous methods are typically used for long-running operations, for processor-intensive tasks, for background tasks, to increase application throughput, or to improve application response time if the method invocation result isn't required immediately.</p>
<p><a id="sthref1813" name="sthref1813"></a>When a session bean client invokes a typical non-asynchronous business method, control is not returned to the client until the method has completed. Clients calling asynchronous methods, however, immediately have control returned to them by the enterprise bean container. This allows the client to perform other tasks while the method invocation completes. If the method returns a result, the result is an implementation of the <code>java.util.concurrent.Future&lt;V&gt;</code> interface, where "V" is the result value type. The <code>Future&lt;V&gt;</code> interface defines methods the client may use to check whether the computation is completed, wait for the invocation to complete, retrieve the final result, and cancel the invocation.</p>
<a id="GKIFJ" name="GKIFJ"></a><a id="JEETT01120" name="JEETT01120"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">36.1.1</span> <a id="sthref1814" name="sthref1814"></a><a id="sthref1815" name="sthref1815"></a>Creating an Asynchronous Business Method</h2>
<p>Annotate a business method with <code>javax.ejb.Asynchronous</code> to mark that method as an asynchronous method, or apply <code>@Asynchronous</code> at the class level to mark all the business methods of the session bean as asynchronous methods. Session bean methods that expose web services can't be asynchronous.</p>
<p>Asynchronous methods must return either <code>void</code> or an implementation of the <code>Future&lt;V&gt;</code> interface. Asynchronous methods that return <code>void</code> can't declare application exceptions, but if they return <code>Future&lt;V&gt;</code>, they may declare application exceptions. For example:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Asynchronous
public Future&lt;String&gt; processPayment(Order order) throws PaymentException { ... }
</pre>
<p>This method will attempt to process the payment of an order, and return the status as a <code>String</code>. Even if the payment processor takes a long time, the client can continue working, and display the result when the processing finally completes.</p>
<p>The <code>javax.ejb.AsyncResult&lt;V&gt;</code> class is a concrete implementation of the <code>Future&lt;V&gt;</code> interface provided as a helper class for returning asynchronous results. <code>AsyncResult</code> has a constructor with the result as a parameter, making it easy to create <code>Future&lt;V&gt;</code> implementations. For example, the <code>processPayment</code> method would use <code>AsyncResult</code> to return the status as a <code>String</code>:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Asynchronous
public Future&lt;String&gt; processPayment(Order order) throws PaymentException {
    ...
    String status = ...;
    return new AsyncResult&lt;String&gt;(status);
}
</pre>
<p>The result is returned to the enterprise bean container, not directly to the client, and the enterprise bean container makes the result available to the client. The session bean can check whether the client requested that the invocation be cancelled by calling the <code>javax.ejb.SessionContext.wasCancelled</code> method. For example:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Asynchronous
public Future&lt;String&gt; processPayment(Order order) throws PaymentException {
    ...
    if (SessionContext.wasCancelled()) {
        // clean up
    } else {
        // process the payment
    }
    ...
}
</pre></div>
<!-- class="sect2" -->
<a id="GKIEM" name="GKIEM"></a><a id="JEETT01121" name="JEETT01121"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">36.1.2</span> <a id="sthref1816" name="sthref1816"></a>Calling Asynchronous Methods from Enterprise Bean Clients</h2>
<p>Session bean clients call asynchronous methods just like non-asynchronous business methods. If the asynchronous method returns a result, the client receives a <code>Future&lt;V&gt;</code> instance as soon as the method is invoked. This instance can be used to retrieve the final result, cancel the invocation, check whether the invocation has completed, check whether any exceptions were thrown during processing, and check whether the invocation was cancelled.</p>
<a id="GKICM" name="GKICM"></a><a id="JEETT00663" name="JEETT00663"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">36.1.2.1</span> <a id="sthref1817" name="sthref1817"></a>Retrieving the Final Result from an Asynchronous Method Invocation</h3>
<p>The client may retrieve the result using one of the <code>Future&lt;V&gt;.get</code> methods. If processing hasn't been completed by the session bean handling the invocation, calling one of the <code>get</code> methods will result in the client halting execution until the invocation completes. Use the <code>Future&lt;V&gt;.isDone</code> method to determine whether processing has completed before calling one of the <code>get</code> methods.</p>
<p>The <code>get()</code> method returns the result as the type specified in the type value of the <code>Future&lt;V&gt;</code> instance. For example, calling <code>Future&lt;String&gt;.get()</code> will return a <code>String</code> object. If the method invocation was cancelled, calls to <code>get()</code> result in a <code>java.util.concurrent.CancellationException</code> being thrown. If the invocation resulted in an exception during processing by the session bean, calls to <code>get()</code> result in a <code>java.util.concurrent.ExecutionException</code> being thrown. The cause of the <code>ExecutionException</code> may be retrieved by calling the <code>ExecutionException.getCause</code> method.</p>
<p>The <code>get(long timeout, java.util.concurrent.TimeUnit unit)</code> method is similar to the <code>get()</code> method, but allows the client to set a timeout value. If the timeout value is exceeded, a <code>java.util.concurrent.TimeoutException</code> is thrown. See the Javadoc for the <code>TimeUnit</code> class for the available units of time to specify the timeout value.</p>
</div>
<!-- class="sect3" -->
<a id="GKIDB" name="GKIDB"></a><a id="JEETT00664" name="JEETT00664"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">36.1.2.2</span> <a id="sthref1818" name="sthref1818"></a>Cancelling an Asynchronous Method Invocation</h3>
<p>Call the <code>cancel(boolean mayInterruptIfRunning)</code> method on the <code>Future&lt;V&gt;</code> instance to attempt to cancel the method invocation. The <code>cancel</code> method returns <code>true</code> if the cancellation was successful and <code>false</code> if the method invocation cannot be cancelled.</p>
<p>When the invocation cannot be cancelled, the <code>mayInterruptIfRunning</code> parameter is used to alert the session bean instance on which the method invocation is running that the client attempted to cancel the invocation. If <code>mayInterruptIfRunning</code> is set to <code>true</code>, calls to <code>SessionContext.wasCancelled</code> by the session bean instance will return <code>true</code>. If <code>mayInterruptIfRunning</code> is to set <code>false</code>, calls to <code>SessionContext.wasCancelled</code> by the session bean instance will return <code>false</code>.</p>
<p>The <code>Future&lt;V&gt;.isCancelled</code> method is used to check whether the method invocation was cancelled before the asynchronous method invocation completed by calling <code>Future&lt;V&gt;.cancel</code>. The <code>isCancelled</code> method returns <code>true</code> if the invocation was cancelled.</p>
</div>
<!-- class="sect3" -->
<a id="GKIEV" name="GKIEV"></a><a id="JEETT00665" name="JEETT00665"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">36.1.2.3</span> <a id="sthref1819" name="sthref1819"></a>Checking the Status of an Asynchronous Method Invocation</h3>
<p>The <code>Future&lt;V&gt;.isDone</code> method returns <code>true</code> if the session bean instance completed processing the method invocation. The <code>isDone</code> method returns <code>true</code> if the asynchronous method invocation completed normally, was cancelled, or resulted in an exception. That is, <code>isDone</code> indicates only whether the session bean has completed processing the invocation.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="ejb-async.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="ejb-async002.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

