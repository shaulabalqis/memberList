<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:1Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Nonblocking I/O" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:Nonblocking I/O | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<ul style="list-style-type:none">
<li><a href="servlets001.htm#BNAFE"><span class="secnum">17.1</span> What Is a Servlet?</a></li>
<li><a href="servlets002.htm#BNAFI"><span class="secnum">17.2</span> Servlet Lifecycle</a>
<ul style="list-style-type:none">
<li><a href="servlets002.htm#BNAFJ"><span class="secnum">17.2.1</span> Handling Servlet Lifecycle Events</a>
<ul style="list-style-type:none">
<li><a href="servlets002.htm#BNAFK"><span class="secnum">17.2.1.1</span> Defining the Listener Class</a></li>
</ul>
</li>
<li><a href="servlets002.htm#BNAFN"><span class="secnum">17.2.2</span> Handling Servlet Errors</a></li>
</ul>
</li>
<li><a href="servlets003.htm#BNAFO"><span class="secnum">17.3</span> Sharing Information</a>
<ul style="list-style-type:none">
<li><a href="servlets003.htm#BNAFP"><span class="secnum">17.3.1</span> Using Scope Objects</a></li>
<li><a href="servlets003.htm#BNAFS"><span class="secnum">17.3.2</span> Controlling Concurrent Access to Shared Resources</a></li>
</ul>
</li>
<li><a href="servlets004.htm#BNAFU"><span class="secnum">17.4</span> Creating and Initializing a Servlet</a></li>
<li><a href="servlets005.htm#BNAFV"><span class="secnum">17.5</span> Writing Service Methods</a>
<ul style="list-style-type:none">
<li><a href="servlets005.htm#BNAFW"><span class="secnum">17.5.1</span> Getting Information from Requests</a></li>
<li><a href="servlets005.htm#BNAFZ"><span class="secnum">17.5.2</span> Constructing Responses</a></li>
</ul>
</li>
<li><a href="servlets006.htm#BNAGB"><span class="secnum">17.6</span> Filtering Requests and Responses</a>
<ul style="list-style-type:none">
<li><a href="servlets006.htm#BNAGC"><span class="secnum">17.6.1</span> Programming Filters</a></li>
<li><a href="servlets006.htm#BNAGD"><span class="secnum">17.6.2</span> Programming Customized Requests and Responses</a></li>
<li><a href="servlets006.htm#BNAGF"><span class="secnum">17.6.3</span> Specifying Filter Mappings</a>
<ul style="list-style-type:none">
<li><a href="servlets006.htm#GJSLC"><span class="secnum">17.6.3.1</span> To Specify Filter Mappings Using NetBeans IDE</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="servlets007.htm#BNAGI"><span class="secnum">17.7</span> Invoking Other Web Resources</a>
<ul style="list-style-type:none">
<li><a href="servlets007.htm#BNAGJ"><span class="secnum">17.7.1</span> Including Other Resources in the Response</a></li>
<li><a href="servlets007.htm#BNAGK"><span class="secnum">17.7.2</span> Transferring Control to Another Web Component</a></li>
</ul>
</li>
<li><a href="servlets008.htm#BNAGL"><span class="secnum">17.8</span> Accessing the Web Context</a></li>
<li><a href="servlets009.htm#BNAGM"><span class="secnum">17.9</span> Maintaining Client State</a>
<ul style="list-style-type:none">
<li><a href="servlets009.htm#BNAGN"><span class="secnum">17.9.1</span> Accessing a Session</a></li>
<li><a href="servlets009.htm#BNAGO"><span class="secnum">17.9.2</span> Associating Objects with a Session</a></li>
<li><a href="servlets009.htm#BNAGQ"><span class="secnum">17.9.3</span> Session Management</a>
<ul style="list-style-type:none">
<li><a href="servlets009.htm#sthref1221"><span class="secnum">17.9.3.1</span> To Set the Timeout Period Using NetBeans IDE</a></li>
</ul>
</li>
<li><a href="servlets009.htm#BNAGR"><span class="secnum">17.9.4</span> Session Tracking</a></li>
</ul>
</li>
<li><a href="servlets010.htm#BNAGS"><span class="secnum">17.10</span> Finalizing a Servlet</a>
<ul style="list-style-type:none">
<li><a href="servlets010.htm#BNAGT"><span class="secnum">17.10.1</span> Tracking Service Requests</a></li>
<li><a href="servlets010.htm#BNAGU"><span class="secnum">17.10.2</span> Notifying Methods to Shut Down</a></li>
<li><a href="servlets010.htm#BNAGV"><span class="secnum">17.10.3</span> Creating Polite Long-Running Methods</a></li>
</ul>
</li>
<li><a href="servlets011.htm#BABFGCHB"><span class="secnum">17.11</span> Uploading Files with Java Servlet Technology</a>
<ul style="list-style-type:none">
<li><a href="servlets011.htm#sthref1229"><span class="secnum">17.11.1</span> The @MultipartConfig Annotation</a></li>
<li><a href="servlets011.htm#sthref1231"><span class="secnum">17.11.2</span> The getParts and getPart Methods</a></li>
</ul>
</li>
<li><a href="servlets012.htm#BEIGCFDF"><span class="secnum">17.12</span> Asynchronous Processing</a>
<ul style="list-style-type:none">
<li><a href="servlets012.htm#sthref1235"><span class="secnum">17.12.1</span> Asynchronous Processing in Servlets</a></li>
<li><a href="servlets012.htm#sthref1237"><span class="secnum">17.12.2</span> Waiting for a Resource</a></li>
</ul>
</li>
<li><div id="backgroundColor"><a href="servlets013.htm#BEIHICDH"><span class="secnum">17.13</span> Nonblocking I/O</a><ul style="list-style-type:none">
<li><a href="servlets013.htm#sthref1242"><span class="secnum">17.13.1</span> Reading a Large HTTP POST Request Using Nonblocking I/O</a></li>
</ul>
</div></li>
<li><a href="servlets014.htm#BEIJHCDJ"><span class="secnum">17.14</span> Protocol Upgrade Processing</a></li>
<li><a href="servlets015.htm#GKCPG"><span class="secnum">17.15</span> The mood Example Application</a>
<ul style="list-style-type:none">
<li><a href="servlets015.htm#sthref1246"><span class="secnum">17.15.1</span> Components of the mood Example Application</a></li>
<li><a href="servlets015.htm#GKCOJ"><span class="secnum">17.15.2</span> Running the mood Example</a>
<ul style="list-style-type:none">
<li><a href="servlets015.htm#GKCOB"><span class="secnum">17.15.2.1</span> To Run the mood Example Using NetBeans IDE</a></li>
<li><a href="servlets015.htm#GKCPJ"><span class="secnum">17.15.2.2</span> To Run the mood Example Using Maven</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="servlets016.htm#BABDGFJJ"><span class="secnum">17.16</span> The fileupload Example Application</a>
<ul style="list-style-type:none">
<li><a href="servlets016.htm#sthref1248"><span class="secnum">17.16.1</span> Architecture of the fileupload Example Application</a></li>
<li><a href="servlets016.htm#sthref1249"><span class="secnum">17.16.2</span> Running the fileupload Example</a>
<ul style="list-style-type:none">
<li><a href="servlets016.htm#sthref1250"><span class="secnum">17.16.2.1</span> To Build, Package, and Deploy the fileupload Example Using NetBeans IDE</a></li>
<li><a href="servlets016.htm#sthref1251"><span class="secnum">17.16.2.2</span> To Build, Package, and Deploy the fileupload Example Using Maven</a></li>
<li><a href="servlets016.htm#sthref1252"><span class="secnum">17.16.2.3</span> To Run the fileupload Example</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="servlets017.htm#BEIFAIFF"><span class="secnum">17.17</span> The dukeetf Example Application</a>
<ul style="list-style-type:none">
<li><a href="servlets017.htm#sthref1253"><span class="secnum">17.17.1</span> Architecture of the dukeetf Example Application</a>
<ul style="list-style-type:none">
<li><a href="servlets017.htm#sthref1254"><span class="secnum">17.17.1.1</span> The Servlet</a></li>
<li><a href="servlets017.htm#sthref1255"><span class="secnum">17.17.1.2</span> The Enterprise Bean</a></li>
<li><a href="servlets017.htm#sthref1256"><span class="secnum">17.17.1.3</span> The HTML Page</a></li>
</ul>
</li>
<li><a href="servlets017.htm#sthref1257"><span class="secnum">17.17.2</span> Running the dukeetf Example Application</a>
<ul style="list-style-type:none">
<li><a href="servlets017.htm#sthref1258"><span class="secnum">17.17.2.1</span> To Run the dukeetf Example Application Using NetBeans IDE</a></li>
<li><a href="servlets017.htm#sthref1259"><span class="secnum">17.17.2.2</span> To Run the dukeetf Example Application Using Maven</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="servlets018.htm#BNAGW"><span class="secnum">17.18</span> Further Information about Java Servlet Technology</a></li>
</ul>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="servlets012.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="servlets014.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="BEIHICDH" name="BEIHICDH"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1"><span class="secnum">17.13</span> Nonblocking I/O<a id="sthref1238" name="sthref1238"></a></h1>
<p>Web containers in application servers normally use a server thread per client request. To develop scalable web applications, you must ensure that threads associated with client requests are never sitting idle waiting for a blocking operation to complete. <a href="servlets012.htm#BEIGCFDF">Asynchronous Processing</a> provides a mechanism to execute application-specific blocking operations in a new thread, returning the thread associated with the request immediately to the container. Even if you use asynchronous processing for all the application-specific blocking operations inside your service methods, threads associated with client requests can be momentarily sitting idle because of input/output considerations.</p>
<p>For example, if a client is submitting a large HTTP POST request over a slow network connection, the server can read the request faster than the client can provide it. Using traditional I/O, the container thread associated with this request would be sometimes sitting idle waiting for the rest of the request.</p>
<p>Java EE provides nonblocking I/O support for servlets and filters when processing requests in asynchronous mode. The following steps summarize how to use nonblocking I/O to process requests and write responses inside service methods.</p>
<ol>
<li>
<p>Put the request in asynchronous mode as described in <a href="servlets012.htm#BEIGCFDF">Asynchronous Processing</a>.</p>
</li>
<li>
<p>Obtain an input stream and/or an output stream from the request and response objects in the service method.</p>
</li>
<li>
<p>Assign a read listener to the input stream and/or a write listener to the output stream.</p>
</li>
<li>
<p>Process the request and the response inside the listener's callback methods.</p>
</li>
</ol>
<p><a href="#BEIFDICJ">Table 17-4</a> and <a href="#BEIFIIIH">Table 17-5</a> describe the methods available in the servlet input and output streams for nonblocking I/O support. <a href="#BEIFGJCG">Table 17-6</a> describes the interfaces for read listeners and write listeners.</p>
<div class="tblhruleformal"><a id="sthref1239" name="sthref1239"></a><a id="BEIFDICJ" name="BEIFDICJ"></a>
<p class="titleintable">Table 17-4 Nonblocking I/O Support in javax.servlet.ServletInputStream</p>
<table class="HRuleFormal" title="Nonblocking I/O Support in javax.servlet.ServletInputStream" summary="The table describes the non-blocking support in ServletInputStream." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="50%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t5">Method</th>
<th align="left" valign="bottom" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t5" headers="r1c1-t5">
<p><code>void setReadListener(ReadListener rl)</code></p>
</td>
<td align="left" headers="r2c1-t5 r1c2-t5">
<p>Associates this input stream with a listener object that contains callback methods to read data asynchronously. You provide the listener object as an anonymous class or use another mechanism to pass the input stream to the read listener object.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t5" headers="r1c1-t5">
<p><code>boolean isReady()</code></p>
</td>
<td align="left" headers="r3c1-t5 r1c2-t5">
<p>Returns true if data can be read without blocking.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t5" headers="r1c1-t5">
<p><code>boolean isFinished()</code></p>
</td>
<td align="left" headers="r4c1-t5 r1c2-t5">
<p>Returns true when all the data has been read.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<div class="tblhruleformal"><a id="sthref1240" name="sthref1240"></a><a id="BEIFIIIH" name="BEIFIIIH"></a>
<p class="titleintable">Table 17-5 Nonblocking I/O Support in javax.servlet.ServletOutputStream</p>
<table class="HRuleFormal" title="Nonblocking I/O Support in javax.servlet.ServletOutputStream" summary="The table describes the support for non-blocking I/O in ServletOutputStream." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="*" />
<col width="50%" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t6">Method</th>
<th align="left" valign="bottom" id="r1c2-t6">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t6" headers="r1c1-t6">
<p><code>void setWriteListener(WriteListener wl)</code></p>
</td>
<td align="left" headers="r2c1-t6 r1c2-t6">
<p>Associates this output stream with a listener object that contains callback methods to write data asynchronously. You provide the write listener object as an anonymous class or use another mechanism to pass the output stream to the write listener object.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t6" headers="r1c1-t6">
<p><code>boolean isReady()</code></p>
</td>
<td align="left" headers="r3c1-t6 r1c2-t6">
<p>Returns true if data can be written without blocking.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<div class="tblhruleformal"><a id="sthref1241" name="sthref1241"></a><a id="BEIFGJCG" name="BEIFGJCG"></a>
<p class="titleintable">Table 17-6 Listener Interfaces for Nonblocking I/O Support</p>
<table class="HRuleFormal" title="Listener Interfaces for Nonblocking I/O Support" summary="The table lists the methods in the listener classes for asynchronous input/output support. The first column lists the interface name, the second column lists the method name, and the third column contains a description of each interface." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="19%" />
<col width="33%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t7">Interface</th>
<th align="left" valign="bottom" id="r1c2-t7">Methods</th>
<th align="left" valign="bottom" id="r1c3-t7">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t7" headers="r1c1-t7">
<p><code>ReadListener</code></p>
</td>
<td align="left" headers="r2c1-t7 r1c2-t7">
<p><code>void onDataAvailable()</code></p>
<p><code>void onAllDataRead()</code></p>
<p><code>void onError(Throwable t)</code></p>
</td>
<td align="left" headers="r2c1-t7 r1c3-t7">
<p>A <code>ServletInputStream</code> instance calls these methods on its listener when there is data available to read, when all the data has been read, or when there is an error.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t7" headers="r1c1-t7">
<p><code>WriteListener</code></p>
</td>
<td align="left" headers="r3c1-t7 r1c2-t7">
<p><code>void onWritePossible()</code></p>
<p><code>void onError(Throwable t)</code></p>
</td>
<td align="left" headers="r3c1-t7 r1c3-t7">
<p>A <code>ServletOutputStream</code> instance calls these methods on its listener when it is possible to write data without blocking or when there is an error.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1242" name="sthref1242"></a>
<h2 class="sect2"><span class="secnum">17.13.1</span> Reading a Large HTTP POST Request Using Nonblocking I/O</h2>
<p>The code in this section shows how to read a large HTTP POST request inside a servlet by putting the request in asynchronous mode (as described in <a href="servlets012.htm#BEIGCFDF">Asynchronous Processing</a>) and using the nonblocking I/O functionality from <a href="#BEIFDICJ">Table 17-4</a> and <a href="#BEIFGJCG">Table 17-6</a>.</p>
<pre xml:space="preserve" class="oac_no_warn">
@WebServlet(urlPatterns={"/asyncioservlet"}, asyncSupported=true)
public class AsyncIOServlet extends HttpServlet {
   @Override
   public void doPost(HttpServletRequest request, 
                      HttpServletResponse response)
                      throws IOException {
      final AsyncContext acontext = request.startAsync();
      final ServletInputStream input = request.getInputStream();
      
      input.setReadListener(new ReadListener() {
         byte buffer[] = new byte[4*1024];
         StringBuilder sbuilder = new StringBuilder();
         @Override
         public void onDataAvailable() {
            try {
               do {
                  int length = input.read(buffer);
                  sbuilder.append(new String(buffer, 0, length));
               } while(input.isReady());
            } catch (IOException ex) { ... }
         }
         @Override
         public void onAllDataRead() {
            try {
               acontext.getResponse().getWriter()
                                     .write("...the response...");
            } catch (IOException ex) { ... }
            acontext.complete();
         }
         @Override
         public void onError(Throwable t) { ... }
      });
   }
}
</pre>
<p>This example declares the web servlet with asynchronous support using the <code>@WebServlet</code> annotation parameter <code>asyncSupported=true</code>. The service method first puts the request in asynchronous mode by calling the <code>startAsync()</code> method of the request object, which is required in order to use nonblocking I/O. Then, the service method obtains an input stream associated with the request and assigns a read listener defined as an inner class. The listener reads parts of the request as they become available and then writes some response to the client when it finishes reading the request.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="servlets012.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="servlets014.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

