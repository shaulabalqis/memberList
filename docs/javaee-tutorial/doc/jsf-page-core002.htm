<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:0Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Registering Listeners on Components" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:Registering Listeners on Components | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<ul style="list-style-type:none">
<li><a href="jsf-page-core001.htm#BNAST"><span class="secnum">11.1</span> Using the Standard Converters</a>
<ul style="list-style-type:none">
<li><a href="jsf-page-core001.htm#BNASU"><span class="secnum">11.1.1</span> Converting a Component's Value</a></li>
<li><a href="jsf-page-core001.htm#BNASV"><span class="secnum">11.1.2</span> Using DateTimeConverter</a></li>
<li><a href="jsf-page-core001.htm#BNASX"><span class="secnum">11.1.3</span> Using NumberConverter</a></li>
</ul>
</li>
<li><div id="backgroundColor"><a href="jsf-page-core002.htm#BNASZ"><span class="secnum">11.2</span> Registering Listeners on Components</a><ul style="list-style-type:none">
<li><a href="jsf-page-core002.htm#BNATA"><span class="secnum">11.2.1</span> Registering a Value-Change Listener on a Component</a></li>
<li><a href="jsf-page-core002.htm#BNATB"><span class="secnum">11.2.2</span> Registering an Action Listener on a Component</a></li>
</ul>
</div></li>
<li><a href="jsf-page-core003.htm#BNATC"><span class="secnum">11.3</span> Using the Standard Validators</a>
<ul style="list-style-type:none">
<li><a href="jsf-page-core003.htm#BNATE"><span class="secnum">11.3.1</span> Validating a Component's Value</a></li>
<li><a href="jsf-page-core003.htm#BNATF"><span class="secnum">11.3.2</span> Using Validator Tags</a></li>
</ul>
</li>
<li><a href="jsf-page-core004.htm#BNATN"><span class="secnum">11.4</span> Referencing a Managed Bean Method</a>
<ul style="list-style-type:none">
<li><a href="jsf-page-core004.htm#BNATP"><span class="secnum">11.4.1</span> Referencing a Method That Performs Navigation</a></li>
<li><a href="jsf-page-core004.htm#BNATQ"><span class="secnum">11.4.2</span> Referencing a Method That Handles an Action Event</a></li>
<li><a href="jsf-page-core004.htm#BNATR"><span class="secnum">11.4.3</span> Referencing a Method That Performs Validation</a></li>
<li><a href="jsf-page-core004.htm#BNATS"><span class="secnum">11.4.4</span> Referencing a Method That Handles a Value-Change Event</a></li>
</ul>
</li>
</ul>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jsf-page-core001.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jsf-page-core003.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="BNASZ" name="BNASZ"></a><a id="JEETT00351" name="JEETT00351"></a>
<div class="sect1">
<h1 class="sect1"><span class="secnum">11.2</span> Registering Listeners on Components</h1>
<p>An application developer can implement listeners as classes or as managed bean methods. If a listener is a managed bean method, the page author references the method from either the component's <code>valueChangeListener</code> attribute or its <code>actionListener</code> attribute. If the listener is a class, the page author can reference the listener from either an <code>f:valueChangeListener</code> tag or an <code>f:actionListener</code> tag and nest the tag inside the component tag to register the listener on the component.</p>
<p><a href="jsf-page-core004.htm#BNATQ">Referencing a Method That Handles an Action Event</a> and <a href="jsf-page-core004.htm#BNATS">Referencing a Method That Handles a Value-Change Event</a> explain how a page author uses the <code>valueChangeListener</code> and <code>actionListener</code> attributes to reference managed bean methods that handle events.</p>
<p>This section explains how to register a <code>NameChanged</code> value-change listener and a <code>BookChange</code> action listener implementation on components. The Duke's Bookstore case study includes both of these listeners.</p>
<a id="BNATA" name="BNATA"></a><a id="JEETT00934" name="JEETT00934"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">11.2.1</span> <a id="sthref661" name="sthref661"></a><a id="sthref662" name="sthref662"></a><a id="sthref663" name="sthref663"></a>Registering a Value-Change Listener on a Component</h2>
<p>A page author can register a <code>ValueChangeListener</code> implementation on a component that implements <code>EditableValueHolder</code> by nesting an <code>f:valueChangeListener</code> tag within the component's tag on the page. The <code>f:valueChangeListener</code> tag supports the attributes shown in <a href="#GKCLY">Table 11-4</a>, one of which must be used.</p>
<div class="tblhruleformal"><a id="sthref664" name="sthref664"></a><a id="GKCLY" name="GKCLY"></a>
<p class="titleintable">Table 11-4 Attributes for the f:valueChangeListener Tag</p>
<table class="HRuleFormal" title="Attributes for the f:valueChangeListener Tag" summary="This table lists and describes the attributes for the f:valueChangeListener tag." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="21%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t5">Attribute</th>
<th align="left" valign="bottom" id="r1c2-t5">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t5" headers="r1c1-t5">
<p><code>type</code></p>
</td>
<td align="left" headers="r2c1-t5 r1c2-t5">
<p>References the fully qualified class name of a <code>ValueChangeListener</code> implementation. Can accept a literal or a value expression.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t5" headers="r1c1-t5">
<p><code>binding</code></p>
</td>
<td align="left" headers="r3c1-t5 r1c2-t5">
<p>References an object that implements <code>ValueChangeListener</code>. Can accept only a value expression, which must point to a managed bean property that accepts and returns a <code>ValueChangeListener</code> implementation.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p>The following example shows a value-change listener registered on a component:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;h:inputText id="name"
             size="30"
             value="#{cashierBean.name}"
             required="true"
             requiredMessage="#{bundle.ReqCustomerName}"&gt;
    &lt;f:valueChangeListener
        type="javaeetutorial.dukesbookstore.listeners.NameChanged" /&gt;
&lt;/h:inputText&gt;
</pre>
<p><a id="sthref665" name="sthref665"></a><a id="sthref666" name="sthref666"></a>In the example, the core tag <code>type</code> attribute specifies the custom <code>NameChanged</code> listener as the <code>ValueChangeListener</code> implementation registered on the <code>name</code> component.</p>
<p><a id="sthref667" name="sthref667"></a>After this component tag is processed and local values have been validated, its corresponding component instance will queue the <code>ValueChangeEvent</code> associated with the specified <code>ValueChangeListener</code> to the component.</p>
<p>The <code>binding</code> attribute is used to bind a <code>ValueChangeListener</code> implementation to a managed bean property. This attribute works in a similar way to the <code>binding</code> attribute supported by the standard converter tags. See <a href="jsf-custom012.htm#BNATG">Binding Component Values and Instances to Managed Bean Properties</a> for more information.</p>
</div>
<!-- class="sect2" -->
<a id="BNATB" name="BNATB"></a><a id="JEETT00935" name="JEETT00935"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">11.2.2</span> <a id="sthref668" name="sthref668"></a><a id="sthref669" name="sthref669"></a><a id="sthref670" name="sthref670"></a>Registering an Action Listener on a Component</h2>
<p>A page author can register an <code>ActionListener</code> implementation on a command component by nesting an <code>f:actionListener</code> tag within the component's tag on the page. Similarly to the <code>f:valueChangeListener</code> tag, the <code>f:actionListener</code> tag supports both the <code>type</code> and <code>binding</code> attributes. One of these attributes must be used to reference the action listener.</p>
<p>Here is an example of an <code>h:commandLink</code> tag that references an <code>ActionListener</code> implementation:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;h:commandLink id="Duke" action="bookstore"&gt;
    &lt;f:actionListener 
        type="javaeetutorial.dukesbookstore.listeners.LinkBookChangeListener" /&gt;
    &lt;h:outputText value="#{bundle.Book201}"/&gt;
&lt;/h:commandLink&gt;
</pre>
<p>The <code>type</code> attribute of the <code>f:actionListener</code> tag specifies the fully qualified class name of the <code>ActionListener</code> implementation. Similarly to the <code>f:valueChangeListener</code> tag, the <code>f:actionListener</code> tag also supports the <code>binding</code> attribute. See <a href="jsf-custom013.htm#BNATM">Binding Converters, Listeners, and Validators to Managed Bean Properties</a> for more information about binding listeners to managed bean properties.</p>
<p>In addition to the <code>actionListener</code> tag that allows you register a custom listener onto a component, the core tag library includes the <code>f:setPropertyActionListener</code> tag. You use this tag to register a special action listener onto the <code>ActionSource</code> instance associated with a component. When the component is activated, the listener will store the object referenced by the tag's <code>value</code> attribute into the object referenced by the tag's <code>target</code> attribute.</p>
<p>The <code>bookcatalog.xhtml</code> page of the Duke's Bookstore application uses <code>f:setPropertyActionListener</code> with two components: the <code>h:commandLink</code> component used to link to the <code>bookdetails.xhtml</code> page and the <code>h:commandButton</code> component used to add a book to the cart:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;h:dataTable id="books"
    value="#{store.books}"
    var="book"
    headerClass="list-header"
    styleClass="list-background"
    rowClasses="list-row-even, list-row-odd"
    border="1"
    summary="#{bundle.BookCatalog}" &gt;
    ...
    &lt;h:column&gt;
        &lt;f:facet name="header"&gt;
            &lt;h:outputText value="#{bundle.ItemTitle}"/&gt;
        &lt;/f:facet&gt;
        &lt;h:commandLink action="#{catalog.details}"
                       value="#{book.title}"&gt;
            &lt;f:setPropertyActionListener target="#{requestScope.book}"
                                         value="#{book}"/&gt;
        &lt;/h:commandLink&gt;
    &lt;/h:column&gt;
    ...
    &lt;h:column&gt;
        &lt;f:facet name="header"&gt;
            &lt;h:outputText value="#{bundle.CartAdd}"/&gt;
        &lt;/f:facet&gt;
        &lt;h:commandButton id="add"
                         action="#{catalog.add}"
                         value="#{bundle.CartAdd}"&gt;
            &lt;f:setPropertyActionListener target="#{requestScope.book}"
                                         value="#{book}"/&gt;
        &lt;/h:commandButton&gt;
    &lt;/h:column&gt;
</pre>
<p>The <code>h:commandLink</code> and <code>h:commandButton</code> tags are within an <code>h:dataTable</code> tag, which iterates over the list of books. The <code>var</code> attribute refers to a single book in the list of books.</p>
<p>The object referenced by the <code>var</code> attribute of an <code>h:dataTable</code> tag is in page scope. However, in this case you need to put this object into request scope so that when the user activates the <code>commandLink</code> component to go to <code>bookdetails.xhtml</code> or activates the <code>commandButton</code> component to go to <code>bookcatalog.xhtml</code>, the book data is available to those pages. Therefore, the <code>f:setPropertyActionListener</code> tag is used to set the current book object into request scope when the <code>commandLink</code> or <code>commandButton</code> component is activated.</p>
<p>In the preceding example, the <code>f:setPropertyActionListener</code> tag's <code>value</code> attribute references the <code>book</code> object. The <code>f:setPropertyActionListener</code> tag's <code>target</code> attribute references the value expression <code>requestScope.book</code>, which is where the <code>book</code> object referenced by the <code>value</code> attribute is stored when the <code>commandLink</code> or the <code>commandButton</code> component is activated.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jsf-page-core001.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jsf-page-core003.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

