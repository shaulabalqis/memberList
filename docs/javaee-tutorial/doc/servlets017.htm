<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:1Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="The dukeetf Example Application" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:The dukeetf Example Application | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<ul style="list-style-type:none">
<li><a href="servlets001.htm#BNAFE"><span class="secnum">17.1</span> What Is a Servlet?</a></li>
<li><a href="servlets002.htm#BNAFI"><span class="secnum">17.2</span> Servlet Lifecycle</a>
<ul style="list-style-type:none">
<li><a href="servlets002.htm#BNAFJ"><span class="secnum">17.2.1</span> Handling Servlet Lifecycle Events</a>
<ul style="list-style-type:none">
<li><a href="servlets002.htm#BNAFK"><span class="secnum">17.2.1.1</span> Defining the Listener Class</a></li>
</ul>
</li>
<li><a href="servlets002.htm#BNAFN"><span class="secnum">17.2.2</span> Handling Servlet Errors</a></li>
</ul>
</li>
<li><a href="servlets003.htm#BNAFO"><span class="secnum">17.3</span> Sharing Information</a>
<ul style="list-style-type:none">
<li><a href="servlets003.htm#BNAFP"><span class="secnum">17.3.1</span> Using Scope Objects</a></li>
<li><a href="servlets003.htm#BNAFS"><span class="secnum">17.3.2</span> Controlling Concurrent Access to Shared Resources</a></li>
</ul>
</li>
<li><a href="servlets004.htm#BNAFU"><span class="secnum">17.4</span> Creating and Initializing a Servlet</a></li>
<li><a href="servlets005.htm#BNAFV"><span class="secnum">17.5</span> Writing Service Methods</a>
<ul style="list-style-type:none">
<li><a href="servlets005.htm#BNAFW"><span class="secnum">17.5.1</span> Getting Information from Requests</a></li>
<li><a href="servlets005.htm#BNAFZ"><span class="secnum">17.5.2</span> Constructing Responses</a></li>
</ul>
</li>
<li><a href="servlets006.htm#BNAGB"><span class="secnum">17.6</span> Filtering Requests and Responses</a>
<ul style="list-style-type:none">
<li><a href="servlets006.htm#BNAGC"><span class="secnum">17.6.1</span> Programming Filters</a></li>
<li><a href="servlets006.htm#BNAGD"><span class="secnum">17.6.2</span> Programming Customized Requests and Responses</a></li>
<li><a href="servlets006.htm#BNAGF"><span class="secnum">17.6.3</span> Specifying Filter Mappings</a>
<ul style="list-style-type:none">
<li><a href="servlets006.htm#GJSLC"><span class="secnum">17.6.3.1</span> To Specify Filter Mappings Using NetBeans IDE</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="servlets007.htm#BNAGI"><span class="secnum">17.7</span> Invoking Other Web Resources</a>
<ul style="list-style-type:none">
<li><a href="servlets007.htm#BNAGJ"><span class="secnum">17.7.1</span> Including Other Resources in the Response</a></li>
<li><a href="servlets007.htm#BNAGK"><span class="secnum">17.7.2</span> Transferring Control to Another Web Component</a></li>
</ul>
</li>
<li><a href="servlets008.htm#BNAGL"><span class="secnum">17.8</span> Accessing the Web Context</a></li>
<li><a href="servlets009.htm#BNAGM"><span class="secnum">17.9</span> Maintaining Client State</a>
<ul style="list-style-type:none">
<li><a href="servlets009.htm#BNAGN"><span class="secnum">17.9.1</span> Accessing a Session</a></li>
<li><a href="servlets009.htm#BNAGO"><span class="secnum">17.9.2</span> Associating Objects with a Session</a></li>
<li><a href="servlets009.htm#BNAGQ"><span class="secnum">17.9.3</span> Session Management</a>
<ul style="list-style-type:none">
<li><a href="servlets009.htm#sthref1221"><span class="secnum">17.9.3.1</span> To Set the Timeout Period Using NetBeans IDE</a></li>
</ul>
</li>
<li><a href="servlets009.htm#BNAGR"><span class="secnum">17.9.4</span> Session Tracking</a></li>
</ul>
</li>
<li><a href="servlets010.htm#BNAGS"><span class="secnum">17.10</span> Finalizing a Servlet</a>
<ul style="list-style-type:none">
<li><a href="servlets010.htm#BNAGT"><span class="secnum">17.10.1</span> Tracking Service Requests</a></li>
<li><a href="servlets010.htm#BNAGU"><span class="secnum">17.10.2</span> Notifying Methods to Shut Down</a></li>
<li><a href="servlets010.htm#BNAGV"><span class="secnum">17.10.3</span> Creating Polite Long-Running Methods</a></li>
</ul>
</li>
<li><a href="servlets011.htm#BABFGCHB"><span class="secnum">17.11</span> Uploading Files with Java Servlet Technology</a>
<ul style="list-style-type:none">
<li><a href="servlets011.htm#sthref1229"><span class="secnum">17.11.1</span> The @MultipartConfig Annotation</a></li>
<li><a href="servlets011.htm#sthref1231"><span class="secnum">17.11.2</span> The getParts and getPart Methods</a></li>
</ul>
</li>
<li><a href="servlets012.htm#BEIGCFDF"><span class="secnum">17.12</span> Asynchronous Processing</a>
<ul style="list-style-type:none">
<li><a href="servlets012.htm#sthref1235"><span class="secnum">17.12.1</span> Asynchronous Processing in Servlets</a></li>
<li><a href="servlets012.htm#sthref1237"><span class="secnum">17.12.2</span> Waiting for a Resource</a></li>
</ul>
</li>
<li><a href="servlets013.htm#BEIHICDH"><span class="secnum">17.13</span> Nonblocking I/O</a>
<ul style="list-style-type:none">
<li><a href="servlets013.htm#sthref1242"><span class="secnum">17.13.1</span> Reading a Large HTTP POST Request Using Nonblocking I/O</a></li>
</ul>
</li>
<li><a href="servlets014.htm#BEIJHCDJ"><span class="secnum">17.14</span> Protocol Upgrade Processing</a></li>
<li><a href="servlets015.htm#GKCPG"><span class="secnum">17.15</span> The mood Example Application</a>
<ul style="list-style-type:none">
<li><a href="servlets015.htm#sthref1246"><span class="secnum">17.15.1</span> Components of the mood Example Application</a></li>
<li><a href="servlets015.htm#GKCOJ"><span class="secnum">17.15.2</span> Running the mood Example</a>
<ul style="list-style-type:none">
<li><a href="servlets015.htm#GKCOB"><span class="secnum">17.15.2.1</span> To Run the mood Example Using NetBeans IDE</a></li>
<li><a href="servlets015.htm#GKCPJ"><span class="secnum">17.15.2.2</span> To Run the mood Example Using Maven</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="servlets016.htm#BABDGFJJ"><span class="secnum">17.16</span> The fileupload Example Application</a>
<ul style="list-style-type:none">
<li><a href="servlets016.htm#sthref1248"><span class="secnum">17.16.1</span> Architecture of the fileupload Example Application</a></li>
<li><a href="servlets016.htm#sthref1249"><span class="secnum">17.16.2</span> Running the fileupload Example</a>
<ul style="list-style-type:none">
<li><a href="servlets016.htm#sthref1250"><span class="secnum">17.16.2.1</span> To Build, Package, and Deploy the fileupload Example Using NetBeans IDE</a></li>
<li><a href="servlets016.htm#sthref1251"><span class="secnum">17.16.2.2</span> To Build, Package, and Deploy the fileupload Example Using Maven</a></li>
<li><a href="servlets016.htm#sthref1252"><span class="secnum">17.16.2.3</span> To Run the fileupload Example</a></li>
</ul>
</li>
</ul>
</li>
<li><div id="backgroundColor"><a href="servlets017.htm#BEIFAIFF"><span class="secnum">17.17</span> The dukeetf Example Application</a><ul style="list-style-type:none">
<li><a href="servlets017.htm#sthref1253"><span class="secnum">17.17.1</span> Architecture of the dukeetf Example Application</a>
<ul style="list-style-type:none">
<li><a href="servlets017.htm#sthref1254"><span class="secnum">17.17.1.1</span> The Servlet</a></li>
<li><a href="servlets017.htm#sthref1255"><span class="secnum">17.17.1.2</span> The Enterprise Bean</a></li>
<li><a href="servlets017.htm#sthref1256"><span class="secnum">17.17.1.3</span> The HTML Page</a></li>
</ul>
</li>
<li><a href="servlets017.htm#sthref1257"><span class="secnum">17.17.2</span> Running the dukeetf Example Application</a>
<ul style="list-style-type:none">
<li><a href="servlets017.htm#sthref1258"><span class="secnum">17.17.2.1</span> To Run the dukeetf Example Application Using NetBeans IDE</a></li>
<li><a href="servlets017.htm#sthref1259"><span class="secnum">17.17.2.2</span> To Run the dukeetf Example Application Using Maven</a></li>
</ul>
</li>
</ul>
</div></li>
<li><a href="servlets018.htm#BNAGW"><span class="secnum">17.18</span> Further Information about Java Servlet Technology</a></li>
</ul>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="servlets016.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="servlets018.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="BEIFAIFF" name="BEIFAIFF"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1"><span class="secnum">17.17</span> The dukeetf Example Application</h1>
<p>The <code>dukeetf</code> example application, located in the <span class="variable">tut-install</span><code>/examples/web/dukeetf/</code> directory, demonstrates how to use asynchronous processing in a servlet to provide data updates to web clients. The example resembles a service that provides periodic updates on the price and trading volume of an electronically traded fund (ETF).</p>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1253" name="sthref1253"></a>
<h2 class="sect2"><span class="secnum">17.17.1</span> Architecture of the dukeetf Example Application</h2>
<p>The <code>dukeetf</code> example application consists of a servlet, an enterprise bean, and an HTML page.</p>
<ul>
<li>
<p>The servlet puts requests in asynchronous mode, stores them in a queue, and writes the responses when new data for price and trading volume becomes available.</p>
</li>
<li>
<p>The enterprise bean updates the price and volume information once every second.</p>
</li>
<li>
<p>The HTML page uses JavaScript code to make requests to the servlet for new data, parse the response from the servlet, and update the price and volume information without reloading the page.</p>
</li>
</ul>
<p>The <code>dukeetf</code> example application uses a programming model known as <span class="bold">long polling</span>. In the traditional HTTP request and response model, the user must make an explicit request (such as clicking a link or submitting a form) to get any new information from the server, and the page has to be reloaded. Long polling provides a mechanism for web applications to push updates to clients using HTTP without the user making an explicit request. The server handles connections asynchronously, and the client uses JavaScript to make new connections. In this model, clients make a new request immediately after receiving new data, and the server keeps the connection open until new data becomes available.</p>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1254" name="sthref1254"></a>
<h3 class="sect3"><span class="secnum">17.17.1.1</span> The Servlet</h3>
<p>The <code>DukeETFServlet</code> class uses asynchronous processing:</p>
<pre xml:space="preserve" class="oac_no_warn">
@WebServlet(urlPatterns={"/dukeetf"}, asyncSupported=true)
public class DukeETFServlet extends HttpServlet {
...
}
</pre>
<p>In the following code, the <code>init</code> method initializes a queue to hold client requests and registers the servlet with the enterprise bean that provides the price and volume updates. The <code>send</code> method gets called once per second by the <code>PriceVolumeBean</code> to send updates and close the connection:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Override
public void init(ServletConfig config) {
   /* Queue for requests */
   requestQueue = new ConcurrentLinkedQueue&lt;&gt;();
   /* Register with the enterprise bean that provides price/volume updates */
   pvbean.registerServlet(this);
}

/* PriceVolumeBean calls this method every second to send updates */
public void send(double price, int volume) {
   /* Send update to all connected clients */
   for (AsyncContext acontext : requestQueue) {
      try {
         String msg = String.format("%.2f / %d", price, volume);
         PrintWriter writer = acontext.getResponse().getWriter();
         writer.write(msg);
         logger.log(Level.INFO, "Sent: {0}", msg);
         /* Close the connection
          * The client (JavaScript) makes a new one instantly */
         acontext.complete();
      } catch (IOException ex) {
         logger.log(Level.INFO, ex.toString());
      }
   }
}
</pre>
<p>The service method puts client requests in asynchronous mode and adds a listener to each request. The listener is implemented as an anonymous class that removes the request from the queue when the servlet finishes writing a response or when there is an error. Finally, the service method adds the request to the request queue created in the <code>init</code> method. The service method is the following:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Override
public void doGet(HttpServletRequest request, 
                  HttpServletResponse response) {
   response.setContentType("text/html");
   /* Put request in async mode */
   final AsyncContext acontext = request.startAsync();
   /* Remove from the queue when done */
   acontext.addListener(new AsyncListener() {
      public void onComplete(AsyncEvent ae) throws IOException {
         requestQueue.remove(acontext);
      }
      public void onTimeout(AsyncEvent ae) throws IOException {
         requestQueue.remove(acontext);
      }
      public void onError(AsyncEvent ae) throws IOException {
         requestQueue.remove(acontext);
      }
      public void onStartAsync(AsyncEvent ae) throws IOException {}
   });
   /* Add to the queue */
   requestQueue.add(acontext);
}
</pre></div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1255" name="sthref1255"></a>
<h3 class="sect3"><span class="secnum">17.17.1.2</span> The Enterprise Bean</h3>
<p>The <code>PriceVolumeBean</code> class is an enterprise bean that uses the timer service from the container to update the price and volume information and call the servlet's <code>send</code> method once every second:</p>
<pre xml:space="preserve" class="oac_no_warn">
@Startup
@Singleton
public class PriceVolumeBean {
    /* Use the container's timer service */
    @Resource TimerService tservice;
    private DukeETFServlet servlet;
    ...
    
    @PostConstruct
    public void init() {
        /* Initialize the EJB and create a timer */
        random = new Random();
        servlet = null;
        tservice.createIntervalTimer(1000, 1000, new TimerConfig());
    }
    
    public void registerServlet(DukeETFServlet servlet) {
        /* Associate a servlet to send updates to */
        this.servlet = servlet;
    }
    
    @Timeout
    public void timeout() {
        /* Adjust price and volume and send updates */
        price += 1.0*(random.nextInt(100)-50)/100.0;
        volume += random.nextInt(5000) - 2500;
        if (servlet != null)
            servlet.send(price, volume);
    }
}
</pre>
<p>See <a href="ejb-basicexamples004.htm#BNBOY">Using the Timer Service</a> in <a href="ejb-basicexamples.htm#GIJRB">Chapter 34, "Running the Enterprise Bean Examples"</a> for more information on the timer service.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1256" name="sthref1256"></a>
<h3 class="sect3"><span class="secnum">17.17.1.3</span> The HTML Page</h3>
<p>The HTML page consists of a table and some JavaScript code. The table contains two fields referenced from JavaScript code:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;...&lt;/head&gt;
&lt;body onload="makeAjaxRequest();"&gt;
  ...
  &lt;table&gt;
    ...
    &lt;td id="price"&gt;--.--&lt;/td&gt;
    ...
    &lt;td id="volume"&gt;--&lt;/td&gt;
    ...
  &lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>
<p>The JavaScript code uses the <code>XMLHttpRequest</code> API, which provides functionality for transferring data between a client and a server. The script makes an asynchronous request to the servlet and designates a callback method. When the server provides a response, the callback method updates the fields in the table and makes a new request. The JavaScript code is the following:</p>
<pre xml:space="preserve" class="oac_no_warn">
var ajaxRequest;
function updatePage() {
   if (ajaxRequest.readyState === 4) {
      var arraypv = ajaxRequest.responseText.split("/");
      document.getElementById("price").innerHTML = arraypv[0];
      document.getElementById("volume").innerHTML = arraypv[1];
      makeAjaxRequest();
   }
}
function makeAjaxRequest() {
   ajaxRequest = new XMLHttpRequest();
   ajaxRequest.onreadystatechange = updatePage;
   ajaxRequest.open("GET", "http://localhost:8080/dukeetf/dukeetf", 
                    true);
   ajaxRequest.send(null);
}
</pre>
<p>The <code>XMLHttpRequest</code> API is supported by most modern browsers, and it is widely used in Ajax web client development (Asynchronous JavaScript and XML).</p>
<p>See <a href="websocket011.htm#BABGCEHE">The dukeetf2 Example Application</a> in <a href="websocket.htm#GKJIQ5">Chapter 18, "Java API for WebSocket"</a> for an equivalent version of this example implemented using a WebSocket endpoint.</p>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref1257" name="sthref1257"></a>
<h2 class="sect2"><span class="secnum">17.17.2</span> Running the dukeetf Example Application</h2>
<p>This section describes how to run the <code>dukeetf</code> example application using NetBeans IDE and from the command line.</p>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1258" name="sthref1258"></a>
<h3 class="sect3"><span class="secnum">17.17.2.1</span> To Run the dukeetf Example Application Using NetBeans IDE</h3>
<ol>
<li>
<p>Make sure that GlassFish Server has been started (see <a href="usingexamples002.htm#BNADI">Starting and Stopping GlassFish Server</a>).</p>
</li>
<li>
<p>From the <span class="bold">File</span> menu, choose <span class="bold">Open Project</span>.</p>
</li>
<li>
<p>In the Open Project dialog box, navigate to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="italic">tut-install</span>/examples/web/servlet
</pre></li>
<li>
<p>Select the <code>dukeetf</code> folder.</p>
</li>
<li>
<p>Click <span class="bold">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="bold">Projects</span> tab, right-click the <code>dukeetf</code> project and select <span class="bold">Run</span>.</p>
<p>This command builds and packages the application into a WAR file (<code>dukeetf.war</code>) located in the <code>target</code> directory, deploys it to the server, and launches a web browser window with the following URL:</p>
<pre xml:space="preserve" class="oac_no_warn">
http://localhost:8080/dukeetf/
</pre>
<p>Open the same URL in a different web browser to see how both pages get price and volume updates simultaneously.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref1259" name="sthref1259"></a>
<h3 class="sect3"><span class="secnum">17.17.2.2</span> To Run the dukeetf Example Application Using Maven</h3>
<ol>
<li>
<p>Make sure that GlassFish Server has been started (see <a href="usingexamples002.htm#BNADI">Starting and Stopping GlassFish Server</a>).</p>
</li>
<li>
<p>In a terminal window, go to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="italic">tut-install</span>/examples/web/servlet/dukeetf/
</pre></li>
<li>
<p>Enter the following command to deploy the application:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn install
</pre></li>
<li>
<p>Open a web browser window and type the following address:</p>
<pre xml:space="preserve" class="oac_no_warn">
http://localhost:8080/dukeetf/
</pre>
<p>Open the same URL in a different web browser to see how both pages get price and volume updates simultaneously.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="servlets016.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="servlets018.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

