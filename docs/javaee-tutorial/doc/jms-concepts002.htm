<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:3Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Basic JMS API Concepts" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:Basic JMS API Concepts | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<ul style="list-style-type:none">
<li><a href="jms-concepts001.htm#BNCDR"><span class="secnum">45.1</span> Overview of the JMS API</a>
<ul style="list-style-type:none">
<li><a href="jms-concepts001.htm#BNCDS"><span class="secnum">45.1.1</span> What Is Messaging?</a></li>
<li><a href="jms-concepts001.htm#BNCDT"><span class="secnum">45.1.2</span> What Is the JMS API?</a></li>
<li><a href="jms-concepts001.htm#BNCDU"><span class="secnum">45.1.3</span> When Can You Use the JMS API?</a></li>
<li><a href="jms-concepts001.htm#BNCDW"><span class="secnum">45.1.4</span> How Does the JMS API Work with the Java EE Platform?</a></li>
</ul>
</li>
<li><div id="backgroundColor"><a href="jms-concepts002.htm#BNCDX"><span class="secnum">45.2</span> Basic JMS API Concepts</a><ul style="list-style-type:none">
<li><a href="jms-concepts002.htm#BNCDY"><span class="secnum">45.2.1</span> JMS API Architecture</a></li>
<li><a href="jms-concepts002.htm#BNCEA"><span class="secnum">45.2.2</span> Messaging Styles</a>
<ul style="list-style-type:none">
<li><a href="jms-concepts002.htm#BNCEB"><span class="secnum">45.2.2.1</span> Point-to-Point Messaging Style</a></li>
<li><a href="jms-concepts002.htm#BNCED"><span class="secnum">45.2.2.2</span> Publish/Subscribe Messaging Style</a></li>
</ul>
</li>
<li><a href="jms-concepts002.htm#BNCEG"><span class="secnum">45.2.3</span> Message Consumption</a></li>
</ul>
</div></li>
<li><a href="jms-concepts003.htm#BNCEH"><span class="secnum">45.3</span> The JMS API Programming Model</a>
<ul style="list-style-type:none">
<li><a href="jms-concepts003.htm#BNCEJ"><span class="secnum">45.3.1</span> JMS Administered Objects</a>
<ul style="list-style-type:none">
<li><a href="jms-concepts003.htm#BNCEK"><span class="secnum">45.3.1.1</span> JMS Connection Factories</a></li>
<li><a href="jms-concepts003.htm#BNCEL"><span class="secnum">45.3.1.2</span> JMS Destinations</a></li>
</ul>
</li>
<li><a href="jms-concepts003.htm#BNCEM"><span class="secnum">45.3.2</span> Connections</a></li>
<li><a href="jms-concepts003.htm#BNCEN"><span class="secnum">45.3.3</span> Sessions</a></li>
<li><a href="jms-concepts003.htm#BABGDFEA"><span class="secnum">45.3.4</span> JMSContext Objects</a></li>
<li><a href="jms-concepts003.htm#BNCEO"><span class="secnum">45.3.5</span> JMS Message Producers</a></li>
<li><a href="jms-concepts003.htm#BNCEP"><span class="secnum">45.3.6</span> JMS Message Consumers</a>
<ul style="list-style-type:none">
<li><a href="jms-concepts003.htm#BNCEQ"><span class="secnum">45.3.6.1</span> JMS Message Listeners</a></li>
<li><a href="jms-concepts003.htm#BNCER"><span class="secnum">45.3.6.2</span> JMS Message Selectors</a></li>
<li><a href="jms-concepts003.htm#BABEEJJJ"><span class="secnum">45.3.6.3</span> Consuming Messages from Topics</a></li>
<li><a href="jms-concepts003.htm#BNCGD"><span class="secnum">45.3.6.4</span> Creating Durable Subscriptions</a></li>
<li><a href="jms-concepts003.htm#BABJCIGJ"><span class="secnum">45.3.6.5</span> Creating Shared Subscriptions</a></li>
</ul>
</li>
<li><a href="jms-concepts003.htm#BNCES"><span class="secnum">45.3.7</span> JMS Messages</a>
<ul style="list-style-type:none">
<li><a href="jms-concepts003.htm#BNCET"><span class="secnum">45.3.7.1</span> Message Headers</a></li>
<li><a href="jms-concepts003.htm#BNCEV"><span class="secnum">45.3.7.2</span> Message Properties</a></li>
<li><a href="jms-concepts003.htm#BNCEW"><span class="secnum">45.3.7.3</span> Message Bodies</a></li>
</ul>
</li>
<li><a href="jms-concepts003.htm#BNCEY"><span class="secnum">45.3.8</span> JMS Queue Browsers</a></li>
<li><a href="jms-concepts003.htm#BNCEZ"><span class="secnum">45.3.9</span> JMS Exception Handling</a></li>
</ul>
</li>
<li><a href="jms-concepts004.htm#BNCFU"><span class="secnum">45.4</span> Using Advanced JMS Features</a>
<ul style="list-style-type:none">
<li><a href="jms-concepts004.htm#BNCFW"><span class="secnum">45.4.1</span> Controlling Message Acknowledgment</a></li>
<li><a href="jms-concepts004.htm#BNCFV"><span class="secnum">45.4.2</span> Specifying Options for Sending Messages</a>
<ul style="list-style-type:none">
<li><a href="jms-concepts004.htm#BNCFY"><span class="secnum">45.4.2.1</span> Specifying Message Persistence</a></li>
<li><a href="jms-concepts004.htm#BNCFZ"><span class="secnum">45.4.2.2</span> Setting Message Priority Levels</a></li>
<li><a href="jms-concepts004.htm#BNCGA"><span class="secnum">45.4.2.3</span> Allowing Messages to Expire</a></li>
<li><a href="jms-concepts004.htm#BABGEADH"><span class="secnum">45.4.2.4</span> Specifying a Delivery Delay</a></li>
<li><a href="jms-concepts004.htm#BABJFIAD"><span class="secnum">45.4.2.5</span> Using JMSProducer Method Chaining</a></li>
</ul>
</li>
<li><a href="jms-concepts004.htm#BNCGB"><span class="secnum">45.4.3</span> Creating Temporary Destinations</a></li>
<li><a href="jms-concepts004.htm#BNCGH"><span class="secnum">45.4.4</span> Using JMS Local Transactions</a></li>
<li><a href="jms-concepts004.htm#BABFIFAJ"><span class="secnum">45.4.5</span> Sending Messages Asynchronously</a></li>
</ul>
</li>
<li><a href="jms-concepts005.htm#BNCGL"><span class="secnum">45.5</span> Using the JMS API in Java EE Applications</a>
<ul style="list-style-type:none">
<li><a href="jms-concepts005.htm#BABHFBDH"><span class="secnum">45.5.1</span> Creating Resources for Java EE Applications</a></li>
<li><a href="jms-concepts005.htm#BNCGM"><span class="secnum">45.5.2</span> Using Resource Injection in Enterprise Bean or Web Components</a>
<ul style="list-style-type:none">
<li><a href="jms-concepts005.htm#sthref2355"><span class="secnum">45.5.2.1</span> Injecting a ConnectionFactory, Queue, or Topic</a></li>
<li><a href="jms-concepts005.htm#BABCJBEE"><span class="secnum">45.5.2.2</span> Injecting a JMSContext Object</a></li>
</ul>
</li>
<li><a href="jms-concepts005.htm#BNCGN"><span class="secnum">45.5.3</span> Using Java EE Components to Produce and to Synchronously Receive Messages</a>
<ul style="list-style-type:none">
<li><a href="jms-concepts005.htm#BNCGO"><span class="secnum">45.5.3.1</span> Managing JMS Resources in Web and EJB Components</a></li>
<li><a href="jms-concepts005.htm#BNCGP"><span class="secnum">45.5.3.2</span> Managing Transactions in Session Beans</a></li>
</ul>
</li>
<li><a href="jms-concepts005.htm#BNCGQ"><span class="secnum">45.5.4</span> Using Message-Driven Beans to Receive Messages Asynchronously</a></li>
<li><a href="jms-concepts005.htm#BNCGS"><span class="secnum">45.5.5</span> Managing JTA Transactions</a></li>
</ul>
</li>
<li><a href="jms-concepts006.htm#BNCGU"><span class="secnum">45.6</span> Further Information about JMS</a></li>
</ul>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jms-concepts001.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jms-concepts003.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="BNCDX" name="BNCDX"></a><a id="JEETT00549" name="JEETT00549"></a>
<div class="sect1">
<h1 class="sect1"><span class="secnum">45.2</span> <a id="sthref2201" name="sthref2201"></a>Basic JMS API Concepts</h1>
<p>This section introduces the most basic JMS API concepts, the ones you must know to get started writing simple application clients that use the JMS API.</p>
<p>The next section introduces the JMS API programming model. Later sections cover more advanced concepts, including the ones you need in order to write applications that use message-driven beans.</p>
<a id="BNCDY" name="BNCDY"></a><a id="JEETT01273" name="JEETT01273"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">45.2.1</span> <a id="sthref2202" name="sthref2202"></a>JMS API Architecture</h2>
<p>A JMS application is composed of the following parts.</p>
<ul>
<li>
<p><a id="sthref2203" name="sthref2203"></a>A <span class="glossaryterm">JMS provider</span> is a messaging system that implements the JMS interfaces and provides administrative and control features. An implementation of the Java EE platform that supports the full profile includes a JMS provider.</p>
</li>
<li>
<p><span class="glossaryterm">JMS clients</span> are the programs or components, written in the Java programming language, that produce and consume messages. Any Java EE application component can act as a JMS client.</p>
<p>Java SE applications can also act as JMS clients; the <span class="italic">Message Queue Developer's Guide for Java Clients</span> in the GlassFish Server documentation (<code><a href="https://glassfish.java.net/docs/">https://glassfish.java.net/docs/</a></code>) explains how to make this work.</p>
</li>
<li>
<p><a id="sthref2204" name="sthref2204"></a><span class="glossaryterm">Messages</span> are the objects that communicate information between JMS clients.</p>
</li>
<li>
<p><a id="sthref2205" name="sthref2205"></a><span class="glossaryterm">Administered objects</span> are JMS objects configured for the use of clients. The two kinds of JMS administered objects are destinations and connection factories, described in <a href="jms-concepts003.htm#BNCEJ">JMS Administered Objects</a>. An administrator can create objects that are available to all applications that use a particular installation of GlassFish Server; alternatively, a developer can use annotations to create objects that are specific to a particular application.</p>
</li>
</ul>
<p><a href="#BNCDZ">Figure 45-2</a> illustrates the way these parts interact. Administrative tools or annotations allow you to bind destinations and connection factories into a JNDI namespace. A JMS client can then use resource injection to access the administered objects in the namespace and then establish a logical connection to the same objects through the JMS provider.</p>
<div class="figure"><a id="BNCDZ" name="BNCDZ"></a><a id="JEETT00047" name="JEETT00047"></a>
<p class="titleinfigure">Figure 45-2 JMS API Architecture</p>
<img src="img/jeett_dt_027.png" alt="Description of Figure 45-2 follows" title="Description of Figure 45-2 follows" longdesc="img_text/jeett_dt_027.htm" /><br />
<a id="sthref2206" name="sthref2206" href="img_text/jeett_dt_027.htm">Description of "Figure 45-2 JMS API Architecture"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect2" -->
<a id="BNCEA" name="BNCEA"></a><a id="JEETT01274" name="JEETT01274"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">45.2.2</span> <a id="sthref2207" name="sthref2207"></a><a id="sthref2208" name="sthref2208"></a>Messaging Styles</h2>
<p>Before the JMS API existed, most messaging products supported either the point-to-point or the publish/subscribe style of messaging. The JMS specification defines compliance for each style. A JMS provider must implement both styles, and the JMS API provides interfaces that are specific to each. The following subsections describe these messaging styles.</p>
<p>The JMS API, however, makes it unnecessary to use only one of the two styles. It allows you to use the same code to send and receive messages using either the PTP or the pub/sub style. The destinations you use remain specific to one style, and the behavior of the application will depend in part on whether you are using a queue or a topic. However, the code itself can be common to both styles, making your applications flexible and reusable. This tutorial describes and illustrates this coding approach, using the greatly simplified API provided by JMS 2.0.</p>
<a id="BNCEB" name="BNCEB"></a><a id="JEETT00803" name="JEETT00803"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">45.2.2.1</span> <a id="sthref2209" name="sthref2209"></a><a id="sthref2210" name="sthref2210"></a>Point-to-Point Messaging Style</h3>
<p>A <span class="glossaryterm">point-to-point</span> (PTP) product or application is built on the concept of message <span class="glossaryterm">queues</span>, senders, and receivers. Each message is addressed to a specific queue, and receiving clients extract messages from the queues established to hold their messages. Queues retain all messages sent to them until the messages are consumed or expire.</p>
<p>PTP messaging, illustrated in <a href="#BNCEC">Figure 45-3</a>, has the following characteristics.</p>
<ul>
<li>
<p>Each message has only one consumer.</p>
</li>
<li>
<p>The receiver can fetch the message whether or not it was running when the client sent the message.</p>
</li>
</ul>
<div class="figure"><a id="BNCEC" name="BNCEC"></a><a id="JEETT00048" name="JEETT00048"></a>
<p class="titleinfigure">Figure 45-3 Point-to-Point Messaging</p>
<img src="img/jeett_dt_028.png" alt="Description of Figure 45-3 follows" title="Description of Figure 45-3 follows" longdesc="img_text/jeett_dt_028.htm" /><br />
<a id="sthref2211" name="sthref2211" href="img_text/jeett_dt_028.htm">Description of "Figure 45-3 Point-to-Point Messaging"</a><br />
<br /></div>
<!-- class="figure" -->
<p>Use PTP messaging when every message you send must be processed successfully by one consumer.</p>
</div>
<!-- class="sect3" -->
<a id="BNCED" name="BNCED"></a><a id="JEETT00804" name="JEETT00804"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">45.2.2.2</span> <a id="sthref2212" name="sthref2212"></a><a id="sthref2213" name="sthref2213"></a>Publish/Subscribe Messaging Style</h3>
<p>In a <span class="glossaryterm">publish/subscribe</span> (pub/sub) product or application, clients address messages to a <span class="glossaryterm">topic</span>, which functions somewhat like a bulletin board. Publishers and subscribers can dynamically publish or subscribe to the topic. The system takes care of distributing the messages arriving from a topic's multiple publishers to its multiple subscribers. Topics retain messages only as long as it takes to distribute them to subscribers.</p>
<p>With pub/sub messaging, it is important to distinguish between the consumer that subscribes to a topic (the subscriber) and the subscription that is created. The consumer is a JMS object within an application, while the subscription is an entity within the JMS provider. Normally, a topic can have many consumers, but a subscription has only one subscriber. It is possible, however, to create shared subscriptions; see <a href="jms-concepts003.htm#BABJCIGJ">Creating Shared Subscriptions</a> for details. See <a href="jms-concepts003.htm#BABEEJJJ">Consuming Messages from Topics</a> for details on the semantics of pub/sub messaging.</p>
<p>Pub/sub messaging has the following characteristics.</p>
<ul>
<li>
<p>Each message can have multiple consumers.</p>
</li>
<li>
<p>A client that subscribes to a topic can consume only messages sent <span class="italic">after</span> the client has created a subscription, and the consumer must continue to be active in order for it to consume messages.</p>
<p>The JMS API relaxes this requirement to some extent by allowing applications to create <span class="glossaryterm">durable subscriptions</span>, which receive messages sent while the consumers are not active. Durable subscriptions provide the flexibility and reliability of queues but still allow clients to send messages to many recipients. For more information about durable subscriptions, see <a href="jms-concepts003.htm#BNCGD">Creating Durable Subscriptions</a>.</p>
</li>
</ul>
<p>Use pub/sub messaging when each message can be processed by any number of consumers (or none). <a href="#BNCEE">Figure 45-4</a> illustrates pub/sub messaging.</p>
<div class="figure"><a id="BNCEE" name="BNCEE"></a><a id="JEETT00049" name="JEETT00049"></a>
<p class="titleinfigure">Figure 45-4 Publish/Subscribe Messaging</p>
<img src="img/jeett_dt_029.png" alt="Description of Figure 45-4 follows" title="Description of Figure 45-4 follows" longdesc="img_text/jeett_dt_029.htm" /><br />
<a id="sthref2214" name="sthref2214" href="img_text/jeett_dt_029.htm">Description of "Figure 45-4 Publish/Subscribe Messaging"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BNCEG" name="BNCEG"></a><a id="JEETT01275" name="JEETT01275"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">45.2.3</span> <a id="sthref2215" name="sthref2215"></a>Message Consumption</h2>
<p>Messaging products are inherently asynchronous: There is no fundamental timing dependency between the production and the consumption of a message. However, the JMS specification uses this term in a more precise sense. Messages can be consumed in either of two ways.</p>
<ul>
<li>
<p><a id="sthref2216" name="sthref2216"></a><a id="sthref2217" name="sthref2217"></a><span class="bold">Synchronously</span>: A consumer explicitly fetches the message from the destination by calling the <code>receive</code> method. The <code>receive</code> method can block until a message arrives or can time out if a message does not arrive within a specified time limit.</p>
</li>
<li>
<p><a id="sthref2218" name="sthref2218"></a><a id="sthref2219" name="sthref2219"></a><span class="bold">Asynchronously</span>: An application client or a Java SE client can register a <span class="glossaryterm">message listener</span> with a consumer. A message listener is similar to an event listener. Whenever a message arrives at the destination, the JMS provider delivers the message by calling the listener's <code>onMessage</code> method, which acts on the contents of the message. In a Java EE application, a message-driven bean serves as a message listener (it too has an <code>onMessage</code> method), but a client does not need to register it with a consumer.</p>
</li>
</ul>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jms-concepts001.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jms-concepts003.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

