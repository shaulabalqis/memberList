<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:4Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Examples: Securing Enterprise Beans" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:Examples: Securing Enterprise Beans | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<ul style="list-style-type:none">
<li><a href="security-javaee001.htm#CACGIFHJ"><span class="secnum">49.1</span> Basic Security Tasks for Enterprise Applications</a></li>
<li><a href="security-javaee002.htm#BNBYL"><span class="secnum">49.2</span> Securing Enterprise Beans</a>
<ul style="list-style-type:none">
<li><a href="security-javaee002.htm#GJGDI"><span class="secnum">49.2.1</span> Securing an Enterprise Bean Using Declarative Security</a>
<ul style="list-style-type:none">
<li><a href="security-javaee002.htm#GJGCQ"><span class="secnum">49.2.1.1</span> Specifying Authorized Users by Declaring Security Roles</a></li>
<li><a href="security-javaee002.htm#BNBYU"><span class="secnum">49.2.1.2</span> Specifying an Authentication Mechanism and Secure Connection</a></li>
</ul>
</li>
<li><a href="security-javaee002.htm#GJGCS"><span class="secnum">49.2.2</span> Securing an Enterprise Bean Programmatically</a>
<ul style="list-style-type:none">
<li><a href="security-javaee002.htm#GJGCR"><span class="secnum">49.2.2.1</span> Accessing an Enterprise Bean Caller's Security Context</a></li>
</ul>
</li>
<li><a href="security-javaee002.htm#BNBYR"><span class="secnum">49.2.3</span> Propagating a Security Identity (Run-As)</a>
<ul style="list-style-type:none">
<li><a href="security-javaee002.htm#BNBZB"><span class="secnum">49.2.3.1</span> Configuring a Component's Propagated Security Identity</a></li>
<li><a href="security-javaee002.htm#BNBZC"><span class="secnum">49.2.3.2</span> Trust between Containers</a></li>
</ul>
</li>
<li><a href="security-javaee002.htm#BNBZG"><span class="secnum">49.2.4</span> Deploying Secure Enterprise Beans</a></li>
</ul>
</li>
<li><div id="backgroundColor"><a href="security-javaee003.htm#GKBSZ"><span class="secnum">49.3</span> Examples: Securing Enterprise Beans</a><ul style="list-style-type:none">
<li><a href="security-javaee003.htm#BNBZK"><span class="secnum">49.3.1</span> The cart-secure Example: Securing an Enterprise Bean with Declarative Security</a>
<ul style="list-style-type:none">
<li><a href="security-javaee003.htm#BNBZL"><span class="secnum">49.3.1.1</span> Annotating the Bean</a></li>
<li><a href="security-javaee003.htm#BNBZN"><span class="secnum">49.3.1.2</span> To Run the cart-secure Example Using NetBeans IDE</a></li>
<li><a href="security-javaee003.htm#BNBZO"><span class="secnum">49.3.1.3</span> To Run the cart-secure Example Using Maven</a></li>
</ul>
</li>
<li><a href="security-javaee003.htm#BNCAA"><span class="secnum">49.3.2</span> The converter-secure Example: Securing an Enterprise Bean with Programmatic Security</a>
<ul style="list-style-type:none">
<li><a href="security-javaee003.htm#BNCAB"><span class="secnum">49.3.2.1</span> Modifying ConverterBean</a></li>
<li><a href="security-javaee003.htm#GKBSI"><span class="secnum">49.3.2.2</span> Modifying ConverterServlet</a></li>
<li><a href="security-javaee003.htm#BNCAD"><span class="secnum">49.3.2.3</span> To Run the converter-secure Example Using NetBeans IDE</a></li>
<li><a href="security-javaee003.htm#BNCAE"><span class="secnum">49.3.2.4</span> To Run the converter-secure Example Using Maven</a></li>
<li><a href="security-javaee003.htm#GJTDP"><span class="secnum">49.3.2.5</span> To Run the converter-secure Example</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="security-javaee002.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="security-advanced.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="GKBSZ" name="GKBSZ"></a><a id="JEETT00521" name="JEETT00521"></a>
<div class="sect1">
<h1 class="sect1"><span class="secnum">49.3</span> Examples: Securing Enterprise Beans</h1>
<p>The following examples show how to secure enterprise beans using declarative and programmatic security.</p>
<a id="BNBZK" name="BNBZK"></a><a id="JEETT01239" name="JEETT01239"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">49.3.1</span> <a id="sthref2721" name="sthref2721"></a><a id="sthref2722" name="sthref2722"></a><a id="sthref2723" name="sthref2723"></a>The cart-secure Example: Securing an Enterprise Bean with Declarative Security</h2>
<p>This section discusses how to configure an enterprise bean for basic user name/password authentication. When a bean that is constrained in this way is requested, the server requests a user name and password from the client and verifies that the user name and password are valid by comparing them against a database of authorized users in GlassFish Server.</p>
<p>If the topic of authentication is new to you, see <a href="security-webtier002.htm#GKBSA">Specifying Authentication Mechanisms</a>.</p>
<p>This example demonstrates security by starting with the unsecured enterprise bean application, <code>cart</code>, which is found in the <span class="variable">tut-install</span><code>/examples/ejb/cart/</code> directory and is discussed in <a href="ejb-basicexamples001.htm#BNBOD">The cart Example</a>.</p>
<p>In general, the following steps are necessary to add user name/password authentication to an existing application that contains an enterprise bean. In the example application included with this tutorial, these steps have been completed for you and are listed here simply to show what needs to be done should you wish to create a similar application.</p>
<ol>
<li>
<p>Create an application like the one in <a href="ejb-basicexamples001.htm#BNBOD">The cart Example</a>. The example in this tutorial starts with this example and demonstrates adding basic authentication of the client to this application. The example application discussed in this section can be found at <span class="variable">tut-install</span><code>/examples/security/cart-secure/</code>.</p>
</li>
<li>
<p>If you have not already done so, complete the steps in <a href="security-webtier004.htm#GJJLK">To Set Up Your System for Running the Security Examples</a> to configure your system for running the tutorial applications.</p>
</li>
<li>
<p>Modify the source code for the enterprise bean, <code>CartBean.java</code>, to specify which roles are authorized to access which protected methods. This step is discussed in <a href="#BNBZL">Annotating the Bean</a>.</p>
</li>
<li>
<p>Build, package, and deploy the enterprise bean; then build and run the client application by following the steps in <a href="#BNBZN">To Run the cart-secure Example Using NetBeans IDE</a> or <a href="#BNBZO">To Run the cart-secure Example Using Maven</a>.</p>
</li>
</ol>
<a id="BNBZL" name="BNBZL"></a><a id="JEETT00788" name="JEETT00788"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">49.3.1.1</span> <a id="sthref2724" name="sthref2724"></a><a id="sthref2725" name="sthref2725"></a>Annotating the Bean</h3>
<p>The source code for the original <code>cart</code> application was modified as shown in the following code snippet (modifications in <span class="bold">bold</span>). The resulting file can be found in the file <span class="variable">tut-install</span><code>/examples/security/cart-secure/cart-secure-ejb/src/main/java/javaeetutorial/cart/ejb/CartBean.java</code>.</p>
<p>The code snippet is as follows:</p>
<pre xml:space="preserve" class="oac_no_warn">
package javaeetutorial.cartsecure.ejb;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javaeetutorial.cart.util.BookException;
import javaeetutorial.cart.util.IdVerifier;
import javax.ejb.Remove;
import javax.ejb.Stateful;
<span class="bold">import javax.annotation.security.DeclareRoles;</span>
<span class="bold">import javax.annotation.security.RolesAllowed;</span>

@Stateful
<span class="bold">@DeclareRoles("TutorialUser")</span>
public class CartBean implements Cart, Serializable {
    List&lt;String&gt; contents;
    String customerId;
    String customerName;

    @Override
    public void initialize(String person) throws BookException {
        if (person == null) {
            throw new BookException("Null person not allowed.");
        } else {
            customerName = person;
        }

        customerId = "0";
        contents = new ArrayList&lt;&gt;();
    }

    @Override
    public void initialize(String person, String id) throws BookException {
        if (person == null) {
            throw new BookException("Null person not allowed.");
        } else {
            customerName = person;
        }

        IdVerifier idChecker = new IdVerifier();

        if (idChecker.validate(id)) {
            customerId = id;
        } else {
            throw new BookException("Invalid id: " + id);
        }

        contents = new ArrayList&lt;&gt;();
    }

    @Override
    <span class="bold">@RolesAllowed("TutorialUser")</span>
    public void addBook(String title) {
        contents.add(title);
    }

    @Override
    <span class="bold">@RolesAllowed("TutorialUser")</span>
    public void removeBook(String title) throws BookException {
        boolean result = contents.remove(title);

        if (result == false) {
            throw new BookException("\"" + title + "\" not in cart.");
        }
    }

    @Override
    <span class="bold">@RolesAllowed("TutorialUser")</span>
    public List&lt;String&gt; getContents() {
        return contents;
    }

    @Override
    @Remove()
    <span class="bold">@RolesAllowed("TutorialUser")</span>
    public void remove() {
        contents = null;
    }
}
</pre>
<p>The <code>@RolesAllowed</code> annotation is specified on methods for which you want to restrict access. In this example, only users in the role of <code>TutorialUser</code> will be allowed to add and remove books from the cart and to list the contents of the cart. A <code>@RolesAllowed</code> annotation implicitly declares a role that will be referenced in the application; therefore, no <code>@DeclareRoles</code> annotation is required. The presence of the <code>@RolesAllowed</code> annotation also implicitly declares that authentication will be required for a user to access these methods. If no authentication method is specified in the deployment descriptor, the type of authentication will be user name/password authentication.</p>
</div>
<!-- class="sect3" -->
<a id="BNBZN" name="BNBZN"></a><a id="JEETT00249" name="JEETT00249"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">49.3.1.2</span> To Run the cart-secure Example Using NetBeans IDE</h3>
<ol>
<li>
<p>Follow the steps in <a href="security-webtier004.htm#GJJLK">To Set Up Your System for Running the Security Examples</a>.</p>
</li>
<li>
<p>From the <span class="gui-object-action">File</span> menu, choose <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-title">Open Project</span> dialog box, navigate to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/security
</pre></li>
<li>
<p>Select the <code>cart-secure</code> folder.</p>
</li>
<li>
<p>Select the <span class="gui-object-action">Open Required Projects</span> check box.</p>
</li>
<li>
<p>Click <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-action">Projects</span> tab, right-click the <code>cart-secure</code> project and select <span class="gui-object-action">Build</span>.</p>
<p>This step builds and packages the application into <code>cart-secure.ear</code>, located in the <code>cart-secure-ear/target/</code> directory, and deploys this EAR file to your GlassFish Server instance, retrieves the client stubs, and runs the client.</p>
</li>
<li>
<p>In the <span class="gui-object-action">Login for user:</span> dialog box, enter the user name and password of a <code>file</code> realm user created in GlassFish Server and assigned to the group <code>TutorialUser</code>; then click <span class="gui-object-action">OK</span>.</p>
<p>If the user name and password you enter are authenticated, the output of the application client appears in the <span class="gui-object-action">Output</span> tab:</p>
<pre xml:space="preserve" class="oac_no_warn">
...
Retrieving book title from cart: Infinite Jest
Retrieving book title from cart: Bel Canto
Retrieving book title from cart: Kafka on the Shore
Removing "Gravity's Rainbow" from cart.
Caught a BookException: "Gravity's Rainbow" not in cart.
Java Result: 1
...
</pre>
<p>If the user name and password are not authenticated, the dialog box reappears until you enter correct values.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BNBZO" name="BNBZO"></a><a id="JEETT00250" name="JEETT00250"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">49.3.1.3</span> To Run the cart-secure Example Using Maven</h3>
<ol>
<li>
<p>Follow the steps in <a href="security-webtier004.htm#GJJLK">To Set Up Your System for Running the Security Examples</a>.</p>
</li>
<li>
<p>In a terminal window, go to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/security/cart-secure/
</pre></li>
<li>
<p>To build the application, package it into an EAR file in the <code>cart-secure-ear/target</code> subdirectory, deploy it, and run it, enter the following command at the terminal window or command prompt:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn install
</pre></li>
<li>
<p>In the <span class="gui-object-action">Login for user:</span> dialog box, enter the user name and password of a <code>file</code> realm user created in GlassFish Server and assigned to the group <code>TutorialUser</code>; then click <span class="gui-object-action">OK</span>.</p>
<p>If the user name and password you enter are authenticated, the output of the application client appears in the <span class="gui-object-action">Output</span> tab:</p>
<pre xml:space="preserve" class="oac_no_warn">
...
Retrieving book title from cart: Infinite Jest
Retrieving book title from cart: Bel Canto
Retrieving book title from cart: Kafka on the Shore
Removing "Gravity's Rainbow" from cart.
Caught a BookException: "Gravity's Rainbow" not in cart.
Java Result: 1
...
</pre>
<p>If the user name and password are not authenticated, the dialog box reappears until you enter correct values.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" -->
<a id="BNCAA" name="BNCAA"></a><a id="JEETT01240" name="JEETT01240"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">49.3.2</span> <a id="sthref2726" name="sthref2726"></a><a id="sthref2727" name="sthref2727"></a><a id="sthref2728" name="sthref2728"></a><a id="sthref2729" name="sthref2729"></a><a id="sthref2730" name="sthref2730"></a>The converter-secure Example: Securing an Enterprise Bean with Programmatic Security</h2>
<p>This example demonstrates how to use the <code>getCallerPrincipal</code> and <code>isCallerInRole</code> methods with an enterprise bean. This example starts with a very simple EJB application, <code>converter</code>, and modifies the methods of the <code>ConverterBean</code> so that currency conversion will occur only when the requester is in the role of <code>TutorialUser</code>.</p>
<p>This example can be found in the <span class="variable">tut-install</span><code>/</code><code>examples/security/converter-secure</code> directory. This example is based on the unsecured enterprise bean application, <code>converter</code>, which is discussed in <a href="ejb-gettingstarted.htm#GIJRE">Chapter 33, "Getting Started with Enterprise Beans"</a> and is found in the <span class="variable">tut-install</span><code>/examples/ejb/converter/</code> directory. This section builds on the example by adding the necessary elements to secure the application by using the <code>getCallerPrincipal</code> and <code>isCallerInRole</code> methods, which are discussed in more detail in <a href="security-javaee002.htm#GJGCR">Accessing an Enterprise Bean Caller's Security Context</a>.</p>
<p>In general, the following steps are necessary when using the <code>getCallerPrincipal</code> and <code>isCallerInRole</code> methods with an enterprise bean. In the example application included with this tutorial, many of these steps have been completed for you and are listed here simply to show what needs to be done should you wish to create a similar application.</p>
<ol>
<li>
<p>Create a simple enterprise bean application.</p>
</li>
<li>
<p>Set up a user on GlassFish Server in the <code>file</code> realm, in the group <code>TutorialUser</code>, and set up default principal to role mapping. To do this, follow the steps in <a href="security-webtier004.htm#GJJLK">To Set Up Your System for Running the Security Examples</a>.</p>
</li>
<li>
<p>Modify the bean to add the <code>getCallerPrincipal</code> and <code>isCallerInRole</code> methods.</p>
</li>
<li>
<p>If the application contains a web client that is a servlet, specify security for the servlet, as described in <a href="security-webtier004.htm#GJRMH">Specifying Security for Basic Authentication Using Annotations</a>.</p>
</li>
<li>
<p>Build, package, deploy, and run the application.</p>
</li>
</ol>
<a id="BNCAB" name="BNCAB"></a><a id="JEETT00789" name="JEETT00789"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">49.3.2.1</span> Modifying ConverterBean</h3>
<p>The source code for the original <code>ConverterBean</code> class was modified to add the <code>if..else</code> clause that tests whether the caller is in the role of <code>TutorialUser</code>. If the user is in the correct role, the currency conversion is computed and displayed. If the user is not in the correct role, the computation is not performed, and the application displays the result as <code>0</code>. The code example can be found in <span class="variable">tut-install</span><code>/examples/security/converter-secure/converter-secure-ejb/src/main/java/javaeetutorial/converter/ejb/ConverterBean.java</code>.</p>
<p>The code snippet (with modifications shown in <span class="bold">bold</span>) is as follows:</p>
<pre xml:space="preserve" class="oac_no_warn">
package javaeetutorial.convertersecure.ejb;

import java.math.BigDecimal;
<span class="bold">import java.security.Principal;</span>
import javax.ejb.Stateless;
<span class="bold">import javax.annotation.Resource;</span>
<span class="bold">import javax.ejb.SessionContext;</span>
<span class="bold">import javax.annotation.security.DeclareRoles;</span>
<span class="bold">import javax.annotation.security.RolesAllowed;</span>

@Stateless()
<span class="bold">@DeclareRoles("TutorialUser")</span>
public class ConverterBean{

    <span class="bold">@Resource SessionContext ctx;</span>
    private final BigDecimal yenRate = new BigDecimal("104.34");
    private final BigDecimal euroRate = new BigDecimal("0.007");

    <span class="bold">@RolesAllowed("TutorialUser")</span>
     public BigDecimal dollarToYen(BigDecimal dollars) {
        <span class="bold">BigDecimal result = new BigDecimal("0.0");</span>
        <span class="bold">Principal callerPrincipal = ctx.getCallerPrincipal(); </span>
        <span class="bold">if (ctx.isCallerInRole("TutorialUser")) {</span>
            result = dollars.multiply(yenRate);
            return result.setScale(2, BigDecimal.ROUND_UP);
        <span class="bold">} else {</span>
            <span class="bold">return result.setScale(2, BigDecimal.ROUND_UP); </span>
        <span class="bold">}</span>
    }

    <span class="bold">@RolesAllowed("TutorialUser")</span>
    public BigDecimal yenToEuro(BigDecimal yen) {
        <span class="bold">BigDecimal result = new BigDecimal("0.0");</span>
        <span class="bold">Principal callerPrincipal = ctx.getCallerPrincipal(); </span>
        <span class="bold">if (ctx.isCallerInRole("TutorialUser")) {</span>
             result = yen.multiply(euroRate);
             return result.setScale(2, BigDecimal.ROUND_UP);
        <span class="bold">} else {</span>
             <span class="bold">return result.setScale(2, BigDecimal.ROUND_UP); </span>
        <span class="bold">}</span>
    }
}
</pre></div>
<!-- class="sect3" -->
<a id="GKBSI" name="GKBSI"></a><a id="JEETT00790" name="JEETT00790"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">49.3.2.2</span> Modifying ConverterServlet</h3>
<p>The following annotations specify security for the <code>converter</code> web client, <code>ConverterServlet</code>:</p>
<pre xml:space="preserve" class="oac_no_warn">
@WebServlet(urlPatterns = {"/"})
@ServletSecurity(
@HttpConstraint(transportGuarantee = TransportGuarantee.CONFIDENTIAL,
    rolesAllowed = {"TutorialUser"}))
</pre></div>
<!-- class="sect3" -->
<a id="BNCAD" name="BNCAD"></a><a id="JEETT00251" name="JEETT00251"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">49.3.2.3</span> To Run the converter-secure Example Using NetBeans IDE</h3>
<ol>
<li>
<p>Follow the steps in <a href="security-webtier004.htm#GJJLK">To Set Up Your System for Running the Security Examples</a>.</p>
</li>
<li>
<p>From the <span class="gui-object-action">File</span> menu, choose <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-title">Open Project</span> dialog box, navigate to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/security
</pre></li>
<li>
<p>Select the <code>converter-secure</code> folder.</p>
</li>
<li>
<p>Click <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>Right-click the <code>converter-secure</code> project and select <span class="gui-object-action">Build</span>.</p>
<p>This command builds and deploys the example application to your GlassFish Server instance.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="BNCAE" name="BNCAE"></a><a id="JEETT00252" name="JEETT00252"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">49.3.2.4</span> To Run the converter-secure Example Using Maven</h3>
<ol>
<li>
<p>Follow the steps in <a href="security-webtier004.htm#GJJLK">To Set Up Your System for Running the Security Examples</a>.</p>
</li>
<li>
<p>In a terminal window, go to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/security/converter-secure/
</pre></li>
<li>
<p>Enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn install
</pre>
<p>This command builds and packages the application into a WAR file, <code>converter-secure.war</code>, that is located in the <code>target</code> directory, and deploys the WAR file.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<a id="GJTDP" name="GJTDP"></a><a id="JEETT00253" name="JEETT00253"></a>
<div class="sect3">
<h3 class="sect3"><span class="secnum">49.3.2.5</span> To Run the converter-secure Example</h3>
<ol>
<li>
<p>Open a web browser to the following URL:</p>
<pre xml:space="preserve" class="oac_no_warn">
http://localhost:8080/converter-secure
</pre>
<p>An <span class="gui-object-title">Authentication Required</span> dialog box appears.</p>
</li>
<li>
<p>Enter a user name and password combination that corresponds to a user who has already been created in the <code>file</code> realm of GlassFish Server and has been assigned to the group <code>TutorialUser</code>; then click <span class="gui-object-action">OK</span>.</p>
</li>
<li>
<p>Enter <code>100</code> in the input field and click <span class="gui-object-action">Submit</span>.</p>
<p>A second page appears, showing the converted values.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="security-javaee002.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="security-advanced.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

