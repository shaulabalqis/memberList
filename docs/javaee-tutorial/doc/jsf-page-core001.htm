<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:0Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="Using the Standard Converters" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:Using the Standard Converters | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<ul style="list-style-type:none">
<li><div id="backgroundColor"><a href="jsf-page-core001.htm#BNAST"><span class="secnum">11.1</span> Using the Standard Converters</a><ul style="list-style-type:none">
<li><a href="jsf-page-core001.htm#BNASU"><span class="secnum">11.1.1</span> Converting a Component's Value</a></li>
<li><a href="jsf-page-core001.htm#BNASV"><span class="secnum">11.1.2</span> Using DateTimeConverter</a></li>
<li><a href="jsf-page-core001.htm#BNASX"><span class="secnum">11.1.3</span> Using NumberConverter</a></li>
</ul>
</div></li>
<li><a href="jsf-page-core002.htm#BNASZ"><span class="secnum">11.2</span> Registering Listeners on Components</a>
<ul style="list-style-type:none">
<li><a href="jsf-page-core002.htm#BNATA"><span class="secnum">11.2.1</span> Registering a Value-Change Listener on a Component</a></li>
<li><a href="jsf-page-core002.htm#BNATB"><span class="secnum">11.2.2</span> Registering an Action Listener on a Component</a></li>
</ul>
</li>
<li><a href="jsf-page-core003.htm#BNATC"><span class="secnum">11.3</span> Using the Standard Validators</a>
<ul style="list-style-type:none">
<li><a href="jsf-page-core003.htm#BNATE"><span class="secnum">11.3.1</span> Validating a Component's Value</a></li>
<li><a href="jsf-page-core003.htm#BNATF"><span class="secnum">11.3.2</span> Using Validator Tags</a></li>
</ul>
</li>
<li><a href="jsf-page-core004.htm#BNATN"><span class="secnum">11.4</span> Referencing a Managed Bean Method</a>
<ul style="list-style-type:none">
<li><a href="jsf-page-core004.htm#BNATP"><span class="secnum">11.4.1</span> Referencing a Method That Performs Navigation</a></li>
<li><a href="jsf-page-core004.htm#BNATQ"><span class="secnum">11.4.2</span> Referencing a Method That Handles an Action Event</a></li>
<li><a href="jsf-page-core004.htm#BNATR"><span class="secnum">11.4.3</span> Referencing a Method That Performs Validation</a></li>
<li><a href="jsf-page-core004.htm#BNATS"><span class="secnum">11.4.4</span> Referencing a Method That Handles a Value-Change Event</a></li>
</ul>
</li>
</ul>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jsf-page-core.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jsf-page-core002.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="BNAST" name="BNAST"></a><a id="JEETT00350" name="JEETT00350"></a>
<div class="sect1">
<h1 class="sect1"><span class="secnum">11.1</span> <a id="sthref618" name="sthref618"></a><a id="sthref619" name="sthref619"></a>Using the Standard Converters</h1>
<p><a id="sthref620" name="sthref620"></a>The JavaServer Faces implementation provides a set of <code>Converter</code> implementations that you can use to convert component data. The purpose of conversion is to take the String-based data coming in from the Servlet API and convert it to strongly typed Java objects suitable for the business domain. For more information on the conceptual details of the conversion model, see <a href="jsf-intro004.htm#BNAQI">Conversion Model</a>.</p>
<p>The standard <code>Converter</code> implementations are located in the <code>javax.faces.convert</code> package. Normally, converters are implicitly assigned based on the type of the EL expression pointed to by the value of the component. However, these converters can also be accessed by a converter ID. <a href="#CHDIHIIC">Table 11-1</a> shows the converter classes and their associated converter IDs.</p>
<div class="tblhruleformal"><a id="sthref621" name="sthref621"></a><a id="CHDIHIIC" name="CHDIHIIC"></a>
<p class="titleintable">Table 11-1 Converter Classes and Converter IDs</p>
<table class="HRuleFormal" title="Converter Classes and Converter IDs" summary="This table shows the standard Converter classes and their associated converter IDs." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="48%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t2">Class in the javax.faces.convert Package</th>
<th align="left" valign="bottom" id="r1c2-t2">Converter ID</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t2" headers="r1c1-t2">
<p><a id="sthref622" name="sthref622"></a><code>BigDecimalConverter</code></p>
</td>
<td align="left" headers="r2c1-t2 r1c2-t2">
<p><code>javax.faces.BigDecimal</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t2" headers="r1c1-t2">
<p><a id="sthref623" name="sthref623"></a><code>BigIntegerConverter</code></p>
</td>
<td align="left" headers="r3c1-t2 r1c2-t2">
<p><code>javax.faces.BigInteger</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t2" headers="r1c1-t2">
<p><a id="sthref624" name="sthref624"></a><code>BooleanConverter</code></p>
</td>
<td align="left" headers="r4c1-t2 r1c2-t2">
<p><code>javax.faces.Boolean</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t2" headers="r1c1-t2">
<p><a id="sthref625" name="sthref625"></a><code>ByteConverter</code></p>
</td>
<td align="left" headers="r5c1-t2 r1c2-t2">
<p><code>javax.faces.Byte</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t2" headers="r1c1-t2">
<p><a id="sthref626" name="sthref626"></a><code>CharacterConverter</code></p>
</td>
<td align="left" headers="r6c1-t2 r1c2-t2">
<p><code>javax.faces.Character</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t2" headers="r1c1-t2">
<p><a id="sthref627" name="sthref627"></a><code>DateTimeConverter</code></p>
</td>
<td align="left" headers="r7c1-t2 r1c2-t2">
<p><code>javax.faces.DateTime</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t2" headers="r1c1-t2">
<p><a id="sthref628" name="sthref628"></a><code>DoubleConverter</code></p>
</td>
<td align="left" headers="r8c1-t2 r1c2-t2">
<p><code>javax.faces.Double</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r9c1-t2" headers="r1c1-t2">
<p><a id="sthref629" name="sthref629"></a><code>EnumConverter</code></p>
</td>
<td align="left" headers="r9c1-t2 r1c2-t2">
<p><code>javax.faces.Enum</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r10c1-t2" headers="r1c1-t2">
<p><a id="sthref630" name="sthref630"></a><code>FloatConverter</code></p>
</td>
<td align="left" headers="r10c1-t2 r1c2-t2">
<p><code>javax.faces.Float</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r11c1-t2" headers="r1c1-t2">
<p><a id="sthref631" name="sthref631"></a><code>IntegerConverter</code></p>
</td>
<td align="left" headers="r11c1-t2 r1c2-t2">
<p><code>javax.faces.Integer</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r12c1-t2" headers="r1c1-t2">
<p><a id="sthref632" name="sthref632"></a><code>LongConverter</code></p>
</td>
<td align="left" headers="r12c1-t2 r1c2-t2">
<p><code>javax.faces.Long</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r13c1-t2" headers="r1c1-t2">
<p><a id="sthref633" name="sthref633"></a><code>NumberConverter</code></p>
</td>
<td align="left" headers="r13c1-t2 r1c2-t2">
<p><code>javax.faces.Number</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r14c1-t2" headers="r1c1-t2">
<p><a id="sthref634" name="sthref634"></a><code>ShortConverter</code></p>
</td>
<td align="left" headers="r14c1-t2 r1c2-t2">
<p><code>javax.faces.Short</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<p>A standard error message is associated with each of these converters. If you have registered one of these converters onto a component on your page and the converter is not able to convert the component's value, the converter's error message will display on the page. For example, the following error message appears if <code>BigIntegerConverter</code> fails to convert a value:</p>
<pre xml:space="preserve" class="oac_no_warn">
{0} must be a number consisting of one or more digits
</pre>
<p>In this case, the <code>{0}</code> substitution parameter will be replaced with the name of the input component on which the converter is registered.</p>
<p><a id="sthref635" name="sthref635"></a><a id="sthref636" name="sthref636"></a>Two of the standard converters (<code>DateTimeConverter</code> and <code>NumberConverter</code>) have their own tags, which allow you to configure the format of the component data using the tag attributes. For more information about using <code>DateTimeConverter</code>, see <a href="#BNASV">Using DateTimeConverter</a>. For more information about using <code>NumberConverter</code>, see <a href="#BNASX">Using NumberConverter</a>. The following section explains how to convert a component's value, including how to register other standard converters with a component.</p>
<a id="BNASU" name="BNASU"></a><a id="JEETT00931" name="JEETT00931"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">11.1.1</span> <a id="sthref637" name="sthref637"></a><a id="sthref638" name="sthref638"></a>Converting a Component's Value</h2>
<p>To use a particular converter to convert a component's value, you need to register the converter onto the component. You can register any of the standard converters in one of the following ways.</p>
<ul>
<li>
<p>Nest one of the standard converter tags inside the component's tag. These tags are <code>f:convertDateTime</code> and <code>f:convertNumber</code>, which are described in <a href="#BNASV">Using DateTimeConverter</a> and <a href="#BNASX">Using NumberConverter</a>, respectively.</p>
</li>
<li>
<p><a id="sthref639" name="sthref639"></a>Bind the value of the component to a managed bean property of the same type as the converter. This is the most common technique.</p>
</li>
<li>
<p>Refer to the converter from the component tag's <code>converter</code> attribute, specifying the ID of the converter class.</p>
</li>
<li>
<p><a id="sthref640" name="sthref640"></a><a id="sthref641" name="sthref641"></a>Nest an <code>f:converter</code> tag inside of the component tag, and use either the <code>f:converter</code> tag's <code>converterId</code> attribute or its <code>binding</code> attribute to refer to the converter.</p>
</li>
</ul>
<p>As an example of the second technique, if you want a component's data to be converted to an <code>Integer</code>, you can simply bind the component's value to a managed bean property. Here is an example:</p>
<pre xml:space="preserve" class="oac_no_warn">
Integer age = 0;
public Integer getAge(){ return age;}
public void setAge(Integer age) {this.age = age;}
</pre>
<p><a id="sthref642" name="sthref642"></a><a id="sthref643" name="sthref643"></a><a id="sthref644" name="sthref644"></a>The data from the <code>h:inputText</code> tag in the this example will be converted to a <code>java.lang.Integer</code> value. The <code>Integer</code> type is a supported type of <code>NumberConverter</code>. If you don't need to specify any formatting instructions using the <code>f:convertNumber</code> tag attributes, and if one of the standard converters will suffice, you can simply reference that converter by using the component tag's <code>converter</code> attribute.</p>
<p><a id="sthref645" name="sthref645"></a><a id="sthref646" name="sthref646"></a>You can also nest an <code>f:converter</code> tag within the component tag and use either the converter tag's <code>converterId</code> attribute or its <code>binding</code> attribute to reference the converter.</p>
<p><a id="sthref647" name="sthref647"></a>The <code>converterId</code> attribute must reference the converter's ID. Here is an example that uses one of the converter IDs listed in <a href="#CHDIHIIC">Table 11-1</a>:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;h:inputText value="#{loginBean.age}"&gt;
    &lt;f:converter converterId="javax.faces.Integer" /&gt;
&lt;/h:inputText&gt;
</pre>
<p>Instead of using the <code>converterId</code> attribute, the <code>f:converter</code> tag can use the <code>binding</code> attribute. The <code>binding</code> attribute must resolve to a bean property that accepts and returns an appropriate <code>Converter</code> instance.</p>
<p>You can also create custom converters and register them on components using the <code>f:converter</code> tag. For details, see <a href="jsf-custom010.htm#BNAUS">Creating and Using a Custom Converter</a>.</p>
</div>
<!-- class="sect2" -->
<a id="BNASV" name="BNASV"></a><a id="JEETT00932" name="JEETT00932"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">11.1.2</span> Using DateTimeConverter</h2>
<p><a id="sthref648" name="sthref648"></a><a id="sthref649" name="sthref649"></a><a id="sthref650" name="sthref650"></a>You can convert a component's data to a <code>java.util.Date</code> by nesting the <code>convertDateTime</code> tag inside the component tag. The <code>convertDateTime</code> tag has several attributes that allow you to specify the format and type of the data. <a href="#BNASW">Table 11-2</a> lists the attributes.</p>
<p>Here is a simple example of a <code>convertDateTime</code> tag:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;h:outputText value="#{cashierBean.shipDate}"&gt;
    &lt;f:convertDateTime type="date" dateStyle="full" /&gt;
&lt;/h:outputText&gt;
</pre>
<p>When binding the <code>DateTimeConverter</code> to a component, ensure that the managed bean property to which the component is bound is of type <code>java.util.Date</code>. In the preceding example, <code>cashierBean.shipDate</code> must be of type <code>java.util.Date</code>.</p>
<p>The example tag can display the following output:</p>
<pre xml:space="preserve" class="oac_no_warn">
Saturday, September 21, 2013
</pre>
<p>You can also display the same date and time by using the following tag in which the date format is specified:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;h:outputText value="#{cashierBean.shipDate}"&gt;
    &lt;f:convertDateTime pattern="EEEEEEEE, MMM dd, yyyy" /&gt;
&lt;/h:outputText&gt;
</pre>
<p>If you want to display the example date in Spanish, you can use the <code>locale</code> attribute:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;h:outputText value="#{cashierBean.shipDate}"&gt;
    &lt;f:convertDateTime dateStyle="full"
                       locale="es"
                       timeStyle="long" type="both" /&gt;
&lt;/h:outputText&gt;
</pre>
<p>This tag would display the following output:</p>
<pre xml:space="preserve" class="oac_no_warn">
jueves 24 de octubre de 2013 15:07:04 GMT
</pre>
<p>Refer to the "Customizing Formats" lesson of the <span class="italic">Java Tutorial</span> at <code><a href="http://docs.oracle.com/javase/tutorial/i18n/format/simpleDateFormat.html">http://docs.oracle.com/javase/tutorial/i18n/format/simpleDateFormat.html</a></code> for more information on how to format the output using the <code>pattern</code> attribute of the <code>convertDateTime</code> tag.</p>
<div class="tblhruleformal"><a id="sthref651" name="sthref651"></a><a id="BNASW" name="BNASW"></a>
<p class="titleintable">Table 11-2 <a id="sthref652" name="sthref652"></a><a id="sthref653" name="sthref653"></a>Attributes for the f:convertDateTime Tag</p>
<table class="HRuleFormal" title="Attributes for the f:convertDateTime Tag" summary="This table lists and describes the attributes for the convertDateTime tag, along with their data types." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="13%" />
<col width="23%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t3">Attribute</th>
<th align="left" valign="bottom" id="r1c2-t3">Type</th>
<th align="left" valign="bottom" id="r1c3-t3">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t3" headers="r1c1-t3">
<p><code>binding</code></p>
</td>
<td align="left" headers="r2c1-t3 r1c2-t3">
<p><code>DateTimeConverter</code></p>
</td>
<td align="left" headers="r2c1-t3 r1c3-t3">
<p>Used to bind a converter to a managed bean property.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t3" headers="r1c1-t3">
<p><code>dateStyle</code></p>
</td>
<td align="left" headers="r3c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td align="left" headers="r3c1-t3 r1c3-t3">
<p>Defines the format, as specified by <code>java.text.DateFormat</code>, of a date or the date part of a <code>date</code> string. Applied only if <code>type</code> is <code>date</code> or <code>both</code> and if <code>pattern</code> is not defined. Valid values: <code>default</code>, <code>short</code>, <code>medium</code>, <code>long</code>, and <code>full</code>. If no value is specified, <code>default</code> is used.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t3" headers="r1c1-t3">
<p><code>for</code></p>
</td>
<td align="left" headers="r4c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td align="left" headers="r4c1-t3 r1c3-t3">
<p>Used with composite components. Refers to one of the objects within the composite component inside which this tag is nested.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t3" headers="r1c1-t3">
<p><code>locale</code></p>
</td>
<td align="left" headers="r5c1-t3 r1c2-t3">
<p><code>String</code> or <code>Locale</code></p>
</td>
<td align="left" headers="r5c1-t3 r1c3-t3">
<p><a id="sthref654" name="sthref654"></a><code>Locale</code> whose predefined styles for dates and times are used during formatting or parsing. If not specified, the <code>Locale</code> returned by <code>FacesContext.getLocale</code> will be used.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t3" headers="r1c1-t3">
<p><code>pattern</code></p>
</td>
<td align="left" headers="r6c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td align="left" headers="r6c1-t3 r1c3-t3">
<p>Custom formatting pattern that determines how the date/time string should be formatted and parsed. If this attribute is specified, <code>dateStyle</code>, <code>timeStyle</code>, and <code>type</code> attributes are ignored.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t3" headers="r1c1-t3">
<p><code>timeStyle</code></p>
</td>
<td align="left" headers="r7c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td align="left" headers="r7c1-t3 r1c3-t3">
<p>Defines the format, as specified by <code>java.text.DateFormat</code>, of a <code>time</code> or the time part of a <code>date</code> string. Applied only if <code>type</code> is time and <code>pattern</code> is not defined. Valid values: <code>default</code>, <code>short</code>, <code>medium</code>, <code>long</code>, and <code>full</code>. If no value is specified, <code>default</code> is used.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t3" headers="r1c1-t3">
<p><code>timeZone</code></p>
</td>
<td align="left" headers="r8c1-t3 r1c2-t3">
<p><code>String</code> or <code>TimeZone</code></p>
</td>
<td align="left" headers="r8c1-t3 r1c3-t3">
<p>Time zone in which to interpret any time information in the <code>date</code> string.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r9c1-t3" headers="r1c1-t3">
<p><code>type</code></p>
</td>
<td align="left" headers="r9c1-t3 r1c2-t3">
<p><code>String</code></p>
</td>
<td align="left" headers="r9c1-t3 r1c3-t3">
<p>Specifies whether the string value will contain a date, a time, or both. Valid values are <code>date</code>, <code>time</code>, or <code>both</code>. If no value is specified, <code>date</code> is used.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<a id="BNASX" name="BNASX"></a><a id="JEETT00933" name="JEETT00933"></a>
<div class="sect2">
<h2 class="sect2"><span class="secnum">11.1.3</span> <a id="sthref655" name="sthref655"></a><a id="sthref656" name="sthref656"></a><a id="sthref657" name="sthref657"></a>Using NumberConverter</h2>
<p>You can convert a component's data to a <code>java.lang.Number</code> by nesting the <code>convertNumber</code> tag inside the component tag. The <code>convertNumber</code> tag has several attributes that allow you to specify the format and type of the data. <a href="#BNASY">Table 11-3</a> lists the attributes.</p>
<p>The following example uses a <code>convertNumber</code> tag to display the total prices of the contents of a shopping cart:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;h:outputText value="#{cart.total}"&gt;
    &lt;f:convertNumber currencySymbol="$" type="currency"/&gt;
&lt;/h:outputText&gt;
</pre>
<p>When binding the <code>NumberConverter</code> to a component, ensure that the managed bean property to which the component is bound is of a primitive type or has a type of <code>java.lang.Number</code>. In the preceding example, <code>cart.total</code> is of type <code>double</code>.</p>
<p>Here is an example of a number that this tag can display:</p>
<pre xml:space="preserve" class="oac_no_warn">
$934
</pre>
<p>This result can also be displayed by using the following tag in which the currency pattern is specified:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;h:outputText id="cartTotal" value="#{cart.total}"&gt;
    &lt;f:convertNumber pattern="$####" /&gt;
&lt;/h:outputText&gt;
</pre>
<p>See the "Customizing Formats" lesson of the <span class="italic">Java Tutorial</span> at <code><a href="http://docs.oracle.com/javase/tutorial/i18n/format/decimalFormat.html">http://docs.oracle.com/javase/tutorial/i18n/format/decimalFormat.html</a></code> for more information on how to format the output by using the <code>pattern</code> attribute of the <code>convertNumber</code> tag.</p>
<div class="tblhruleformal"><a id="sthref658" name="sthref658"></a><a id="BNASY" name="BNASY"></a>
<p class="titleintable">Table 11-3 <a id="sthref659" name="sthref659"></a><a id="sthref660" name="sthref660"></a>Attributes for the f:convertNumber Tag</p>
<table class="HRuleFormal" title="Attributes for the f:convertNumber Tag" summary="This table lists and describes the attributes for the convertNumber tag, along with their data types." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="25%" />
<col width="21%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t4">Attribute</th>
<th align="left" valign="bottom" id="r1c2-t4">Type</th>
<th align="left" valign="bottom" id="r1c3-t4">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t4" headers="r1c1-t4">
<p><code>binding</code></p>
</td>
<td align="left" headers="r2c1-t4 r1c2-t4">
<p><code>NumberConverter</code></p>
</td>
<td align="left" headers="r2c1-t4 r1c3-t4">
<p>Used to bind a converter to a managed bean property.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t4" headers="r1c1-t4">
<p><code>currencyCode</code></p>
</td>
<td align="left" headers="r3c1-t4 r1c2-t4">
<p><code>String</code></p>
</td>
<td align="left" headers="r3c1-t4 r1c3-t4">
<p>ISO 4217 currency code, used only when formatting currencies.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t4" headers="r1c1-t4">
<p><code>currencySymbol</code></p>
</td>
<td align="left" headers="r4c1-t4 r1c2-t4">
<p><code>String</code></p>
</td>
<td align="left" headers="r4c1-t4 r1c3-t4">
<p>Currency symbol, applied only when formatting currencies.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t4" headers="r1c1-t4">
<p><code>for</code></p>
</td>
<td align="left" headers="r5c1-t4 r1c2-t4">
<p><code>String</code></p>
</td>
<td align="left" headers="r5c1-t4 r1c3-t4">
<p>Used with composite components. Refers to one of the objects within the composite component inside which this tag is nested.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t4" headers="r1c1-t4">
<p><code>groupingUsed</code></p>
</td>
<td align="left" headers="r6c1-t4 r1c2-t4">
<p><code>Boolean</code></p>
</td>
<td align="left" headers="r6c1-t4 r1c3-t4">
<p>Specifies whether formatted output contains grouping separators.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t4" headers="r1c1-t4">
<p><code>integerOnly</code></p>
</td>
<td align="left" headers="r7c1-t4 r1c2-t4">
<p><code>Boolean</code></p>
</td>
<td align="left" headers="r7c1-t4 r1c3-t4">
<p>Specifies whether only the integer part of the value will be parsed.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t4" headers="r1c1-t4">
<p><code>locale</code></p>
</td>
<td align="left" headers="r8c1-t4 r1c2-t4">
<p><code>String</code> or <code>Locale</code></p>
</td>
<td align="left" headers="r8c1-t4 r1c3-t4">
<p><code>Locale</code> whose number styles are used to format or parse data.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r9c1-t4" headers="r1c1-t4">
<p><code>maxFractionDigits</code></p>
</td>
<td align="left" headers="r9c1-t4 r1c2-t4">
<p><code>int</code></p>
</td>
<td align="left" headers="r9c1-t4 r1c3-t4">
<p>Maximum number of digits formatted in the fractional part of the output.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r10c1-t4" headers="r1c1-t4">
<p><code>maxIntegerDigits</code></p>
</td>
<td align="left" headers="r10c1-t4 r1c2-t4">
<p><code>int</code></p>
</td>
<td align="left" headers="r10c1-t4 r1c3-t4">
<p>Maximum number of digits formatted in the integer part of the output.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r11c1-t4" headers="r1c1-t4">
<p><code>minFractionDigits</code></p>
</td>
<td align="left" headers="r11c1-t4 r1c2-t4">
<p><code>int</code></p>
</td>
<td align="left" headers="r11c1-t4 r1c3-t4">
<p>Minimum number of digits formatted in the fractional part of the output.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r12c1-t4" headers="r1c1-t4">
<p><code>minIntegerDigits</code></p>
</td>
<td align="left" headers="r12c1-t4 r1c2-t4">
<p><code>int</code></p>
</td>
<td align="left" headers="r12c1-t4 r1c3-t4">
<p>Minimum number of digits formatted in the integer part of the output.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r13c1-t4" headers="r1c1-t4">
<p><code>pattern</code></p>
</td>
<td align="left" headers="r13c1-t4 r1c2-t4">
<p><code>String</code></p>
</td>
<td align="left" headers="r13c1-t4 r1c3-t4">
<p>Custom formatting pattern that determines how the number string is formatted and parsed.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r14c1-t4" headers="r1c1-t4">
<p><code>type</code></p>
</td>
<td align="left" headers="r14c1-t4 r1c2-t4">
<p><code>String</code></p>
</td>
<td align="left" headers="r14c1-t4 r1c3-t4">
<p>Specifies whether the string value is parsed and formatted as a <code>number</code>, <code>currency</code>, or <code>percentage</code>. If not specified, <code>number</code> is used.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jsf-page-core.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jsf-page-core002.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

