<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
        <meta http-equiv="Content-Style-Type" content="text/css" />
        <meta http-equiv="Content-Script-Type" content="text/javascript" />

        <!-- Add DARB meta tags here -->

        <meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-09-06T2:45:0Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="HTML5-Friendly Markup" />
<meta name="relnum" content="Release 7" />
<meta name="partnum" content="E39031-01" />
        <meta name="description" content="A guide to developing enterprise applications for the Java Platform, Enterprise Edition 7 (Java EE 7) using GlassFish Server Open Source Edition." />
        <meta name="keywords" content="Get started with Java EE, get started with Java EE 7, tutorials, Java EE getting started, Java EE getting started guide, Java EE, Java EE 7, Java FX, Web, developer, enterprise, Java EE Tutorial, Java EE 7 Tutorial" />

        <!-- Persistent copyright link from DARB output -->
        <link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

        <!-- Links to Java EE output template style sheets -->
        <link href="../css/javaee-darb-position.css" rel="stylesheet" type="text/css" />
        <link href="../css/javaee-darb-fonts.css" rel="stylesheet" type="text/css" />

        <title>The Java EE 7 Tutorial:HTML5-Friendly Markup | Java EE Documentation</title>


    </head>

    <body class="javaee">
        <!-- The following markup is required for accessibility -->
        <noscript>
            JavaScript is not supported by your browser.  JavaScript support is required for full functionality of this page.
        </noscript>


        	<!-- ///////// Container ///////// -->
        	<div id="container">



            <!--///////// Header /////////-->
            <div id="header">
                <div id="headertrail" class="breadcrumb"><a href="http://www.oracle.com/technetwork/java/index.html">Java</a> &gt; <a href="http://www.oracle.com/technetwork/java/javaee/overview/index.html">Java EE </a> &gt; <a href="http://docs.oracle.com/javaee/">Java EE Documentation</a>
                </div>
            </div>   
			<!-- end #header -->
            <!--///////// End Header /////////-->



            <!--///////// Start Side Bar /////////-->
            <div id="sidebar">

                <!-- Sidebar item 1. This <div> is obligatory -->
                <div id="sidebar_version_box" class="type_med_gry">
                    <h1>Release: Java EE 7.0</h1>
                    <p>Last Updated: September, 2014</p>
					 <p><a href="http://docs.oracle.com/javaee/7/tutorial/doc/javaeetutorial7.pdf">Download as PDF</a></p>  
                 </div>
			    <!-- end obligatory sidebar_version_box -->


                <!-- Sidebar item 2 Table of Contents. -->
                <div id="sidebar_toc_box" class="type_med_gry">
                    
                    <div id="toc">

                         <h2 class="tocheader"><a href="preface.htm#GEXAF">Preface</a></h2>
<h2 class="tocheader"><a href="partintro.htm#GFIRP">Part I Introduction</a></h2>
<h2 class="tocheader"><a href="overview.htm#BNAAW"><span class="secnum">1</span> Overview</a></h2>
<h2 class="tocheader"><a href="usingexamples.htm#GFIUD"><span class="secnum">2</span> Using the Tutorial Examples</a></h2>
<h2 class="tocheader"><a href="partplatform.htm#GFIRP2">Part II Platform Basics</a></h2>
<h2 class="tocheader"><a href="resource-creation.htm#GKJIQ2"><span class="secnum">3</span> Resource Creation</a></h2>
<h2 class="tocheader"><a href="injection.htm#GKJIQ3"><span class="secnum">4</span> Injection</a></h2>
<h2 class="tocheader"><a href="packaging.htm#GKJIQ4"><span class="secnum">5</span> Packaging</a></h2>
<h2 class="tocheader"><a href="partwebtier.htm#BNADP">Part III The Web Tier</a></h2>
<h2 class="tocheader"><a href="webapp.htm#BNADR"><span class="secnum">6</span> Getting Started with Web Applications</a></h2>
<h2 class="tocheader"><a href="jsf-intro.htm#BNAPH"><span class="secnum">7</span> JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-facelets.htm#GIEPX"><span class="secnum">8</span> Introduction to Facelets</a></h2>
<ul style="list-style-type:none">
<li><a href="jsf-facelets001.htm#GIJTU"><span class="secnum">8.1</span> What Is Facelets?</a></li>
<li><a href="jsf-facelets002.htm#GIPRR"><span class="secnum">8.2</span> The Lifecycle of a Facelets Application</a></li>
<li><a href="jsf-facelets003.htm#GIPOB"><span class="secnum">8.3</span> Developing a Simple Facelets Application: The guessnumber-jsf Example Application</a>
<ul style="list-style-type:none">
<li><a href="jsf-facelets003.htm#GIQTE"><span class="secnum">8.3.1</span> Creating a Facelets Application</a>
<ul style="list-style-type:none">
<li><a href="jsf-facelets003.htm#GIQQZ"><span class="secnum">8.3.1.1</span> Developing a Managed Bean</a></li>
<li><a href="jsf-facelets003.htm#GJZPV"><span class="secnum">8.3.1.2</span> Creating Facelets Views</a></li>
</ul>
</li>
<li><a href="jsf-facelets003.htm#GJJKC"><span class="secnum">8.3.2</span> Configuring the Application</a></li>
<li><a href="jsf-facelets003.htm#GIRGF"><span class="secnum">8.3.3</span> Running the guessnumber-jsf Facelets Example</a>
<ul style="list-style-type:none">
<li><a href="jsf-facelets003.htm#GJQZL"><span class="secnum">8.3.3.1</span> To Build, Package, and Deploy the guessnumber-jsf Example Using NetBeans IDE</a></li>
<li><a href="jsf-facelets003.htm#GJQYU"><span class="secnum">8.3.3.2</span> To Build, Package, and Deploy the guessnumber-jsf Example Using Maven</a></li>
<li><a href="jsf-facelets003.htm#GJQYX"><span class="secnum">8.3.3.3</span> To Run the guessnumber-jsf Example</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="jsf-facelets004.htm#GIQXP"><span class="secnum">8.4</span> Using Facelets Templates</a></li>
<li><a href="jsf-facelets005.htm#GIQZR"><span class="secnum">8.5</span> Composite Components</a></li>
<li><a href="jsf-facelets006.htm#GIRGM"><span class="secnum">8.6</span> Web Resources</a></li>
<li><a href="jsf-facelets007.htm#BABHGBJI"><span class="secnum">8.7</span> Relocatable Resources</a></li>
<li><a href="jsf-facelets008.htm#BABHAHDF"><span class="secnum">8.8</span> Resource Library Contracts</a>
<ul style="list-style-type:none">
<li><a href="jsf-facelets008.htm#sthref379"><span class="secnum">8.8.1</span> The hello1-rlc Example Application</a>
<ul style="list-style-type:none">
<li><a href="jsf-facelets008.htm#sthref382"><span class="secnum">8.8.1.1</span> Configuring the hello1-rlc Example</a></li>
<li><a href="jsf-facelets008.htm#sthref383"><span class="secnum">8.8.1.2</span> The Facelets Pages for the hello1-rlc Example</a></li>
<li><a href="jsf-facelets008.htm#sthref384"><span class="secnum">8.8.1.3</span> To Build, Package, and Deploy the hello1-rlc Example Using NetBeans IDE</a></li>
<li><a href="jsf-facelets008.htm#sthref385"><span class="secnum">8.8.1.4</span> To Build, Package, and Deploy the hello1-rlc Example Using Maven</a></li>
<li><a href="jsf-facelets008.htm#sthref386"><span class="secnum">8.8.1.5</span> To Run the hello1-rlc Example</a></li>
</ul>
</li>
</ul>
</li>
<li><div id="backgroundColor"><a href="jsf-facelets009.htm#BABGECCJ"><span class="secnum">8.9</span> HTML5-Friendly Markup</a><ul style="list-style-type:none">
<li><a href="jsf-facelets009.htm#sthref389"><span class="secnum">8.9.1</span> Using Pass-Through Elements</a></li>
<li><a href="jsf-facelets009.htm#sthref392"><span class="secnum">8.9.2</span> Using Pass-Through Attributes</a></li>
<li><a href="jsf-facelets009.htm#BABGGIAA"><span class="secnum">8.9.3</span> The reservation Example Application</a>
<ul style="list-style-type:none">
<li><a href="jsf-facelets009.htm#sthref396"><span class="secnum">8.9.3.1</span> The Facelets Pages for the reservation Application</a></li>
<li><a href="jsf-facelets009.htm#sthref397"><span class="secnum">8.9.3.2</span> The Managed Bean for the reservation Application</a></li>
<li><a href="jsf-facelets009.htm#sthref398"><span class="secnum">8.9.3.3</span> To Build, Package, and Deploy the reservation Example Using NetBeans IDE</a></li>
<li><a href="jsf-facelets009.htm#sthref399"><span class="secnum">8.9.3.4</span> To Build, Package, and Deploy the reservation Example Using Maven</a></li>
<li><a href="jsf-facelets009.htm#sthref400"><span class="secnum">8.9.3.5</span> To Run the reservation Example</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 class="tocheader"><a href="jsf-el.htm#GJDDD"><span class="secnum">9</span> Expression Language</a></h2>
<h2 class="tocheader"><a href="jsf-page.htm#BNAQZ"><span class="secnum">10</span> Using JavaServer Faces Technology in Web Pages</a></h2>
<h2 class="tocheader"><a href="jsf-page-core.htm#GJCUT"><span class="secnum">11</span> Using Converters, Listeners, and Validators</a></h2>
<h2 class="tocheader"><a href="jsf-develop.htm#BNATX"><span class="secnum">12</span> Developing with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-ajax.htm#GKIOW"><span class="secnum">13</span> Using Ajax with JavaServer Faces Technology</a></h2>
<h2 class="tocheader"><a href="jsf-advanced-cc.htm#GKHXA"><span class="secnum">14</span> Composite Components: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="jsf-custom.htm#BNAVG"><span class="secnum">15</span> Creating Custom UI Components and Other Custom Objects</a></h2>
<h2 class="tocheader"><a href="jsf-configure.htm#BNAWO"><span class="secnum">16</span> Configuring JavaServer Faces Applications</a></h2>
<h2 class="tocheader"><a href="servlets.htm#BNAFD"><span class="secnum">17</span> Java Servlet Technology</a></h2>
<h2 class="tocheader"><a href="websocket.htm#GKJIQ5"><span class="secnum">18</span> Java API for WebSocket</a></h2>
<h2 class="tocheader"><a href="jsonp.htm#GLRBB"><span class="secnum">19</span> JSON Processing</a></h2>
<h2 class="tocheader"><a href="webi18n.htm#BNAXU"><span class="secnum">20</span> Internationalizing and Localizing Web Applications</a></h2>
<h2 class="tocheader"><a href="partbeanvalidation.htm#sthref1322">Part IV Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation.htm#CHDGJIIA"><span class="secnum">21</span> Introduction to Bean Validation</a></h2>
<h2 class="tocheader"><a href="bean-validation-advanced.htm#GKAHP"><span class="secnum">22</span> Bean Validation: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partcdi.htm#GJBNR">Part V Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basic.htm#GIWHB"><span class="secnum">23</span> Introduction to Contexts and Dependency Injection for Java EE</a></h2>
<h2 class="tocheader"><a href="cdi-basicexamples.htm#GJBLS"><span class="secnum">24</span> Running the Basic Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="cdi-adv.htm#GJEHI"><span class="secnum">25</span> Contexts and Dependency Injection for Java EE: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="cdi-adv-examples.htm#GKHRE"><span class="secnum">26</span> Running the Advanced Contexts and Dependency Injection Examples</a></h2>
<h2 class="tocheader"><a href="partwebsvcs.htm#BNAYK">Part VI Web Services</a></h2>
<h2 class="tocheader"><a href="webservices-intro.htm#GIJTI"><span class="secnum">27</span> Introduction to Web Services</a></h2>
<h2 class="tocheader"><a href="jaxws.htm#BNAYL"><span class="secnum">28</span> Building Web Services with JAX-WS</a></h2>
<h2 class="tocheader"><a href="jaxrs.htm#GIEPU"><span class="secnum">29</span> Building RESTful Web Services with JAX-RS</a></h2>
<h2 class="tocheader"><a href="jaxrs-client.htm#BABEIGIH"><span class="secnum">30</span> Accessing REST Resources with the JAX-RS Client API</a></h2>
<h2 class="tocheader"><a href="jaxrs-advanced.htm#GJJXE"><span class="secnum">31</span> JAX-RS: Advanced Topics and an Example</a></h2>
<h2 class="tocheader"><a href="partentbeans.htm#BNBLR">Part VII Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-intro.htm#GIJSZ"><span class="secnum">32</span> Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-gettingstarted.htm#GIJRE"><span class="secnum">33</span> Getting Started with Enterprise Beans</a></h2>
<h2 class="tocheader"><a href="ejb-basicexamples.htm#GIJRB"><span class="secnum">34</span> Running the Enterprise Bean Examples</a></h2>
<h2 class="tocheader"><a href="ejb-embedded.htm#GKCQZ"><span class="secnum">35</span> Using the Embedded Enterprise Bean Container</a></h2>
<h2 class="tocheader"><a href="ejb-async.htm#GKIDZ"><span class="secnum">36</span> Using Asynchronous Method Invocation in Session Beans</a></h2>
<h2 class="tocheader"><a href="partpersist.htm#BNBPY">Part VIII Persistence</a></h2>
<h2 class="tocheader"><a href="persistence-intro.htm#BNBPZ"><span class="secnum">37</span> Introduction to the Java Persistence API</a></h2>
<h2 class="tocheader"><a href="persistence-basicexamples.htm#GIJST"><span class="secnum">38</span> Running the Persistence Examples</a></h2>
<h2 class="tocheader"><a href="persistence-querylanguage.htm#BNBTG"><span class="secnum">39</span> The Java Persistence Query Language</a></h2>
<h2 class="tocheader"><a href="persistence-criteria.htm#GJITV"><span class="secnum">40</span> Using the Criteria API to Create Queries</a></h2>
<h2 class="tocheader"><a href="persistence-string-queries.htm#GKJIQ"><span class="secnum">41</span> Creating and Using String-Based Criteria Queries</a></h2>
<h2 class="tocheader"><a href="persistence-locking.htm#GKJJF"><span class="secnum">42</span> Controlling Concurrent Access to Entity Data with Locking</a></h2>
<h2 class="tocheader"><a href="persistence-entitygraphs.htm#BABIJIAC"><span class="secnum">43</span> Creating Fetch Plans with Entity Graphs</a></h2>
<h2 class="tocheader"><a href="persistence-cache.htm#GKJIA"><span class="secnum">44</span> Using a Second-Level Cache with Java Persistence API Applications</a></h2>
<h2 class="tocheader"><a href="partmessaging.htm#GFIRP3">Part IX Messaging</a></h2>
<h2 class="tocheader"><a href="jms-concepts.htm#BNCDQ"><span class="secnum">45</span> Java Message Service Concepts</a></h2>
<h2 class="tocheader"><a href="jms-examples.htm#BNCGV"><span class="secnum">46</span> Java Message Service Examples</a></h2>
<h2 class="tocheader"><a href="partsecurity.htm#GIJRP">Part X Security</a></h2>
<h2 class="tocheader"><a href="security-intro.htm#BNBWJ"><span class="secnum">47</span> Introduction to Security in the Java EE Platform</a></h2>
<h2 class="tocheader"><a href="security-webtier.htm#BNCAS"><span class="secnum">48</span> Getting Started Securing Web Applications</a></h2>
<h2 class="tocheader"><a href="security-javaee.htm#BNBYK"><span class="secnum">49</span> Getting Started Securing Enterprise Applications</a></h2>
<h2 class="tocheader"><a href="security-advanced.htm#GJJWX"><span class="secnum">50</span> Java EE Security: Advanced Topics</a></h2>
<h2 class="tocheader"><a href="partsupporttechs.htm#GIJUE">Part XI Java EE Supporting Technologies</a></h2>
<h2 class="tocheader"><a href="transactions.htm#BNCIH"><span class="secnum">51</span> Transactions</a></h2>
<h2 class="tocheader"><a href="resources.htm#BNCJH"><span class="secnum">52</span> Resource Adapters and Contracts</a></h2>
<h2 class="tocheader"><a href="connectorexample.htm#GLODB"><span class="secnum">53</span> The Resource Adapter Examples</a></h2>
<h2 class="tocheader"><a href="interceptors.htm#GKEED"><span class="secnum">54</span> Using Java EE Interceptors</a></h2>
<h2 class="tocheader"><a href="batch-processing.htm#GKJIQ6"><span class="secnum">55</span> Batch Processing</a></h2>
<h2 class="tocheader"><a href="concurrency-utilities.htm#GKJIQ8"><span class="secnum">56</span> Concurrency Utilities for Java EE</a></h2>
<h2 class="tocheader"><a href="partcasestudies.htm#GKGJW">Part XII Case Studies</a></h2>
<h2 class="tocheader"><a href="dukes-bookstore.htm#GLNVI"><span class="secnum">57</span> Duke's Bookstore Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-tutoring.htm#GKAEE"><span class="secnum">58</span> Duke's Tutoring Case Study Example</a></h2>
<h2 class="tocheader"><a href="dukes-forest.htm#GLNPW"><span class="secnum">59</span> Duke's Forest Case Study Example</a></h2>
<h2 class="tocheader"><a href="index.htm">Index</a></h2>
 

                    </div><!-- End toc box -->
                </div>
				<!-- End sidebar_toc box -->


                <!-- Sidebar item feedback -->
                <div id="sidebar_feedback_box" class="type_med_gry">
                    <p class="boxtitle">Feedback</p>
                    <p><a href="http://docs.oracle.com/javaee/support/feedback.htm">Send us feedback about this document.</a></p>
                </div>
				<!-- end sidebar_feedback_box -->

            </div>
			<!-- end #sidebar -->
            <!--///////// End Side Bar /////////-->




            <!--///////// Main Content /////////-->
            <div id="mainContent">

                <!-- Book Info div is used only for multipage documents -->
                <div id="bookTitle">
                    <h1>The Java EE 7 Tutorial  </h1>
                </div>
			   <!-- End BookInfo div tag -->



                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jsf-facelets008.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jsf-el.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>              
                <!-- END NEXT_PREVIOUS BUTTONS -->




                <!-- /////////////// Start content copied from DARB output ////////////// -->
				<div class="ind">

 				<!-- [REPLACE_INI_TITLE_PAGE_CONTENTS] -->
				 <a id="BABGECCJ" name="BABGECCJ"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h1 class="sect1"><span class="secnum">8.9</span> <a id="sthref387" name="sthref387"></a><a id="sthref388" name="sthref388"></a>HTML5-Friendly Markup</h1>
<p>When you want to produce user interface features for which HTML does not have its own elements, you can create a custom JavaServer Faces component and insert it in your Facelets page. This mechanism can cause a simple element to create complex web code. However, creating such a component is a significant task (see <a href="jsf-custom.htm#BNAVG">Chapter 15, "Creating Custom UI Components and Other Custom Objects"</a>).</p>
<p>HTML5 offers new elements and attributes that can make it unnecessary to write your own components. It also provides many new capabilities for existing components. JavaServer Faces technology supports HTML5 not by introducing new UI components that imitate HTML5 ones but by allowing you to use HTML5 markup directly. It also allows you to use JavaServer Faces attributes within HTML5 elements. JavaServer Faces technology support for HTML5 falls into two categories:</p>
<ul>
<li>
<p>Pass-through elements</p>
</li>
<li>
<p>Pass-through attributes</p>
</li>
</ul>
<p>The effect of the HTML5-friendly markup feature is to offer the Facelets page author almost complete control over the rendered page output, rather than having to pass this control off to component authors. You can mix and match JavaServer Faces and HTML5 components and elements as you see fit.</p>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref389" name="sthref389"></a>
<h2 class="sect2"><span class="secnum">8.9.1</span> <a id="sthref390" name="sthref390"></a>Using Pass-Through Elements</h2>
<p>Pass-through elements allow you to use HTML5 tags and attributes but to treat them as equivalent to JavaServer Faces components associated with a server-side <code>UIComponent</code> instance.</p>
<p>To make an element that is not a JavaServer Faces element a pass-through element, specify at least one of its attributes using the <code>http://xmlns.jcp.org/jsf</code> namespace. For example, the following code declares the namespace with the short name <code>jsf</code>:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;html ... xmlns:jsf="http://xmlns.jcp.org/jsf"
...
    &lt;input type="email" jsf:id="email" name="email"
           value="#{reservationBean.email}" required="required"/&gt;
</pre>
<p>Here, the <code>jsf</code> prefix is placed on the <code>id</code> attribute so that the HTML5 input tag's attributes are treated as part of the Facelets page. This means that, for example, you can use EL expressions to retrieve managed bean properties.</p>
<p><a href="#BABJADGH">Table 8-4</a> shows how pass-through elements are rendered as Facelets tags. The JSF implementation uses the element name and the identifying attribute to determine the corresponding Facelets tag that will be used in the server-side processing. The browser, however, interprets the markup that the page author has written.</p>
<div class="tblhruleformal"><a id="sthref391" name="sthref391"></a><a id="BABJADGH" name="BABJADGH"></a>
<p class="titleintable">Table 8-4 How Facelets Renders HTML5 Elements</p>
<table class="HRuleFormal" title="How Facelets Renders HTML5 Elements" summary="This table lists the pass-through HTML5 elements, their identifying attributes, and how they are rendered as Facelets tags." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="*" />
<col width="33%" />
<col width="33%" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t5">HTML5 Element Name</th>
<th align="left" valign="bottom" id="r1c2-t5">Identifying Attribute</th>
<th align="left" valign="bottom" id="r1c3-t5">Facelets Tag</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t5" headers="r1c1-t5">
<p><code>a</code></p>
</td>
<td align="left" headers="r2c1-t5 r1c2-t5">
<p><code>jsf:action</code></p>
</td>
<td align="left" headers="r2c1-t5 r1c3-t5">
<p><code>h:commandLink</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t5" headers="r1c1-t5">
<p><code>a</code></p>
</td>
<td align="left" headers="r3c1-t5 r1c2-t5">
<p><code>jsf:actionListener</code></p>
</td>
<td align="left" headers="r3c1-t5 r1c3-t5">
<p><code>h:commandLink</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t5" headers="r1c1-t5">
<p><code>a</code></p>
</td>
<td align="left" headers="r4c1-t5 r1c2-t5">
<p><code>jsf:value</code></p>
</td>
<td align="left" headers="r4c1-t5 r1c3-t5">
<p><code>h:outputLink</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t5" headers="r1c1-t5">
<p><code>a</code></p>
</td>
<td align="left" headers="r5c1-t5 r1c2-t5">
<p><code>jsf:outcome</code></p>
</td>
<td align="left" headers="r5c1-t5 r1c3-t5">
<p><code>h:link</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t5" headers="r1c1-t5">
<p><code>body</code></p>
</td>
<td align="left" headers="r6c1-t5 r1c2-t5"><br /></td>
<td align="left" headers="r6c1-t5 r1c3-t5">
<p><code>h:body</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t5" headers="r1c1-t5">
<p><code>button</code></p>
</td>
<td align="left" headers="r7c1-t5 r1c2-t5"><br /></td>
<td align="left" headers="r7c1-t5 r1c3-t5">
<p><code>h:commandButton</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t5" headers="r1c1-t5">
<p><code>button</code></p>
</td>
<td align="left" headers="r8c1-t5 r1c2-t5">
<p><code>jsf:outcome</code></p>
</td>
<td align="left" headers="r8c1-t5 r1c3-t5">
<p><code>h:button</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r9c1-t5" headers="r1c1-t5">
<p><code>form</code></p>
</td>
<td align="left" headers="r9c1-t5 r1c2-t5"><br /></td>
<td align="left" headers="r9c1-t5 r1c3-t5">
<p><code>h:form</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r10c1-t5" headers="r1c1-t5">
<p><code>head</code></p>
</td>
<td align="left" headers="r10c1-t5 r1c2-t5"><br /></td>
<td align="left" headers="r10c1-t5 r1c3-t5">
<p><code>h:head</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r11c1-t5" headers="r1c1-t5">
<p><code>img</code></p>
</td>
<td align="left" headers="r11c1-t5 r1c2-t5"><br /></td>
<td align="left" headers="r11c1-t5 r1c3-t5">
<p><code>h:graphicImage</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r12c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r12c1-t5 r1c2-t5">
<p><code>type="button"</code></p>
</td>
<td align="left" headers="r12c1-t5 r1c3-t5">
<p><code>h:commandButton</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r13c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r13c1-t5 r1c2-t5">
<p><code>type="checkbox"</code></p>
</td>
<td align="left" headers="r13c1-t5 r1c3-t5">
<p><code>h:selectBooleanCheckbox</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r14c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r14c1-t5 r1c2-t5">
<p><code>type="color"</code></p>
</td>
<td align="left" headers="r14c1-t5 r1c3-t5">
<p><code>h:inputText</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r15c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r15c1-t5 r1c2-t5">
<p><code>type="date"</code></p>
</td>
<td align="left" headers="r15c1-t5 r1c3-t5">
<p><code>h:inputText</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r16c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r16c1-t5 r1c2-t5">
<p><code>type="datetime"</code></p>
</td>
<td align="left" headers="r16c1-t5 r1c3-t5">
<p><code>h:inputText</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r17c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r17c1-t5 r1c2-t5">
<p><code>type="datetime-local"</code></p>
</td>
<td align="left" headers="r17c1-t5 r1c3-t5">
<p><code>h:inputText</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r18c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r18c1-t5 r1c2-t5">
<p><code>type="email"</code></p>
</td>
<td align="left" headers="r18c1-t5 r1c3-t5">
<p><code>h:inputText</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r19c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r19c1-t5 r1c2-t5">
<p><code>type="month"</code></p>
</td>
<td align="left" headers="r19c1-t5 r1c3-t5">
<p><code>h:inputText</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r20c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r20c1-t5 r1c2-t5">
<p><code>type="number"</code></p>
</td>
<td align="left" headers="r20c1-t5 r1c3-t5">
<p><code>h:inputText</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r21c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r21c1-t5 r1c2-t5">
<p><code>type="range"</code></p>
</td>
<td align="left" headers="r21c1-t5 r1c3-t5">
<p><code>h:inputText</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r22c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r22c1-t5 r1c2-t5">
<p><code>type="search"</code></p>
</td>
<td align="left" headers="r22c1-t5 r1c3-t5">
<p><code>h:inputText</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r23c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r23c1-t5 r1c2-t5">
<p><code>type="time"</code></p>
</td>
<td align="left" headers="r23c1-t5 r1c3-t5">
<p><code>h:inputText</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r24c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r24c1-t5 r1c2-t5">
<p><code>type="url"</code></p>
</td>
<td align="left" headers="r24c1-t5 r1c3-t5">
<p><code>h:inputText</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r25c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r25c1-t5 r1c2-t5">
<p><code>type="week"</code></p>
</td>
<td align="left" headers="r25c1-t5 r1c3-t5">
<p><code>h:inputText</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r26c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r26c1-t5 r1c2-t5">
<p><code>type="file"</code></p>
</td>
<td align="left" headers="r26c1-t5 r1c3-t5">
<p><code>h:inputFile</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r27c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r27c1-t5 r1c2-t5">
<p><code>type="hidden"</code></p>
</td>
<td align="left" headers="r27c1-t5 r1c3-t5">
<p><code>h:inputHidden</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r28c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r28c1-t5 r1c2-t5">
<p><code>type="password"</code></p>
</td>
<td align="left" headers="r28c1-t5 r1c3-t5">
<p><code>h:inputSecret</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r29c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r29c1-t5 r1c2-t5">
<p><code>type="reset"</code></p>
</td>
<td align="left" headers="r29c1-t5 r1c3-t5">
<p><code>h:commandButton</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r30c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r30c1-t5 r1c2-t5">
<p><code>type="submit"</code></p>
</td>
<td align="left" headers="r30c1-t5 r1c3-t5">
<p><code>h:commandButton</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r31c1-t5" headers="r1c1-t5">
<p><code>input</code></p>
</td>
<td align="left" headers="r31c1-t5 r1c2-t5">
<p><code>type="*"</code></p>
</td>
<td align="left" headers="r31c1-t5 r1c3-t5">
<p><code>h:inputText</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r32c1-t5" headers="r1c1-t5">
<p><code>label</code></p>
</td>
<td align="left" headers="r32c1-t5 r1c2-t5"><br /></td>
<td align="left" headers="r32c1-t5 r1c3-t5">
<p><code>h:outputLabel</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r33c1-t5" headers="r1c1-t5">
<p><code>link</code></p>
</td>
<td align="left" headers="r33c1-t5 r1c2-t5"><br /></td>
<td align="left" headers="r33c1-t5 r1c3-t5">
<p><code>h:outputStylesheet</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r34c1-t5" headers="r1c1-t5">
<p><code>script</code></p>
</td>
<td align="left" headers="r34c1-t5 r1c2-t5"><br /></td>
<td align="left" headers="r34c1-t5 r1c3-t5">
<p><code>h:outputScript</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r35c1-t5" headers="r1c1-t5">
<p><code>select</code></p>
</td>
<td align="left" headers="r35c1-t5 r1c2-t5">
<p><code>multiple="*"</code></p>
</td>
<td align="left" headers="r35c1-t5 r1c3-t5">
<p><code>h:selectManyListbox</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r36c1-t5" headers="r1c1-t5">
<p><code>select</code></p>
</td>
<td align="left" headers="r36c1-t5 r1c2-t5"><br /></td>
<td align="left" headers="r36c1-t5 r1c3-t5">
<p><code>h:selectOneListbox</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r37c1-t5" headers="r1c1-t5">
<p><code>textarea</code></p>
</td>
<td align="left" headers="r37c1-t5 r1c2-t5"><br /></td>
<td align="left" headers="r37c1-t5 r1c3-t5">
<p><code>h:inputTextArea</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref392" name="sthref392"></a>
<h2 class="sect2"><span class="secnum">8.9.2</span> <a id="sthref393" name="sthref393"></a>Using Pass-Through Attributes</h2>
<p>Pass-through attributes are the converse of pass-through elements. They allow you to pass attributes that are not JavaServer Faces attributes through to the browser without interpretation. If you specify a pass-through attribute in a JavaServer Faces <code>UIComponent</code>, the attribute name and value are passed straight through to the browser without being interpreted by JavaServer Faces components or renderers. There are several ways to specify pass-through attributes.</p>
<ul>
<li>
<p>Use the JavaServer Faces namespace for pass-through attributes to prefix the attribute names within a JavaServer Faces component. For example, the following code declares the namespace with the short name <code>p</code>, then passes the <code>type</code>, <code>min</code>, <code>max</code>, <code>required</code>, and <code>title</code> attributes through to the HTML5 <code>input</code> component:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;html ... xmlns:p="http://xmlns.jcp.org/jsf/passthrough"
...
    
&lt;h:form prependId="false"&gt;
&lt;h:inputText id="nights" p:type="number" value="#{bean.nights}" 
             p:min="1" p:max="30" p:required="required" 
             p:title="Enter a number between 1 and 30 inclusive."&gt;
        ...
</pre>
<p>This will cause the following markup to be rendered (assuming that <code>bean.nights</code> has a default value set to 1):</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;input id="nights" type="number" value="1" min="1" max="30"
       required="required" 
       title="Enter a number between 1 and 30 inclusive."&gt;
</pre></li>
<li>
<p>To pass a single attribute, nest the <code>f:passThroughAttribute</code> tag within a component tag. For example:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;h:inputText value="#{user.email}"&gt;
    &lt;f:passThroughAttribute name="type" value="email" /&gt;
&lt;/h:inputText&gt;
</pre>
<p>This code would be rendered similarly to the following:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;input value="me@me.com" type="email" /&gt;
</pre></li>
<li>
<p>To pass a group of attributes, nest the <code>f:passThroughAttributes</code> tag within a component tag, specifying an EL value that must evaluate to a <code>Map&lt;String, Object&gt;</code>. For example:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;h:inputText value="#{bean.nights"&gt;
    &lt;f:passThroughAttributes value="#{bean.nameValuePairs}" /&gt;
&lt;/h:inputText&gt;
</pre>
<p>If the bean used the following <code>Map</code> declaration and initialized the map in the constructor as follows, the markup would be similar to the output of the code that uses the pass-through attribute namespace:</p>
<pre xml:space="preserve" class="oac_no_warn">
private Map&lt;String, Object&gt; nameValuePairs;
...
public Bean() {
    this.nameValuePairs = new HashMap&lt;&gt;();
    this.nameValuePairs.put("type", "number");
    this.nameValuePairs.put("min", "1");
    this.nameValuePairs.put("max", "30");
    this.nameValuePairs.put("required", "required");
    this.nameValuePairs.put("title", 
            "Enter a number between 1 and 4 inclusive.");
}
</pre></li>
</ul>
</div>
<!-- class="sect2" -->
<a id="BABGGIAA" name="BABGGIAA"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" -->
<h2 class="sect2"><span class="secnum">8.9.3</span> <a id="sthref394" name="sthref394"></a><a id="sthref395" name="sthref395"></a>The reservation Example Application</h2>
<p>The <code>reservation</code> example application provides a set of HTML5 <code>input</code> elements of various types to simulate purchasing tickets for a theatrical event. It consists of two Facelets pages, <code>reservation.xhtml</code> and <code>confirmation.xhtml</code>, and a backing bean, <code>ReservationBean.java</code>. The pages use both pass-through attributes and pass-through elements.</p>
<p>The source code for this application is in the <span class="variable">tut-install</span><code>/examples/web/jsf/reservation/</code> directory.</p>
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref396" name="sthref396"></a>
<h3 class="sect3"><span class="secnum">8.9.3.1</span> The Facelets Pages for the reservation Application</h3>
<p>The first important feature of the Facelets pages for the <code>reservation</code> application is the <code>DOCTYPE</code> header. Most Facelets pages in JavaServer Faces applications refer to the XHTML DTD. The facelets pages for this application begin simply with the following <code>DOCTYPE</code> header, which indicates an HTML5 page:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;!DOCTYPE html&gt;
</pre>
<p>The namespace declarations in the <code>html</code> element of the <code>reservation.xhtml</code> page specify both the <code>jsf</code> and the <code>passthrough</code> namespaces:</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;html lang="en"
      xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://xmlns.jcp.org/jsf/passthrough"
      xmlns:jsf="http://xmlns.jcp.org/jsf"&gt;
</pre>
<p>Next, an empty <code>h:head</code> tag followed by an <code>h:outputStylesheet</code> tag within the <code>h:body</code> tag illustrates the use of a relocatable resource (as described in <a href="jsf-facelets007.htm#BABHGBJI">Relocatable Resources</a>):</p>
<pre xml:space="preserve" class="oac_no_warn">
&lt;h:head&gt;
&lt;/h:head&gt;
&lt;h:body&gt;
    &lt;h:outputStylesheet name="css/stylesheet.css" target="head"/&gt;
</pre>
<p>The <code>reservation.xhtml</code> page uses pass-through elements for most of the form fields on the page. This allows it to use some HTML5-specific <code>input</code> element types, such as <code>date</code> and <code>email</code>. For example, the following element renders both a date format and a calendar from which you can choose a date. The <code>jsf</code> prefix on the <code>id</code> attribute makes the element a pass-through one:</p>
<pre xml:space="preserve" class="oac_no_warn">
    &lt;input type="date" jsf:id="date" name="date" 
           value="#{reservationBean.date}" required="required"
           title="Enter or choose a date."/&gt;
</pre>
<p>The field for the number of tickets, however, uses the <code>h:passThroughAttributes</code> tag to pass a <code>Map</code> defined in the managed bean. It also recalculates the total in response to a change in the field:</p>
<pre xml:space="preserve" class="oac_no_warn">
    &lt;h:inputText id="tickets" value="#{reservationBean.tickets}"&gt;
        &lt;f:passThroughAttributes value="#{reservationBean.ticketAttrs}"/&gt;
        &lt;f:ajax event="change" render="total" 
                listener="#{reservationBean.calculateTotal}"/&gt;
    &lt;/h:inputText&gt;
</pre>
<p>The field for the price specifies the <code>number</code> type as a pass-through attribute of the <code>h:inputText</code> element, offering a range of four ticket prices. Here, the <code>p</code> prefix on the HTML5 attributes passes them through to the browser uninterpreted by the JavaServer Faces input component:</p>
<pre xml:space="preserve" class="oac_no_warn">
    &lt;h:inputText id="price" p:type="number" 
                 value="#{reservationBean.price}" 
                 p:min="80" p:max="120"
                 p:step="20" p:required="required" 
                 p:title="Enter a price: 80, 100, 120, or 140."&gt;
        &lt;f:ajax event="change" render="total" 
                listener="#{reservationBean.calculateTotal}"/&gt;
    &lt;/h:inputText&gt;
</pre>
<p>The output of the <code>calculateTotal</code> method that is specified as the listener for the Ajax event is rendered in the output element whose <code>id</code> and <code>name</code> value is <code>total</code>. See <a href="jsf-ajax.htm#GKIOW">Chapter 13, "Using Ajax with JavaServer Faces Technology"</a>, for more information.</p>
<p>The second Facelets page, <code>confirmation.xhtml</code>, uses a pass-through <code>output</code> element to display the values entered by the user and provides a Facelets <code>h:commandButton</code> tag to allow the user to return to the <code>reservation.xhtml</code> page.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref397" name="sthref397"></a>
<h3 class="sect3"><span class="secnum">8.9.3.2</span> The Managed Bean for the reservation Application</h3>
<p>The session-scoped managed bean for the reservation application, <code>ReservationBean.java</code>, contains properties for all the elements on the Facelets pages. It also contains two methods, <code>calculateTotal</code> and <code>clear</code>, that act as listeners for Ajax events on the <code>reservation.xhtml</code> page.</p>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref398" name="sthref398"></a>
<h3 class="sect3"><span class="secnum">8.9.3.3</span> To Build, Package, and Deploy the reservation Example Using NetBeans IDE</h3>
<ol>
<li>
<p>Make sure that GlassFish Server has been started (see <a href="usingexamples002.htm#BNADI">Starting and Stopping GlassFish Server</a>).</p>
</li>
<li>
<p>From the <span class="gui-object-action">File</span> menu, choose <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-title">Open Project</span> dialog box, navigate to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/web/jsf
</pre></li>
<li>
<p>Select the <code>reservation</code> folder.</p>
</li>
<li>
<p>Click <span class="gui-object-action">Open Project</span>.</p>
</li>
<li>
<p>In the <span class="gui-object-action">Projects</span> tab, right-click the <code>reservation</code> project and select <span class="gui-object-action">Build</span>.</p>
<p>This option builds the example application and deploys it to your GlassFish Server instance.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref399" name="sthref399"></a>
<h3 class="sect3"><span class="secnum">8.9.3.4</span> To Build, Package, and Deploy the reservation Example Using Maven</h3>
<ol>
<li>
<p>Make sure that GlassFish Server has been started (see <a href="usingexamples002.htm#BNADI">Starting and Stopping GlassFish Server</a>).</p>
</li>
<li>
<p>In a terminal window, go to:</p>
<pre xml:space="preserve" class="oac_no_warn">
<span class="variable">tut-install</span>/examples/web/jsf/reservation/
</pre></li>
<li>
<p>Enter the following command:</p>
<pre xml:space="preserve" class="oac_no_warn">
mvn install
</pre>
<p>This command builds and packages the application into a WAR file, <code>reservation.war</code>, that is located in the <code>target</code> directory. It then deploys the WAR file to your GlassFish Server instance.</p>
</li>
</ol>
</div>
<!-- class="sect3" -->
<div class="sect3"><!-- infolevel="all" infotype="General" --><a id="sthref400" name="sthref400"></a>
<h3 class="sect3"><span class="secnum">8.9.3.5</span> To Run the reservation Example</h3>
<p>At the time of the publication of this tutorial, the browser that most fully implements HTML5 is Google Chrome, and it is recommended that you use it to run this example. Other browsers are catching up, however, and may work equally well by the time you read this.</p>
<ol>
<li>
<p>Enter the following URL in your web browser:</p>
<pre xml:space="preserve" class="oac_no_warn">
http://localhost:8080/reservation
</pre></li>
<li>
<p>Enter information in the fields of the <code>reservation.xhtml</code> page.</p>
<p>The <span class="gui-object-action">Performance Date</span> field has a date field with up and down arrows that allow you to increment and decrement the month, day, and year as well as a larger down arrow that brings up a date editor in calendar form.</p>
<p>The <span class="gui-object-action">Number of Tickets</span> and <span class="gui-object-action">Ticket Price</span> fields also have up and down arrows that allow you to increment and decrement the values within the allowed range and steps. The Estimated Total changes when you change either of these two fields.</p>
<p>Email addresses and dates are checked for format, but not for validity (you can make a reservation for a past date, for instance).</p>
</li>
<li>
<p>Click <span class="gui-object-action">Make Reservation</span> to complete the reservation or <span class="gui-object-action">Clear</span> to restore the fields to their default values.</p>
</li>
<li>
<p>If you click <span class="gui-object-action">Make Reservation</span>, the <code>confirmation.xhtml</code> page appears, displaying the submitted values.</p>
<p>Click <span class="gui-object-action">Back</span> to return to the <code>reservation.xhtml</code> page.</p>
</li>
</ol>
</div>
<!-- class="sect3" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" --> 
				
                </div>  
				<!-- End ind div tag -->
                <!-- /////////////// End content copied from DARB output ////////////// -->



                

                <!-- START NEXT_PREVIOUS BUTTONS -->
				<div class="pagestepper">
<table class="simple oac_no_warn" summary="" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td><div align="left"><a href="jsf-facelets008.htm"><img src="../images/previouspage.gif" alt="Previous" border="0" /></a></div></td>
<td><div align="right"><a href="jsf-el.htm"><img src="../images/nextpage.gif" alt="Next" border="0" /></a></div></td>
</tr>
</tbody></table>
</div>		          
                <!-- END NEXT_PREVIOUS BUTTONS -->


                <!-- end #mainContent -->
            </div>
			<br class="clearfloat" />
            <!--///////// End Main Content /////////-->



            <!--///////// Footer /////////-->
            <div id="footer">

                <!-- Start SiteCatalyst (Omniture) code   -->
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code_download.js"></script>
                <script type="text/javascript" src="http://www.oracle.com/ocom/groups/systemobject/@mktg_admin/documents/systemobject/s_code.js"></script>


                <!-- ********** DO NOT ALTER ANYTHING BELOW THIS LINE ! *********** -->

                <!--  Below code will send the info to Omniture server -->
                <script  type="text/javascript">var s_code=s.t();if(s_code)document.write(s_code)</script>

                <!-- End SiteCatalyst code -->



                <!-- Footer Legal info -->
                <div id="blur"><span class="copyrightlogo">Copyright 2014, Oracle and/or its affiliates. All rights reserved.</span>
                    <a href="../../dcommon/html/cpyr.htm"><br />
                        <span class="copyrightlogo">Legal Notices</span></a></div> <!-- End footer legal info -->

                <!-- end #footer -->
            </div>
            <!--///////// End Footer /////////-->

            <!-- end #container -->
        </div>


    </body>
</html>

